
cbuffer vc2 : register(b2)
{
  float4x4 projTM : packoffset(c0);
  row_major float3x4 objTM : packoffset(c16);
  float3 Position_scale : packoffset(c20);
  float3 ClipScissorMin : packoffset(c33);
  float3 ClipScissorMax : packoffset(c34);
}

Texture2D<float4> StereoParams : register(t125);

void main(
  float3 v0 : POSITION0,
  float3 v1 : NORMAL0,
  float4 v2 : TANGENT0,
  int3 v3 : POSITION1,
  float3 v4 : COLOR0,
  float3 v5 : NORMAL1,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0)
{
  float4 r0,r1;
  uint4 bitmask;
  r0.xyzw = v3.xyzy;
  r0.xyzw = v4.xxxy * r0.xyzw;
  r1.xyz = r0.xyz * float3(1.220703e-004,1.220703e-004,1.220703e-004) + v0.xyz;
  r0.x = r0.w * 1.831054688e-004 + r1.y;
  r1.y = -v4.y * 1.600000024e+000 + r0.x;
  r1.w = 1.000000000e+000;
  r0.x = dot(objTM._m00_m01_m02_m03, r1.xyzw);
  r0.y = dot(objTM._m10_m11_m12_m13, r1.xyzw);
  r0.z = dot(objTM._m20_m21_m22_m23, r1.xyzw);
  r0.w = 1.000000000e+000;
  r1.x = dot(r0.xyzw, projTM._m00_m10_m20_m30);
  r1.y = dot(r0.xyzw, projTM._m01_m11_m21_m31);
  r1.z = dot(r0.xyzw, projTM._m02_m12_m22_m32);
  r0.x = dot(r0.xyzw, projTM._m03_m13_m23_m33);
  r0.xyz = r1.xyz / r0.xxx;
  r1.x = r0.x >= ClipScissorMax.x;
  r1.y = r0.y >= ClipScissorMax.y;
  r1.z = r0.z >= ClipScissorMax.z;
  r0.x = ClipScissorMin.x >= r0.x;
  r0.y = ClipScissorMin.y >= r0.y;
  r0.z = ClipScissorMin.z >= r0.z;
  r0.x = r0.x ? 1 : 1;
  r0.y = r0.y ? 1 : 1;
  r0.z = r0.z ? 1 : 1;
  r1.x = r1.x ? 1 : 1;
  r1.y = r1.y ? 1 : 1;
  r1.z = r1.z ? 1 : 1;
  r0.xyz = r1.xyz + r0.xyz;
  r0.x = dot(r0.xyz, r0.xyz);
  r0.x = r0.x != 0.000000;
  r0.x = r0.x ? -9.999900e-001 : -2;
  r0.y = r0.x ? 9.999900e-001 : -2;
  r0.z = r0.x ? 1.000000e-005 : -2;
  r0.w = r0.x ? 1 : 1;


//Mike_ar69 - Stereo Shift
float4 r21;
float4 stereoParams = StereoParams.Load(0);
r21.xyzw = r0.xyzw;
r0.x += stereoParams.x * (r0.w - stereoParams.y);
o0.xyzw = r21.xyzw;


  o1.xyzw = r0.xyzw;
  return;
}
