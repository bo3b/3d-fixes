cbuffer cb4 : register(b4)
{
  float4 cb4[11];
}


cbuffer vc0 : register(b0)
{
  float4 IR_Light_Pos : packoffset(c0);
  float4 IR_Light_Dir : packoffset(c1);
  float4x4 Shadow_map_projTM : packoffset(c2);
  float4 Shadow_map_fade_params : packoffset(c6);
  float4 Camera_pos : packoffset(c7);
  float4 Camera_rvec : packoffset(c8);
  float4 Camera_uvec : packoffset(c9);
  float4 Camera_fvec : packoffset(c10);
  float4 Link_categories : packoffset(c11);
  float4x4 Projection_texture_xform : packoffset(c12);
  float2 Scroll : packoffset(c16);
  float4 IR_light_back_color : packoffset(c17);
  float4 IR_Light_Color : packoffset(c18);
  float4 IR_Light_Info : packoffset(c19);
  float4 IR_Spot_Info : packoffset(c20);
  float Shadow_map_size : packoffset(c21);
  float ir_light_specular_intensity : packoffset(c22);
}

cbuffer vc4 : register(b4)
{
  float4 IR_Similarity_Data : packoffset(c10);
}
SamplerState ir_shadow_mapSampler_s : register(s0);
SamplerState Projection_textureSampler_s : register(s1);
SamplerState Light_rampsSampler_s : register(s2);
SamplerState IR_GBuffer_LightingSampler_s : register(s12);
SamplerState IR_GBuffer_NormalsSampler_s : register(s13);
SamplerState IR_GBuffer_DepthSampler_s : register(s14);
Texture2D<float4> ir_shadow_mapSampler : register(t0);
Texture2D<float4> Projection_textureSampler : register(t1);
Texture2D<float4> Light_rampsSampler : register(t2);
Texture2D<float4> IR_GBuffer_LightingSampler : register(t12);
Texture2D<float4> IR_GBuffer_NormalsSampler : register(t13);
Texture2D<float4> IR_GBuffer_DepthSampler : register(t14);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : SV_Position0,
  float2 v1 : TEXCOORD0,
  float3 v2 : TEXCOORD1,
  float  v3 : TEXCOORD2,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9;
  uint4 bitmask;
  
//mike_ar69 
float4 stereoParams = StereoParams.Load(0);
float4 r21;

  r0.xyzw = IR_GBuffer_DepthSampler.Sample(IR_GBuffer_DepthSampler_s, v1.xy).xyzw;
  r0.x = cb4[10].z * r0.x + cb4[10].w;
  r0.x = 1.000000e+000 / r0.x;
  r0.yzw = v2.xyz * r0.xxx;
  
r21.xyz = v2.xyz * r0.xxx;
r21.x -=  stereoParams.x * (r0.x - stereoParams.y) *v3; //0.62; 
r0.y = r21.x;
r0.z = r21.y;
r0.w = r21.z;

  r1.xyz = Camera_uvec.xyz * r0.zzz;
  r1.xyz = r0.yyy * Camera_rvec.xyz + r1.xyz;
  r1.xyz = r0.www * Camera_fvec.xyz + r1.xyz;
  
  r1.xyz = Camera_pos.xyz + r1.xyz;
  r1.w = 1.000000000e+000;
  r2.x = dot(r1.xyzw, Shadow_map_projTM._m00_m10_m20_m30);
  r2.y = dot(r1.xyzw, Shadow_map_projTM._m01_m11_m21_m31);
  r2.z = dot(r1.xyzw, Shadow_map_projTM._m02_m12_m22_m32);
  r2.w = dot(r1.xyzw, Shadow_map_projTM._m03_m13_m23_m33);
  r2.xyz = r2.xyz / r2.www;
  r2.w = 1.000000e+000 / Shadow_map_size;
  r3.xyzw = r2.wwww * float4(2.000000e+000,0.000000e+000,-1.000000e+000,1.000000e+000) + r2.xyxy;
  r4.xyzw = ir_shadow_mapSampler.Sample(ir_shadow_mapSampler_s, r3.xy).xyzw;
  r3.xyzw = ir_shadow_mapSampler.Sample(ir_shadow_mapSampler_s, r3.zw).xyzw;
  r3.x = 4.999999874e-005 + r3.x;
  r3.x = r3.x < r2.z;
  r3.y = r3.x ? 0.000000000e+000 : 1.000000000e+000;
  r3.z = 4.999999874e-005 + r4.x;
  r3.z = r3.z < r2.z;
  r4.x = r3.z ? 0.000000000e+000 : 1.000000000e+000;
  r5.xyzw = r2.wwww * float4(2.000000e+000,1.000000e+000,1.000000e+000,2.000000e+000) + r2.xyxy;
  r6.xyzw = ir_shadow_mapSampler.Sample(ir_shadow_mapSampler_s, r5.xy).xyzw;
  r5.xyzw = ir_shadow_mapSampler.Sample(ir_shadow_mapSampler_s, r5.zw).xyzw;
  r3.z = 4.999999874e-005 + r5.x;
  r3.z = r3.z < r2.z;
  r5.y = r3.z ? 0.000000000e+000 : 1.000000000e+000;
  r3.z = 4.999999874e-005 + r6.x;
  r3.z = r3.z < r2.z;
  r4.y = r3.z ? 0.000000000e+000 : 1.000000000e+000;
  r6.xyzw = r2.wwww * float4(-1.000000e+000,0.000000e+000,0.000000e+000,-1.000000e+000) + r2.xyxy;
  r7.xyzw = ir_shadow_mapSampler.Sample(ir_shadow_mapSampler_s, r6.xy).xyzw;
  r6.xyzw = ir_shadow_mapSampler.Sample(ir_shadow_mapSampler_s, r6.zw).xyzw;
  r3.z = 4.999999874e-005 + r6.x;
  r3.z = r3.z < r2.z;
  r6.x = r3.z ? 0.000000000e+000 : 1.000000000e+000;
  r3.z = 4.999999874e-005 + r7.x;
  r3.z = r3.z < r2.z;
  r3.x = r3.z ? 0.000000000e+000 : 1.000000000e+000;
  r3.zw = r4.xy + -r3.xy;
  r4.xy = Shadow_map_size * r2.xy;
  r4.xy = frac(r4.xy);
  r3.xy = r4.xx * r3.zw + r3.xy;
  r3.x = dot(r3.xy, float2(1.000000e+000,1.000000e+000));
  r7.xyzw = ir_shadow_mapSampler.Sample(ir_shadow_mapSampler_s, r2.xy).xyzw;
  r3.y = 4.999999874e-005 + r7.x;
  r3.y = r3.y < r2.z;
  r7.x = r3.y ? 0.000000000e+000 : 1.000000000e+000;
  r3.yz = r2.xy + r2.ww;
  r8.xyzw = ir_shadow_mapSampler.Sample(ir_shadow_mapSampler_s, r3.yz).xyzw;
  r3.y = 4.999999874e-005 + r8.x;
  r3.y = r3.y < r2.z;
  r7.w = r3.y ? 0.000000000e+000 : 1.000000000e+000;
  r8.xyzw = r2.wwww * float4(1.000000e+000,0.000000e+000,0.000000e+000,1.000000e+000) + r2.xyxy;
  r9.xyzw = ir_shadow_mapSampler.Sample(ir_shadow_mapSampler_s, r8.xy).xyzw;
  r8.xyzw = ir_shadow_mapSampler.Sample(ir_shadow_mapSampler_s, r8.zw).xyzw;
  r3.y = 4.999999874e-005 + r8.x;
  r3.y = r3.y < r2.z;
  r7.z = r3.y ? 0.000000000e+000 : 1.000000000e+000;
  r3.y = 4.999999874e-005 + r9.x;
  r3.y = r3.y < r2.z;
  r7.y = r3.y ? 0.000000000e+000 : 1.000000000e+000;
  r3.y = dot(r7.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
  r3.x = r3.y + r3.x;
  r7.xyzw = r2.wwww * float4(1.000000e+000,-1.000000e+000,0.000000e+000,2.000000e+000) + r2.xyxy;
  r8.xyzw = ir_shadow_mapSampler.Sample(ir_shadow_mapSampler_s, r7.zw).xyzw;
  r7.xyzw = ir_shadow_mapSampler.Sample(ir_shadow_mapSampler_s, r7.xy).xyzw;
  r3.y = 4.999999874e-005 + r7.x;
  r3.y = r3.y < r2.z;
  r6.y = r3.y ? 0.000000000e+000 : 1.000000000e+000;
  r3.y = 4.999999874e-005 + r8.x;
  r3.y = r3.y < r2.z;
  r5.x = r3.y ? 0.000000000e+000 : 1.000000000e+000;
  r3.yz = -r6.xy + r5.xy;
  r3.yz = r4.yy * r3.yz + r6.xy;
  r3.y = dot(r3.yz, float2(1.000000e+000,1.000000e+000));
  r3.x = r3.x + r3.y;
  r3.yz = r2.ww * float2(2.000000e+000,2.000000e+000) + r2.xy;
  r5.xyzw = ir_shadow_mapSampler.Sample(ir_shadow_mapSampler_s, r3.yz).xyzw;
  r3.y = 4.999999874e-005 + r5.x;
  r3.y = r3.y < r2.z;
  r5.y = r3.y ? 0.000000000e+000 : 1.000000000e+000;
  r3.yz = r2.ww * float2(-1.000000e+000,-1.000000e+000) + r2.xy;
  r6.xyzw = r2.wwww * float4(2.000000e+000,-1.000000e+000,-1.000000e+000,2.000000e+000) + r2.xyxy;
  r7.xyzw = ir_shadow_mapSampler.Sample(ir_shadow_mapSampler_s, r3.yz).xyzw;
  r2.x = 4.999999874e-005 + r7.x;
  r2.x = r2.x < r2.z;
  r7.xyzw = ir_shadow_mapSampler.Sample(ir_shadow_mapSampler_s, r6.xy).xyzw;
  r6.xyzw = ir_shadow_mapSampler.Sample(ir_shadow_mapSampler_s, r6.zw).xyzw;
  r2.w = 4.999999874e-005 + r6.x;
  r2.w = r2.w < r2.z;
  r2.x = r2.x ? 0 : 1;
  r2.y = r2.w ? 0 : 1;
  r2.w = 4.999999874e-005 + r7.x;
  r2.z = r2.w < r2.z;
  r5.x = r2.z ? 0.000000000e+000 : 1.000000000e+000;
  r2.zw = r5.xy + -r2.xy;
  r2.xy = r4.xx * r2.zw + r2.xy;
  r2.y = r2.y + -r2.x;
  r2.x = r4.y * r2.y + r2.x;
  r2.x = r3.x + r2.x;
  r2.x = -r2.x * 1.111111119e-001 + 1.000000000e+000;
  r2.y = -v2.z * r0.x + Shadow_map_fade_params.y;
  r3.xyz = -r21.xyz + IR_Light_Pos.xyz; //-v2.xyz * r0.xxx + IR_Light_Pos.xyz;
  r0.x = saturate(Shadow_map_fade_params.z * r2.y);
  r0.x = -r2.x * r0.x + 1.000000000e+000;
  r2.x = dot(r1.xyzw, Projection_texture_xform._m00_m10_m20_m30);
  r2.y = dot(r1.xyzw, Projection_texture_xform._m01_m11_m21_m31);
  r1.x = dot(r1.xyzw, Projection_texture_xform._m03_m13_m23_m33);
  r1.xy = r2.xy / r1.xx;
  r1.xy = Scroll.xy + r1.xy;
  r1.xyzw = Projection_textureSampler.Sample(Projection_textureSampler_s, r1.xy).xyzw;
  r2.x = dot(r3.xyz, r3.xyz);
  r2.x = sqrt(r2.x);
  r2.y = -IR_Light_Info.y + r2.x;
  r2.xzw = r3.xyz / r2.xxx;
  r3.x = IR_Light_Info.z + -IR_Light_Info.y;
  r2.y = saturate(r2.y / r3.x);
  r2.y = 1.000000000e+000 + -r2.y;
  r3.x = dot(-r2.xzw, IR_Light_Dir.xyz);
  r3.x = -IR_Spot_Info.y + r3.x;
  r3.x = saturate(IR_Spot_Info.z * r3.x);
  r2.y = r3.x * r2.y;
  r2.y = log2(r2.y);
  r2.y = IR_Light_Info.x * r2.y;
  r2.y = exp2(r2.y);
  r3.x = dot(r0.yzw, r0.yzw);
  r3.x = rsqrt(r3.x);
  r0.yzw = r3.xxx * r0.yzw;
  r3.xyzw = IR_GBuffer_NormalsSampler.Sample(IR_GBuffer_NormalsSampler_s, v1.xy).xyzw;
  r3.xy = r3.xy * float2(2.000000e+000,2.000000e+000) + float2(-1.000000e+000,-1.000000e+000);
  r3.w = dot(r3.xy, r3.xy);
  r3.w = min(r3.w, 1.000000000e+000);
  r3.w = 1.000000000e+000 + -r3.w;
  r3.z = sqrt(r3.w);
  r3.w = r3.z + r3.z;
  r3.xyz = r3.www * r3.xyz;
  r3.w = -r3.z;
  r3.xyz = float3(0.000000e+000,0.000000e+000,1.000000e+000) + r3.xyw;
  r3.w = dot(r3.xyz, r2.xzw);
  r4.x = r3.w + r3.w;
  r2.xzw = r4.xxx * r3.xyz + -r2.xzw;
  r0.y = saturate(dot(r2.xzw, -r0.yzw));
  r0.y = log2(r0.y);
  r4.xyzw = IR_GBuffer_LightingSampler.Sample(IR_GBuffer_LightingSampler_s, v1.xy).xyzw;
  r0.zw = float2(5.120000e+002,8.000000e+000) * r4.xw;
  r0.z = 9.999999747e-005 + abs(r0.z);
  r0.w = round(r0.w);
  r0.w = 2.500000000e-001 + r0.w;
  r3.z = 1.250000000e-001 * r0.w;
  r0.y = r0.z * r0.y;
  r0.y = exp2(r0.y);
  r0.z = dot(IR_Light_Color.xyz, float3(3.000000e-001,5.900000e-001,1.100000e-001));
  r0.y = r0.y * r0.z;
  r0.z = saturate(r3.w);
  r3.xy = r3.ww * float2(5.000000e-001,-5.000000e-001) + float2(5.000000e-001,5.000000e-001);
  r0.w = r4.z * 2.000000000e+000 + -1.000000000e+000;
  r2.xz = r4.zy + r4.zy;
  r0.w = saturate(1.000000000e+000 + -r0.w);
  r2.x = saturate(r2.x);
  r0.w = -r2.x + r0.w;
  r0.z = r0.z * r0.w + r2.x;
  r4.w = r0.y * r0.z;
  r5.xyzw = Light_rampsSampler.Sample(Light_rampsSampler_s, r3.xz).xyzw;
  r0.y = r3.y * r3.y;
  r0.y = min(r0.y, 1.000000000e+000);
  r3.xyz = IR_Light_Color.xyz * r5.xyz;
  r4.xyz = IR_light_back_color.xyz * r0.yyy + r3.xyz;
  r3.xyzw = r4.xyzw * r2.yyyy;
  r0.y = r2.z >= -r2.z;
  r0.z = frac(abs(r2.z));
  r0.y = r0.y ? r0.z : -r0.z;
  r2.x = r0.y >= -1.666667e-001;
  r2.y = r0.y >= 1.666667e-001;
  r2.z = r0.y >= 5.000000e-001;
  r2.w = r0.y >= 8.333333e-001;
  r4.x = 1.666667e-001 >= r0.y;
  r4.y = 5.000000e-001 >= r0.y;
  r4.z = 8.333333e-001 >= r0.y;
  r4.w = 1.166667e+000 >= r0.y;
  r4.x = r4.x ? 1 : 1;
  r4.y = r4.y ? 1 : 1;
  r4.z = r4.z ? 1 : 1;
  r4.w = r4.w ? 1 : 1;
  r2.x = r2.x ? 1 : 1;
  r2.y = r2.y ? 1 : 1;
  r2.z = r2.z ? 1 : 1;
  r2.w = r2.w ? 1 : 1;
  r2.xyzw = min(r4.xyzw, r2.xyzw);
  r0.y = saturate(dot(Link_categories.xyzw, r2.xyzw));
  r2.xyzw = r3.xyzw * r0.yyyy;
  r3.xyzw = r2.xyzw * r1.xyzx + -r2.xyzw;
  r1.xyzw = r1.wwww * r3.xyzw + r2.xyzw;
  r1.w = ir_light_specular_intensity * r1.w;
  o0.xyzw = r1.xyzw * r0.xxxx;
  return;
}