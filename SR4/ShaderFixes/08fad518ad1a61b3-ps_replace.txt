cbuffer cb4 : register(b4)
{
  float4 cb4[2];
}


cbuffer vc0 : register(b0)
{
  float4 Sampling_offsets[17] : packoffset(c0);
  float2 Separated_axis : packoffset(c17);
}

cbuffer vc4 : register(b4)
{
  float4 Tint_color : packoffset(c1);
}
SamplerState base_samplerSampler_s : register(s0);
Texture2D<float4> base_samplerSampler : register(t0);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : SV_Position0,
  float2 v1 : TEXCOORD0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2;
  uint4 bitmask;
  r0.xyzw = float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
  r1.x = 0.000000000e+000;
  while (true) {
  r1.y = (int)r1.x >= (int)9;
  if (r1.y != 0) break;
  r1.yz = Sampling_offsets[r1.x].xy * Separated_axis.xy + v1.xy;
  r2.xyzw = base_samplerSampler.Sample(base_samplerSampler_s, r1.yz).xyzw;
  r0.xyzw = r2.xyzw * Sampling_offsets[r1.x].wwww + r0.xyzw;
  r1.x = (int)r1.x + 1;
  }
  o0.w = r0.w;
  o0.xyz = cb4[1].xyz * r0.xyz;
  return;
}