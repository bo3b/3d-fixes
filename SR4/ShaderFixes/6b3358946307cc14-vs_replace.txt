
cbuffer vc0 : register(b0)
{
  float ScrollRate : packoffset(c0);
  float Frequency : packoffset(c1);
  float Narrowness : packoffset(c2);
  float4 ShimmerColor : packoffset(c3);
}

cbuffer vc1 : register(b1)
{
  float4 Time : packoffset(c0);
  float2 Target_dimensions : packoffset(c2);
}

cbuffer vc2 : register(b2)
{
  float4x4 projTM : packoffset(c0);
  float4 eyePos : packoffset(c4);
  float4 Fog_dist : packoffset(c10);
  row_major float3x4 objTM : packoffset(c16);
  float3 Position_scale : packoffset(c20);
  float4 Dyn_decal_params_1 : packoffset(c43);
  float3 Dyn_decal_pos : packoffset(c45);
  float3 Dyn_decal_rvec : packoffset(c46);
  float3 Dyn_decal_uvec : packoffset(c47);
  float3 Dyn_decal_fvec : packoffset(c48);
  float3 Dyn_decal_scale : packoffset(c49);
}

cbuffer vc3 : register(b3)
{
  row_major float3x4 Bone_weights[64] : packoffset(c0);
}

Texture2D<float4> StereoParams : register(t125);

void main(
  float3 v0 : POSITION0,
  int3 v1 : POSITION1,
  float3 v2 : COLOR0,
  uint4 v3 : BLENDINDICES0,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1)
{
  float4 r0,r1,r2;
  uint4 bitmask;
  r0.xyzw = v1.xyzy;
  r0.xyzw = v2.xxxy * r0.xyzw;
  r1.xyz = r0.xyz * float3(1.220703e-004,1.220703e-004,1.220703e-004) + v0.xyz;
  r0.x = r0.w * 1.831054688e-004 + r1.y;
  r1.y = -v2.y * 1.600000024e+000 + r0.x;
  r0.x = (int)v3.x * 3;
  r1.w = 1.000000000e+000;
  r2.x = dot(Bone_weights[r0.x/3]._m00_m01_m02_m03, r1.xyzw);
  r2.y = dot(Bone_weights[r0.x/3]._m10_m11_m12_m13, r1.xyzw);
  r2.z = dot(Bone_weights[r0.x/3]._m20_m21_m22_m23, r1.xyzw);
  r2.w = 1.000000000e+000;
  r0.x = dot(objTM._m00_m01_m02_m03, r2.xyzw);
  r0.y = dot(objTM._m10_m11_m12_m13, r2.xyzw);
  r0.z = dot(objTM._m20_m21_m22_m23, r2.xyzw);
  r0.w = 1.000000000e+000;
  r1.x = dot(r0.xyzw, projTM._m00_m10_m20_m30);
  r1.y = dot(r0.xyzw, projTM._m01_m11_m21_m31);
  r1.z = dot(r0.xyzw, projTM._m02_m12_m22_m32);
  r1.w = dot(r0.xyzw, projTM._m03_m13_m23_m33);
  r0.xyz = -eyePos.xyz + r0.xyz;


//Mike_ar69 - Stereo Shift
float4 r21;
float4 stereoParams = StereoParams.Load(0);
r21.xyzw = r1.xyzw;
r1.x += stereoParams.x * (r1.w - stereoParams.y);
o0.xyzw = r21.xyzw;


  o1.xyzw = r1.xyzw;
  r0.w = Fog_dist.x * r0.y;
  r1.x = -1.442695022e+000 * r0.w;
  r1.x = exp2(r1.x);
  r1.x = 1.000000000e+000 + -r1.x;
  r0.w = r1.x / r0.w;
  r1.x = 5.000000075e-002 < abs(r0.y);
  r0.x = dot(r0.xyz, r0.xyz);
  r0.x = sqrt(r0.x);
  r0.x = Fog_dist.y * r0.x;
  r0.y = r1.x ? r0.w : 1.000000000e+000;
  r0.x = r0.y * r0.x + -Fog_dist.w;
  r0.x = exp2(-r0.x);
  r0.x = min(r0.x, 1.000000000e+000);
  o2.w = 1.000000000e+000 + -r0.x;
  r0.x = -1.000000000e+000;
  r0.yzw = -Dyn_decal_pos.xyz + v0.xyz;
  r0.yzw = r0.yzw / Dyn_decal_scale.xyz;
  r1.x = dot(r0.yzw, Dyn_decal_uvec.xyz);
  r1.x = Dyn_decal_params_1.y * r1.x;
  r1.y = r1.x * r0.x;
  r2.x = dot(r0.yzw, Dyn_decal_rvec.xyz);
  r2.z = dot(r0.yzw, Dyn_decal_fvec.xyz);
  r1.xz = Dyn_decal_params_1.xz * r2.xz;
  o2.xy = float2(5.000000e-001,5.000000e-001) + r1.xy;
  o2.z = Time.x * ScrollRate + r1.z;
  return;
}
