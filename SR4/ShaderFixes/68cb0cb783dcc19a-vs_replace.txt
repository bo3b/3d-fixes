cbuffer cb0 : register(b0)
{
  float4 cb0[16];
}


cbuffer vc0 : register(b0)
{
  float Diffuse_Map_OffsetU : packoffset(c3);
  float Diffuse_Map_OffsetV : packoffset(c4);
  float Decal_Map_OffsetU : packoffset(c5);
  float Decal_Map_OffsetV : packoffset(c6);
  float4 Diffuse_Color : packoffset(c8);
  float4 Diffuse_Color_2 : packoffset(c9);
  float3 Mod_Color : packoffset(c10);
  float Mod_Value : packoffset(c11);
  float Mod_Width : packoffset(c12);
  float Glow_Illumination : packoffset(c13);
  float Diffuse_Map_TilingU : packoffset(c14);
  float Diffuse_Map_TilingV : packoffset(c15);
  float4 Wet_mask_levels : packoffset(c16);
  float Specular_Map_Amount : packoffset(c17);
  float4 Specular_Color : packoffset(c18);
  float Specular_Alpha : packoffset(c19);
}

cbuffer vc1 : register(b1)
{
  float4 Time : packoffset(c0);
  float2 Target_dimensions : packoffset(c2);
}

cbuffer vc2 : register(b2)
{
  float4x4 projTM : packoffset(c0);
  float4 eyePos : packoffset(c4);
  float4 Object_instance_params_2 : packoffset(c5);
  float4 Fog_dist : packoffset(c10);
  float4 Object_instance_params : packoffset(c15);
  row_major float3x4 objTM : packoffset(c16);
  float3 Render_offset : packoffset(c19);
  float3 Position_scale : packoffset(c20);
}

Texture2D<float4> StereoParams : register(t125);

void main(
  float3 v0 : POSITION0,
  int2 v1 : TEXCOORD0,
  float4 v2 : NORMAL0,
  float4 v3 : TANGENT0,
  out float4 o0 : SV_Position0,
  out float2 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1,
  out float4 o3 : TEXCOORD2,
  out float4 o4 : TEXCOORD3,
  out float4 o5 : TEXCOORD4,
  out float4 o6 : TEXCOORD5,
  out float4 o7 : TEXCOORD6)
{
  float4 r0,r1;
  uint4 bitmask;
  r0.w = 1.000000000e+000;
  r1.xyz = v0.xyz;
  r1.w = 1.000000000e+000;
  r0.x = dot(objTM._m00_m01_m02_m03, r1.xyzw);
  r0.y = dot(objTM._m10_m11_m12_m13, r1.xyzw);
  r0.z = dot(objTM._m20_m21_m22_m23, r1.xyzw);
  r1.x = dot(r0.xyzw, projTM._m00_m10_m20_m30);
  r1.y = dot(r0.xyzw, projTM._m01_m11_m21_m31);
  r1.z = dot(r0.xyzw, projTM._m02_m12_m22_m32);
  r1.w = dot(r0.xyzw, projTM._m03_m13_m23_m33);


//Mike_ar69 - Stereo Shift
float4 r21;
float4 stereoParams = StereoParams.Load(0);
r21.xyzw = r1.xyzw;
r1.x += stereoParams.x * (r1.w - stereoParams.y);
o0.xyzw = r21.xyzw;


  o4.xyzw = r1.xyzw;
  r0.w = Time.x / cb0[3].x;
  r1.xyz = v1.xyy;
  o1.y = r1.y * 9.765625000e-004 + -r0.w;
  r1.xy = float2(9.765625e-004,9.765625e-004) * r1.xy;
  o1.x = r1.x;
  o7.z = r1.x;
  o2.xyzw = Time.xyzw;
  o3.xyz = Render_offset.xyz + r0.xyz;
  r0.xyz = -eyePos.xyz + r0.xyz;
  o3.w = 0.000000000e+000;
  r0.w = v2.w * 2.000000000e+000 + -1.000000000e+000;
  r0.w = r0.w * 5.000000000e-001 + 5.000000000e-001;
  r0.w = 2.550000000e+002 * r0.w;
  r0.w = Object_instance_params_2.x * 3.264000000e+004 + r0.w;
  o5.w = 1.525902189e-005 * r0.w;
  o5.x = Object_instance_params.w * cb0[9].x;
  o5.yz = Object_instance_params_2.zw * cb0[9].yz;
  r0.w = Fog_dist.x * r0.y;
  r1.w = -1.442695022e+000 * r0.w;
  r1.w = exp2(r1.w);
  r1.w = 1.000000000e+000 + -r1.w;
  r0.w = r1.w / r0.w;
  r1.w = 5.000000075e-002 < abs(r0.y);
  r0.x = dot(r0.xyz, r0.xyz);
  r0.x = sqrt(r0.x);
  r0.x = Fog_dist.y * r0.x;
  r0.y = r1.w ? r0.w : 1.000000000e+000;
  r0.x = r0.y * r0.x + -Fog_dist.w;
  r0.x = exp2(-r0.x);
  r0.x = min(r0.x, 1.000000000e+000);
  o6.w = 1.000000000e+000 + -r0.x;
  o6.xyz = Object_instance_params.xyz * cb0[8].xyz;
  r0.x = Time.x / cb0[4].x;
  o7.w = r1.z * 6.510417006e-005 + r0.x;
  o7.x = cb0[14].x * r1.x;
  o7.y = cb0[15].x * r1.y;
  return;
}
