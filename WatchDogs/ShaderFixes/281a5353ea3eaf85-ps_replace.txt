//Decals - remove
cbuffer Global : register(b0)
{
  float4 _DebugValues : packoffset(c0);
  float4 _GlobalLightsIntensity : packoffset(c1);
  float4 _GlobalScalars : packoffset(c2);
  float4 _GlobalScalars2 : packoffset(c3);
  float4 _GlobalWeatherControl_StaticReflectionIntensityDest : packoffset(c4);
  float4 _WorldLoadingRingSizes : packoffset(c5);
  float4 _ReflectionAmbientColor_WindNoiseDeltaVectorX : packoffset(c6);
  float4 _ReflectionLightDirection_WindNoiseDeltaVectorY : packoffset(c7);
  float4 _ReflectionLightColor_CrowdAnimationStartTime : packoffset(c8);
  float4 _WindVelocityTextureCoverage : packoffset(c9);
  float4 _WindGlobalNoiseTextureCoverage_VertexAOIntensity : packoffset(c10);
  float4 _WindGlobalNoiseTextureChannelSel_ReflectionTextureBlendRatio : packoffset(c11);
  float4 _WindGlobalTurbulence : packoffset(c12);
  float4 _DefaultAmbientProbesColour_TimeOfDay : packoffset(c13);
}

cbuffer Viewport : register(b1)
{
  float4x4 _ViewRotProjectionMatrix : packoffset(c0);
  float4x4 _ViewProjectionMatrix : packoffset(c4);
  float4x4 _ProjectionMatrix : packoffset(c8);
  float4x4 _InvProjectionMatrix : packoffset(c12);
  float4x4 _InvProjectionMatrixDepth : packoffset(c16);
  float4x4 _DepthTextureTransform : packoffset(c20);
  float4x3 _ViewMatrix : packoffset(c24);
  float4x3 _InvViewMatrix : packoffset(c27);
  float4x4 _PreviousViewProjectionMatrix : packoffset(c30);
  float4 _CameraDistances : packoffset(c34);
  float4 _ViewportSize : packoffset(c35);
  float4 _CameraPosition_MaxStaticReflectionMipIndex : packoffset(c36);
  float4 _CameraDirection_MaxParaboloidReflectionMipIndex : packoffset(c37);
  float4 _ViewPoint_ExposureScale : packoffset(c38);
  float4 _FogColorVector_ExposedWhitePointOverExposureScale : packoffset(c39);
  float3 _SideFogColor : packoffset(c40);
  float3 _SunFogColorDelta : packoffset(c41);
  float3 _OppositeFogColorDelta : packoffset(c42);
  float4 _FogValues0 : packoffset(c43);
  float4 _FogValues1 : packoffset(c44);
  float4 _CameraNearPlaneSize : packoffset(c45);
  float4 _UncompressDepthWeights_ShadowProjDepthMinValue : packoffset(c46);
  float4 _UncompressDepthWeightsWS_ReflectionFadeTarget : packoffset(c47);
  float4 _WorldAmbientColorParams0 : packoffset(c48);
  float4 _WorldAmbientColorParams1 : packoffset(c49);
  float4 _WorldAmbientColorParams2 : packoffset(c50);
  float4 _GlobalWorldTextureParams : packoffset(c51);
  float4 _CullingCameraPosition_OneOverAutoExposureScale : packoffset(c52);
  float4 _AmbientSkyColor_ReflectionScaleStrength : packoffset(c53);
  float4 _AmbientGroundColor_ReflectionScaleDistanceMul : packoffset(c54);
  float4 _FacettedShadowCastParams : packoffset(c55);
  float4 _FSMClipPlanes : packoffset(c56);
  float2 _ReflectionGIControl : packoffset(c57);
}

cbuffer MaterialDriverGeneric : register(b2)
{
  float4 _AlphaTexture1Size : packoffset(c0);
  float4 _AlphaUVTiling1 : packoffset(c1);
  float4 _DiffuseTexture1Size : packoffset(c2);
  float4 _DiffuseTexture2Size : packoffset(c3);
  float4 _DiffuseUVTiling1 : packoffset(c4);
  float4 _DiffuseUVTiling2 : packoffset(c5);
  float4 _EmissiveTextureSize : packoffset(c6);
  float4 _EmissiveUVTiling : packoffset(c7);
  float4 _GrungeTextureSize : packoffset(c8);
  float4 _MaterialPickingID : packoffset(c9);
  float4 _NormalTexture1Size : packoffset(c10);
  float4 _NormalUVTiling1 : packoffset(c11);
  float4 _RaindropSplashesTextureSize : packoffset(c12);
  float4 _ReflectionIntensity : packoffset(c13);
  float4 _SpecularPower : packoffset(c14);
  float4 _SpecularTexture1Size : packoffset(c15);
  float4 _SpecularUVTiling1 : packoffset(c16);
  float4 _VertexAnimationParameters : packoffset(c17);
  float4 _WetSpecularPower : packoffset(c18);
  float3 _Diffuse2Color1 : packoffset(c19);
  float _GrungeOpacity : packoffset(c19.w);
  float3 _DiffuseColor1 : packoffset(c20);
  float _InvertMaskForColorize : packoffset(c20.w);
  float3 _DiffuseColor2 : packoffset(c21);
  float _ReliefDepth : packoffset(c21.w);
  float3 _Reflectance : packoffset(c22);
  float _Translucency : packoffset(c22.w);
  float3 _WetReflectance : packoffset(c23);
  float _WaveAmplitude : packoffset(c23.w);
  float2 _GrungeTiling : packoffset(c24);
  float _WaveRipples : packoffset(c24.z);
  float _WaveSpeed : packoffset(c24.w);
  float2 _NormalIntensity : packoffset(c25);
  float _WetDiffuseMultiplier : packoffset(c25.z);
  float _ZFCamHeight : packoffset(c25.w);
  float _ZFightOffset : packoffset(c26);
  int _ColorizeDiffuse1Mode : packoffset(c26.y);
  int _MaskAlphaChannelMode : packoffset(c26.z);
  int _MaskBlueChannelMode : packoffset(c26.w);
  int _MaskRedChannelMode : packoffset(c27);
  int _RaindropRippleType : packoffset(c27.y);
  int _ReflectionType : packoffset(c27.z);
  bool _EmissiveMeshLights : packoffset(c27.w);
  bool _HalfLambert : packoffset(c28);
  bool _SwapSpecularGlossAndOcclusion : packoffset(c28.y);
  bool _UseColorizeDiffuse1 : packoffset(c28.z);
  bool _WaveEnabled : packoffset(c28.w);
}

cbuffer LightData : register(b3)
{
  float4 _CascadedShadowDepthRanges : packoffset(c0);
  float4 _CascadedShadowRanges : packoffset(c1);
  float4 _CascadedShadowScale : packoffset(c2);
  float4 _CascadedShadowSliceDepthOffsets : packoffset(c3);
  float4 _CascadedShadowSliceDepthScales : packoffset(c4);
  float4 _CascadedShadowSliceScaleOffsets[3] : packoffset(c5);
  float4 _CascadedShadowSliceScaleOffsetsBiased[3] : packoffset(c8);
  float4 _FacettedShadowReceiveParams : packoffset(c11);
  float4 _LightCapsuleDivLength : packoffset(c12);
  float4 _LightFadingClipPlanes[8] : packoffset(c13);
  float4 _LightProjectedVideoUnpack[8] : packoffset(c21);
  float4 _LightShadowFactor : packoffset(c29);
  float4 _LightShadowMapSize : packoffset(c30);
  float4x4 _LightSpotShadowProjections : packoffset(c31);
  float4x4 _LightVolumeTransform : packoffset(c35);
  float4 _LongRangeShadowVolumePosScaleBias : packoffset(c39);
  float4 _LongRangeShadowVolumeUvScaleBias : packoffset(c40);
  float4 _RainLightViewpointLPS_DistVPToEdgesLPS : packoffset(c41);
  float3 _LightAttenuation : packoffset(c42);
  float _LightSpecularIntensity : packoffset(c42.w);
  float3 _LightCapsuleMulLength : packoffset(c43);
  float _LightSpotNearClipFactor : packoffset(c43.w);
  float3 _LightDirection : packoffset(c44);
  float3 _LightFrontColor : packoffset(c45);
  float3 _LightPosition : packoffset(c46);
  float2 _LightCapsuleParams : packoffset(c47);
  float2 _LightShadowDepthTransform : packoffset(c47.z);
  float2 _LightSpotConeFactors : packoffset(c48);
}
SamplerState Viewport__DepthVPSampler__SampObj___s : register(s0);
SamplerState MaterialDriverGeneric__DiffuseTexture1__SampObj___s : register(s1);
SamplerState LightData__FacettedShadowNoiseTexture__SampObj___s : register(s2);
SamplerComparisonState ShadowRealSampler_s : register(s3);
Texture2D<float4> Viewport__DepthVPSampler__TexObj__ : register(t0);
Texture2D<float4> MaterialDriverGeneric__DiffuseTexture1__TexObj__ : register(t1);
Texture2D<float4> LightData__LightShadowTexture__TexObj__ : register(t2);
Texture2D<float4> LightData__FacettedShadowNoiseTexture__TexObj__ : register(t3);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : TEXCOORD0,
  float4 v1 : TEXCOORD1,
  float4 v2 : TEXCOORD2,
  float4 v3 : TEXCOORD3,
  float4 v4 : TEXCOORD4,
  float2 v5 : TEXCOORD5,
  float4 v6 : SV_Position0,
  uint v7 : SV_IsFrontFace0,
  out float4 o0 : SV_Target0,
  out float4 o1 : SV_Target1,
  out float4 o2 : SV_Target2)
{
  float4 r0,r1,r2,r3,r4,r5;
  uint4 bitmask;
  r0.xy = v3.xy / v3.zz;
   
  r0.x = Viewport__DepthVPSampler__TexObj__.Sample(Viewport__DepthVPSampler__SampObj___s, r0.xy).x;
  r0.y = 1.000000000e+000;
  r0.z = dot(r0.xy, _InvProjectionMatrix._m22_m32);
  r0.x = dot(r0.xy, _InvProjectionMatrix._m23_m33);
  r0.x = -r0.z / r0.x;
   
  r0.yzw = v4.xyz / v4.zzz;
  r0.xyz = r0.yzw * -r0.xxx;
  r0.w = 1.000000000e+000;
  
// float4 r20 = r0;
float4 stereo = StereoParams.Load(0);
// r0.x -= stereo.x*(-r0.z - stereo.y)*_InvProjectionMatrix._m00; 

// float4 r15, r16, r17;

// r17.x = dot(r0.xyzw, _InvViewMatrix._m00_m10_m20_m30);
// r17.y = dot(r0.xyzw, _InvViewMatrix._m01_m11_m21_m31);
// r17.z = dot(r0.xyzw, _InvViewMatrix._m02_m12_m22_m32);
// r17.w = 1;

// r15.x = dot(r17.xyzw, _ViewProjectionMatrix._m00_m10_m20_m30);
// r15.y = dot(r17.xyzw, _ViewProjectionMatrix._m01_m11_m21_m31);
// r15.z = dot(r17.xyzw, _ViewProjectionMatrix._m02_m12_m22_m32);
// r15.w = dot(r17.xyzw, _ViewProjectionMatrix._m03_m13_m23_m33); 
 
// float4 stereo = StereoParams.Load(0);
// r15.x -= stereo.x*(r15.w - stereo.y);

// r0.x = dot(r15.xyzw, _InvProjectionMatrix._m00_m10_m20_m30);
// r0.y = dot(r15.xyzw, _InvProjectionMatrix._m01_m11_m21_m31);
// r0.z = dot(r15.xyzw, _InvProjectionMatrix._m02_m12_m22_m32);
// r0.w = dot(r15.xyzw, _InvProjectionMatrix._m03_m13_m23_m33);  




  r1.x = dot(r0.xyzw, v1.xyzw);
  r1.y = dot(r0.xyzw, v2.xyzw);
  r1.zw = float2(1.000000e+000,1.000000e+000) + -r1.xy;

  r2.x = r1.x < 0;
  r2.y = r1.y < 0;
  r2.z = r1.z < 0;
  r2.w = r1.w < 0;
  
  r1.xyzw = v0.xyxy * r1.xyxy + v0.zwzw;
  r1.xyzw = _DiffuseUVTiling1.xyzw * r1.xyzw;
  r1.xy = r1.xy + r1.zw;
  r1.xyzw = MaterialDriverGeneric__DiffuseTexture1__TexObj__.Sample(MaterialDriverGeneric__DiffuseTexture1__SampObj___s, r1.xy).xyzw;
  r2.xy = (int2)r2.zw | (int2)r2.xy;
  r2.x = (int)r2.y | (int)r2.x;
  if (r2.x != 0) discard;
  

  
  r2.x = dot(r0.xyzw, _InvViewMatrix._m00_m10_m20_m30);
  r2.y = dot(r0.xyzw, _InvViewMatrix._m01_m11_m21_m31);
  r2.z = dot(r0.xyzw, _InvViewMatrix._m02_m12_m22_m32);
  r0.xyz = float3(0.000000e+000,0.000000e+000,2.000000e-001) + r2.xyz;
  r0.w = 1.000000000e+000;
  
// float4 r15, r16, r17;
// r15.x = dot(r0.xyzw, _ViewProjectionMatrix._m00_m10_m20_m30);
// r15.y = dot(r0.xyzw, _ViewProjectionMatrix._m01_m11_m21_m31);
// r15.z = dot(r0.xyzw, _ViewProjectionMatrix._m02_m12_m22_m32);
// r15.w = dot(r0.xyzw, _ViewProjectionMatrix._m03_m13_m23_m33); 
 
// float4 stereo = StereoParams.Load(0);
// r15.x += stereo.x*(r15.w - stereo.y);

// r16.x = dot(r15.xyzw, _InvProjectionMatrix._m00_m10_m20_m30);
// r16.y = dot(r15.xyzw, _InvProjectionMatrix._m01_m11_m21_m31);
// r16.z = dot(r15.xyzw, _InvProjectionMatrix._m02_m12_m22_m32);
// r16.w = dot(r15.xyzw, _InvProjectionMatrix._m03_m13_m23_m33);  

// r0.x = dot(r16.xyzw, _InvViewMatrix._m00_m10_m20_m30);
// r0.y = dot(r16.xyzw, _InvViewMatrix._m01_m11_m21_m31);
// r0.z = dot(r16.xyzw, _InvViewMatrix._m02_m12_m22_m32);

  
  r2.z = dot(r0.xyzw, _LightSpotShadowProjections._m02_m12_m22_m32);
  r2.x = dot(r0.xyzw, _LightSpotShadowProjections._m00_m10_m20_m30);
  r2.y = dot(r0.xyzw, _LightSpotShadowProjections._m01_m11_m21_m31);
  r0.z = 0.000000000e+000;
  r3.xy = float2(1.562500e-002,1.562500e-002) * v5.xy;
  r3.xy = LightData__FacettedShadowNoiseTexture__TexObj__.SampleLevel(LightData__FacettedShadowNoiseTexture__SampObj___s, r3.xy, 0.000000000e+000).xy;
  r3.xy = r3.yx * float2(2.000000e+000,2.000000e+000) + float2(-1.000000e+000,-1.000000e+000);
  r3.zw = float2(-6.200062e-002,1.945140e-001) * r3.xx;
  r4.xy = r3.yy * float2(6.495577e-001,-2.520991e-001) + -r3.zw;
  r3.zw = _LightShadowMapSize.zw * v4.ww;
  r3.zw = float2(2.200000e+000,2.200000e+000) * r3.zw;
  r4.z = dot(r3.xy, float2(6.495577e-001,-6.200062e-002));
  r0.xy = r4.xz * r3.zw;
  r0.xyz = r2.xyz + r0.xyz;
  r0.x = LightData__LightShadowTexture__TexObj__.SampleCmpLevelZero(ShadowRealSampler_s, r0.xy, r0.z, int2(0, 0)).x;
  r4.w = dot(r3.xy, float2(-2.520991e-001,1.945140e-001));
  r4.xy = r4.yw * r3.zw;
  r4.z = 0.000000000e+000;
  r0.yzw = r4.xyz + r2.xyz;
  r0.y = LightData__LightShadowTexture__TexObj__.SampleCmpLevelZero(ShadowRealSampler_s, r0.yz, r0.w, int2(0, 0)).x;
  r0.x = r0.x + r0.y;
  r0.yz = float2(-6.026105e-001,9.879663e-001) * r3.xx;
  r4.xy = r3.yy * float2(-1.675160e-001,8.006269e-002) + -r0.yz;
  r4.z = dot(r3.xy, float2(-1.675160e-001,-6.026105e-001));
  r4.w = dot(r3.xy, float2(8.006269e-002,9.879663e-001));
  r5.xy = r4.yw * r3.zw;
  r3.xy = r4.xz * r3.zw;
  r3.z = 0.000000000e+000;
  r0.yzw = r3.xyz + r2.xyz;
  r0.y = LightData__LightShadowTexture__TexObj__.SampleCmpLevelZero(ShadowRealSampler_s, r0.yz, r0.w, int2(0, 0)).x;
  r0.x = r0.x + r0.y;
  r5.z = 0.000000000e+000;
  r0.yzw = r5.xyz + r2.xyz;
  r2.xy = -_RainLightViewpointLPS_DistVPToEdgesLPS.xy + r2.xy;
  r2.xy = _RainLightViewpointLPS_DistVPToEdgesLPS.zw + -abs(-r2.xy);
  r2.xy = float2(5.000000e+000,5.000000e+000) * r2.xy;
  r2.x = saturate(min(r2.y, r2.x));
  r0.y = LightData__LightShadowTexture__TexObj__.SampleCmpLevelZero(ShadowRealSampler_s, r0.yz, r0.w, int2(0, 0)).x;
  r0.x = r0.x + r0.y;
  r0.x = r0.x * 2.500000000e-001 + -1.000000000e+000;
  r0.x = r2.x * r0.x + 1.000000000e+000;
  r0.x = _GlobalWeatherControl_StaticReflectionIntensityDest.x * r0.x;
  r0.y = -1.000000000e+000 + _WetDiffuseMultiplier;
  r0.y = r0.x * r0.y + 1.000000000e+000;
  r1.xyz = _DiffuseColor1.xyz * r1.xyz;
  r0.z = v3.w * r1.w;
  o0.xyz = r1.xyz * r0.yyy;
  o0.w = r0.z;
  o2.w = r0.z;
  o1.xyzw = float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
  r0.y = _WetSpecularPower.x + -_SpecularPower.x;
  r0.y = r0.x * r0.y + _SpecularPower.x;
  r0.y = log2(r0.y);
  o2.y = 7.692307979e-002 * r0.y;
  r0.y = _WetReflectance.x + -_Reflectance.x;
  o2.x = r0.x * r0.y + _Reflectance.x;
  o2.z = 1.000000000e+000;
  
  o1=0;
  o2=0;
  o0=0;
  
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 _DebugValues;               // Offset:    0 Size:    16 [unused]
//   float4 _GlobalLightsIntensity;     // Offset:   16 Size:    16 [unused]
//   float4 _GlobalScalars;             // Offset:   32 Size:    16 [unused]
//   float4 _GlobalScalars2;            // Offset:   48 Size:    16 [unused]
//   float4 _GlobalWeatherControl_StaticReflectionIntensityDest;// Offset:   64 Size:    16
//   float4 _WorldLoadingRingSizes;     // Offset:   80 Size:    16 [unused]
//   float4 _ReflectionAmbientColor_WindNoiseDeltaVectorX;// Offset:   96 Size:    16 [unused]
//   float4 _ReflectionLightDirection_WindNoiseDeltaVectorY;// Offset:  112 Size:    16 [unused]
//   float4 _ReflectionLightColor_CrowdAnimationStartTime;// Offset:  128 Size:    16 [unused]
//   float4 _WindVelocityTextureCoverage;// Offset:  144 Size:    16 [unused]
//   float4 _WindGlobalNoiseTextureCoverage_VertexAOIntensity;// Offset:  160 Size:    16 [unused]
//   float4 _WindGlobalNoiseTextureChannelSel_ReflectionTextureBlendRatio;// Offset:  176 Size:    16 [unused]
//   float4 _WindGlobalTurbulence;      // Offset:  192 Size:    16 [unused]
//   float4 _DefaultAmbientProbesColour_TimeOfDay;// Offset:  208 Size:    16 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4x4 _ViewRotProjectionMatrix; // Offset:    0 Size:    64 [unused]
//   float4x4 _ViewProjectionMatrix;    // Offset:   64 Size:    64 [unused]
//   float4x4 _ProjectionMatrix;        // Offset:  128 Size:    64 [unused]
//   float4x4 _InvProjectionMatrix;     // Offset:  192 Size:    64
//   float4x4 _InvProjectionMatrixDepth;// Offset:  256 Size:    64 [unused]
//   float4x4 _DepthTextureTransform;   // Offset:  320 Size:    64 [unused]
//   float4x3 _ViewMatrix;              // Offset:  384 Size:    48 [unused]
//   float4x3 _InvViewMatrix;           // Offset:  432 Size:    48
//   float4x4 _PreviousViewProjectionMatrix;// Offset:  480 Size:    64 [unused]
//   float4 _CameraDistances;           // Offset:  544 Size:    16 [unused]
//   float4 _ViewportSize;              // Offset:  560 Size:    16 [unused]
//   float4 _CameraPosition_MaxStaticReflectionMipIndex;// Offset:  576 Size:    16 [unused]
//   float4 _CameraDirection_MaxParaboloidReflectionMipIndex;// Offset:  592 Size:    16 [unused]
//   float4 _ViewPoint_ExposureScale;   // Offset:  608 Size:    16 [unused]
//   float4 _FogColorVector_ExposedWhitePointOverExposureScale;// Offset:  624 Size:    16 [unused]
//   float3 _SideFogColor;              // Offset:  640 Size:    12 [unused]
//   float3 _SunFogColorDelta;          // Offset:  656 Size:    12 [unused]
//   float3 _OppositeFogColorDelta;     // Offset:  672 Size:    12 [unused]
//   float4 _FogValues0;                // Offset:  688 Size:    16 [unused]
//   float4 _FogValues1;                // Offset:  704 Size:    16 [unused]
//   float4 _CameraNearPlaneSize;       // Offset:  720 Size:    16 [unused]
//   float4 _UncompressDepthWeights_ShadowProjDepthMinValue;// Offset:  736 Size:    16 [unused]
//   float4 _UncompressDepthWeightsWS_ReflectionFadeTarget;// Offset:  752 Size:    16 [unused]
//   float4 _WorldAmbientColorParams0;  // Offset:  768 Size:    16 [unused]
//   float4 _WorldAmbientColorParams1;  // Offset:  784 Size:    16 [unused]
//   float4 _WorldAmbientColorParams2;  // Offset:  800 Size:    16 [unused]
//   float4 _GlobalWorldTextureParams;  // Offset:  816 Size:    16 [unused]
//   float4 _CullingCameraPosition_OneOverAutoExposureScale;// Offset:  832 Size:    16 [unused]
//   float4 _AmbientSkyColor_ReflectionScaleStrength;// Offset:  848 Size:    16 [unused]
//   float4 _AmbientGroundColor_ReflectionScaleDistanceMul;// Offset:  864 Size:    16 [unused]
//   float4 _FacettedShadowCastParams;  // Offset:  880 Size:    16 [unused]
//   float4 _FSMClipPlanes;             // Offset:  896 Size:    16 [unused]
//   float2 _ReflectionGIControl;       // Offset:  912 Size:     8 [unused]
//
// }
//
// cbuffer MaterialDriverGeneric
// {
//
//   float4 _AlphaTexture1Size;         // Offset:    0 Size:    16 [unused]
//   float4 _AlphaUVTiling1;            // Offset:   16 Size:    16 [unused]
//   float4 _DiffuseTexture1Size;       // Offset:   32 Size:    16 [unused]
//   float4 _DiffuseTexture2Size;       // Offset:   48 Size:    16 [unused]
//   float4 _DiffuseUVTiling1;          // Offset:   64 Size:    16
//   float4 _DiffuseUVTiling2;          // Offset:   80 Size:    16 [unused]
//   float4 _EmissiveTextureSize;       // Offset:   96 Size:    16 [unused]
//   float4 _EmissiveUVTiling;          // Offset:  112 Size:    16 [unused]
//   float4 _GrungeTextureSize;         // Offset:  128 Size:    16 [unused]
//   float4 _MaterialPickingID;         // Offset:  144 Size:    16 [unused]
//   float4 _NormalTexture1Size;        // Offset:  160 Size:    16 [unused]
//   float4 _NormalUVTiling1;           // Offset:  176 Size:    16 [unused]
//   float4 _RaindropSplashesTextureSize;// Offset:  192 Size:    16 [unused]
//   float4 _ReflectionIntensity;       // Offset:  208 Size:    16 [unused]
//   float4 _SpecularPower;             // Offset:  224 Size:    16
//   float4 _SpecularTexture1Size;      // Offset:  240 Size:    16 [unused]
//   float4 _SpecularUVTiling1;         // Offset:  256 Size:    16 [unused]
//   float4 _VertexAnimationParameters; // Offset:  272 Size:    16 [unused]
//   float4 _WetSpecularPower;          // Offset:  288 Size:    16
//   float3 _Diffuse2Color1;            // Offset:  304 Size:    12 [unused]
//   float _GrungeOpacity;              // Offset:  316 Size:     4 [unused]
//   float3 _DiffuseColor1;             // Offset:  320 Size:    12
//   float _InvertMaskForColorize;      // Offset:  332 Size:     4 [unused]
//   float3 _DiffuseColor2;             // Offset:  336 Size:    12 [unused]
//   float _ReliefDepth;                // Offset:  348 Size:     4 [unused]
//   float3 _Reflectance;               // Offset:  352 Size:    12
//   float _Translucency;               // Offset:  364 Size:     4 [unused]
//   float3 _WetReflectance;            // Offset:  368 Size:    12
//   float _WaveAmplitude;              // Offset:  380 Size:     4 [unused]
//   float2 _GrungeTiling;              // Offset:  384 Size:     8 [unused]
//   float _WaveRipples;                // Offset:  392 Size:     4 [unused]
//   float _WaveSpeed;                  // Offset:  396 Size:     4 [unused]
//   float2 _NormalIntensity;           // Offset:  400 Size:     8 [unused]
//   float _WetDiffuseMultiplier;       // Offset:  408 Size:     4
//   float _ZFCamHeight;                // Offset:  412 Size:     4 [unused]
//   float _ZFightOffset;               // Offset:  416 Size:     4 [unused]
//   int _ColorizeDiffuse1Mode;         // Offset:  420 Size:     4 [unused]
//   int _MaskAlphaChannelMode;         // Offset:  424 Size:     4 [unused]
//   int _MaskBlueChannelMode;          // Offset:  428 Size:     4 [unused]
//   int _MaskRedChannelMode;           // Offset:  432 Size:     4 [unused]
//   int _RaindropRippleType;           // Offset:  436 Size:     4 [unused]
//   int _ReflectionType;               // Offset:  440 Size:     4 [unused]
//   bool _EmissiveMeshLights;          // Offset:  444 Size:     4 [unused]
//   bool _HalfLambert;                 // Offset:  448 Size:     4 [unused]
//   bool _SwapSpecularGlossAndOcclusion;// Offset:  452 Size:     4 [unused]
//   bool _UseColorizeDiffuse1;         // Offset:  456 Size:     4 [unused]
//   bool _WaveEnabled;                 // Offset:  460 Size:     4 [unused]
//
// }
//
// cbuffer LightData
// {
//
//   float4 _CascadedShadowDepthRanges; // Offset:    0 Size:    16 [unused]
//   float4 _CascadedShadowRanges;      // Offset:   16 Size:    16 [unused]
//   float4 _CascadedShadowScale;       // Offset:   32 Size:    16 [unused]
//   float4 _CascadedShadowSliceDepthOffsets;// Offset:   48 Size:    16 [unused]
//   float4 _CascadedShadowSliceDepthScales;// Offset:   64 Size:    16 [unused]
//   float4 _CascadedShadowSliceScaleOffsets[3];// Offset:   80 Size:    48 [unused]
//   float4 _CascadedShadowSliceScaleOffsetsBiased[3];// Offset:  128 Size:    48 [unused]
//   float4 _FacettedShadowReceiveParams;// Offset:  176 Size:    16 [unused]
//   float4 _LightCapsuleDivLength;     // Offset:  192 Size:    16 [unused]
//   float4 _LightFadingClipPlanes[8];  // Offset:  208 Size:   128 [unused]
//   float4 _LightProjectedVideoUnpack[8];// Offset:  336 Size:   128 [unused]
//   float4 _LightShadowFactor;         // Offset:  464 Size:    16 [unused]
//   float4 _LightShadowMapSize;        // Offset:  480 Size:    16
//   float4x4 _LightSpotShadowProjections;// Offset:  496 Size:    64
//   float4x4 _LightVolumeTransform;    // Offset:  560 Size:    64 [unused]
//   float4 _LongRangeShadowVolumePosScaleBias;// Offset:  624 Size:    16 [unused]
//   float4 _LongRangeShadowVolumeUvScaleBias;// Offset:  640 Size:    16 [unused]
//   float4 _RainLightViewpointLPS_DistVPToEdgesLPS;// Offset:  656 Size:    16
//   float3 _LightAttenuation;          // Offset:  672 Size:    12 [unused]
//   float _LightSpecularIntensity;     // Offset:  684 Size:     4 [unused]
//   float3 _LightCapsuleMulLength;     // Offset:  688 Size:    12 [unused]
//   float _LightSpotNearClipFactor;    // Offset:  700 Size:     4 [unused]
//   float3 _LightDirection;            // Offset:  704 Size:    12 [unused]
//   float3 _LightFrontColor;           // Offset:  720 Size:    12 [unused]
//   float3 _LightPosition;             // Offset:  736 Size:    12 [unused]
//   float2 _LightCapsuleParams;        // Offset:  752 Size:     8 [unused]
//   float2 _LightShadowDepthTransform; // Offset:  760 Size:     8 [unused]
//   float2 _LightSpotConeFactors;      // Offset:  768 Size:     8 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Viewport__DepthVPSampler__SampObj__    sampler      NA          NA    0        1
// MaterialDriverGeneric__DiffuseTexture1__SampObj__    sampler      NA          NA    1        1
// LightData__FacettedShadowNoiseTexture__SampObj__    sampler      NA          NA    2        1
// ShadowRealSampler               sampler_c      NA          NA    3        1
// Viewport__DepthVPSampler__TexObj__    texture  float4          2d    0        1
// MaterialDriverGeneric__DiffuseTexture1__TexObj__    texture  float4          2d    1        1
// LightData__LightShadowTexture__TexObj__    texture  float4          2d    2        1
// LightData__FacettedShadowNoiseTexture__TexObj__    texture  float4          2d    3        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// MaterialDriverGeneric             cbuffer      NA          NA    2        1
// LightData                         cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xy          5     NONE   float   xy  
// SV_Position              0   xyzw        6      POS   float       
// SV_IsFrontFace           0   x           7    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[5], immediateIndexed
dcl_constantbuffer cb1[30], immediateIndexed
dcl_constantbuffer cb2[26], immediateIndexed
dcl_constantbuffer cb3[42], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 6
div r0.xy, v3.xyxx, v3.zzzz
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t0.xyzw, s0
mov r0.y, l(1.000000)
dp2 r0.z, r0.xyxx, cb1[14].zwzz
dp2 r0.x, r0.xyxx, cb1[15].zwzz
div r0.x, -r0.z, r0.x
div r0.yzw, v4.xxyz, v4.zzzz
mul r0.xyz, -r0.xxxx, r0.yzwy
mov r0.w, l(1.000000)
dp4 r1.x, r0.xyzw, v1.xyzw
dp4 r1.y, r0.xyzw, v2.xyzw
add r1.zw, -r1.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
lt r2.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mad r1.xyzw, v0.xyxy, r1.xyxy, v0.zwzw
mul r1.xyzw, r1.xyzw, cb2[4].xyzw
add r1.xy, r1.zwzz, r1.xyxx
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.xyxx, t1.xyzw, s1
or r2.xy, r2.zwzz, r2.xyxx
or r2.x, r2.y, r2.x
discard_nz r2.x
dp4 r2.x, r0.xyzw, cb1[27].xyzw
dp4 r2.y, r0.xyzw, cb1[28].xyzw
dp4 r2.z, r0.xyzw, cb1[29].xyzw
add r0.xyz, r2.xyzx, l(0.000000, 0.000000, 0.200000, 0.000000)
mov r0.w, l(1.000000)
dp4 r2.z, r0.xyzw, cb3[33].xyzw
dp4 r2.x, r0.xyzw, cb3[31].xyzw
dp4 r2.y, r0.xyzw, cb3[32].xyzw
mov r0.z, l(0)
mul r3.xy, v5.xyxx, l(0.015625, 0.015625, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r3.xy, r3.xyxx, t3.xyzw, s2, l(0.000000)
mad r3.xy, r3.yxyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r3.zw, r3.xxxx, l(0.000000, 0.000000, -0.062001, 0.194514)
mad r4.xy, r3.yyyy, l(0.649558, -0.252099, 0.000000, 0.000000), -r3.zwzz
mul r3.zw, v4.wwww, cb3[30].zzzw
mul r3.zw, r3.zzzw, l(0.000000, 0.000000, 2.200000, 2.200000)
dp2 r4.z, r3.xyxx, l(0.649558, -0.062001, 0.000000, 0.000000)
mul r0.xy, r3.zwzz, r4.xzxx
add r0.xyz, r0.xyzx, r2.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r0.x, r0.xyxx, t2.xxxx, s3, r0.z
dp2 r4.w, r3.xyxx, l(-0.252099, 0.194514, 0.000000, 0.000000)
mul r4.xy, r3.zwzz, r4.ywyy
mov r4.z, l(0)
add r0.yzw, r2.xxyz, r4.xxyz
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r0.y, r0.yzyy, t2.xxxx, s3, r0.w
add r0.x, r0.y, r0.x
mul r0.yz, r3.xxxx, l(0.000000, -0.602611, 0.987966, 0.000000)
mad r4.xy, r3.yyyy, l(-0.167516, 0.080063, 0.000000, 0.000000), -r0.yzyy
dp2 r4.z, r3.xyxx, l(-0.167516, -0.602611, 0.000000, 0.000000)
dp2 r4.w, r3.xyxx, l(0.080063, 0.987966, 0.000000, 0.000000)
mul r5.xy, r3.zwzz, r4.ywyy
mul r3.xy, r3.zwzz, r4.xzxx
mov r3.z, l(0)
add r0.yzw, r2.xxyz, r3.xxyz
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r0.y, r0.yzyy, t2.xxxx, s3, r0.w
add r0.x, r0.y, r0.x
mov r5.z, l(0)
add r0.yzw, r2.xxyz, r5.xxyz
add r2.xy, r2.xyxx, -cb3[41].xyxx
add r2.xy, -|r2.xyxx|, cb3[41].zwzz
mul r2.xy, r2.xyxx, l(5.000000, 5.000000, 0.000000, 0.000000)
min_sat r2.x, r2.y, r2.x
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r0.y, r0.yzyy, t2.xxxx, s3, r0.w
add r0.x, r0.y, r0.x
mad r0.x, r0.x, l(0.250000), l(-1.000000)
mad r0.x, r2.x, r0.x, l(1.000000)
mul r0.x, r0.x, cb0[4].x
add r0.y, cb2[25].z, l(-1.000000)
mad r0.y, r0.x, r0.y, l(1.000000)
mul r1.xyz, r1.xyzx, cb2[20].xyzx
mul r0.z, r1.w, v3.w
mul o0.xyz, r0.yyyy, r1.xyzx
mov o0.w, r0.z
mov o2.w, r0.z
mov o1.xyzw, l(0,0,0,0)
add r0.y, -cb2[14].x, cb2[18].x
mad r0.y, r0.x, r0.y, cb2[14].x
log r0.y, r0.y
mul o2.y, r0.y, l(0.076923)
add r0.y, -cb2[22].x, cb2[23].x
mad o2.x, r0.x, r0.y, cb2[22].x
mov o2.z, l(1.000000)
ret 
// Approximately 83 instruction slots used
 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
