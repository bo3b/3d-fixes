//Ground decals - road markings, leaves: DISABLE
cbuffer Global : register(b0)
{
  float4 _DebugValues : packoffset(c0);
  float4 _GlobalLightsIntensity : packoffset(c1);
  float4 _GlobalScalars : packoffset(c2);
  float4 _GlobalScalars2 : packoffset(c3);
  float4 _GlobalWeatherControl_StaticReflectionIntensityDest : packoffset(c4);
  float4 _WorldLoadingRingSizes : packoffset(c5);
  float4 _ReflectionAmbientColor_WindNoiseDeltaVectorX : packoffset(c6);
  float4 _ReflectionLightDirection_WindNoiseDeltaVectorY : packoffset(c7);
  float4 _ReflectionLightColor_CrowdAnimationStartTime : packoffset(c8);
  float4 _WindVelocityTextureCoverage : packoffset(c9);
  float4 _WindGlobalNoiseTextureCoverage_VertexAOIntensity : packoffset(c10);
  float4 _WindGlobalNoiseTextureChannelSel_ReflectionTextureBlendRatio : packoffset(c11);
  float4 _WindGlobalTurbulence : packoffset(c12);
  float4 _DefaultAmbientProbesColour_TimeOfDay : packoffset(c13);
}

cbuffer Viewport : register(b1)
{
  float4x4 _ViewRotProjectionMatrix : packoffset(c0);
  float4x4 _ViewProjectionMatrix : packoffset(c4);
  float4x4 _ProjectionMatrix : packoffset(c8);
  float4x4 _InvProjectionMatrix : packoffset(c12);
  float4x4 _InvProjectionMatrixDepth : packoffset(c16);
  float4x4 _DepthTextureTransform : packoffset(c20);
  float4x3 _ViewMatrix : packoffset(c24);
  float4x3 _InvViewMatrix : packoffset(c27);
  float4x4 _PreviousViewProjectionMatrix : packoffset(c30);
  float4 _CameraDistances : packoffset(c34);
  float4 _ViewportSize : packoffset(c35);
  float4 _CameraPosition_MaxStaticReflectionMipIndex : packoffset(c36);
  float4 _CameraDirection_MaxParaboloidReflectionMipIndex : packoffset(c37);
  float4 _ViewPoint_ExposureScale : packoffset(c38);
  float4 _FogColorVector_ExposedWhitePointOverExposureScale : packoffset(c39);
  float3 _SideFogColor : packoffset(c40);
  float3 _SunFogColorDelta : packoffset(c41);
  float3 _OppositeFogColorDelta : packoffset(c42);
  float4 _FogValues0 : packoffset(c43);
  float4 _FogValues1 : packoffset(c44);
  float4 _CameraNearPlaneSize : packoffset(c45);
  float4 _UncompressDepthWeights_ShadowProjDepthMinValue : packoffset(c46);
  float4 _UncompressDepthWeightsWS_ReflectionFadeTarget : packoffset(c47);
  float4 _WorldAmbientColorParams0 : packoffset(c48);
  float4 _WorldAmbientColorParams1 : packoffset(c49);
  float4 _WorldAmbientColorParams2 : packoffset(c50);
  float4 _GlobalWorldTextureParams : packoffset(c51);
  float4 _CullingCameraPosition_OneOverAutoExposureScale : packoffset(c52);
  float4 _AmbientSkyColor_ReflectionScaleStrength : packoffset(c53);
  float4 _AmbientGroundColor_ReflectionScaleDistanceMul : packoffset(c54);
  float4 _FacettedShadowCastParams : packoffset(c55);
  float4 _FSMClipPlanes : packoffset(c56);
  float2 _ReflectionGIControl : packoffset(c57);
}

cbuffer MaterialDriverGeneric : register(b2)
{
  float4 _AlphaTexture1Size : packoffset(c0);
  float4 _AlphaUVTiling1 : packoffset(c1);
  float4 _DiffuseTexture1Size : packoffset(c2);
  float4 _DiffuseTexture2Size : packoffset(c3);
  float4 _DiffuseUVTiling1 : packoffset(c4);
  float4 _DiffuseUVTiling2 : packoffset(c5);
  float4 _EmissiveTextureSize : packoffset(c6);
  float4 _EmissiveUVTiling : packoffset(c7);
  float4 _GrungeTextureSize : packoffset(c8);
  float4 _MaterialPickingID : packoffset(c9);
  float4 _NormalTexture1Size : packoffset(c10);
  float4 _NormalUVTiling1 : packoffset(c11);
  float4 _RaindropSplashesTextureSize : packoffset(c12);
  float4 _ReflectionIntensity : packoffset(c13);
  float4 _SpecularPower : packoffset(c14);
  float4 _SpecularTexture1Size : packoffset(c15);
  float4 _SpecularUVTiling1 : packoffset(c16);
  float4 _VertexAnimationParameters : packoffset(c17);
  float4 _WetSpecularPower : packoffset(c18);
  float3 _Diffuse2Color1 : packoffset(c19);
  float _GrungeOpacity : packoffset(c19.w);
  float3 _DiffuseColor1 : packoffset(c20);
  float _InvertMaskForColorize : packoffset(c20.w);
  float3 _DiffuseColor2 : packoffset(c21);
  float _ReliefDepth : packoffset(c21.w);
  float3 _Reflectance : packoffset(c22);
  float _Translucency : packoffset(c22.w);
  float3 _WetReflectance : packoffset(c23);
  float _WaveAmplitude : packoffset(c23.w);
  float2 _GrungeTiling : packoffset(c24);
  float _WaveRipples : packoffset(c24.z);
  float _WaveSpeed : packoffset(c24.w);
  float2 _NormalIntensity : packoffset(c25);
  float _WetDiffuseMultiplier : packoffset(c25.z);
  float _ZFCamHeight : packoffset(c25.w);
  float _ZFightOffset : packoffset(c26);
  int _ColorizeDiffuse1Mode : packoffset(c26.y);
  int _MaskAlphaChannelMode : packoffset(c26.z);
  int _MaskBlueChannelMode : packoffset(c26.w);
  int _MaskRedChannelMode : packoffset(c27);
  int _RaindropRippleType : packoffset(c27.y);
  int _ReflectionType : packoffset(c27.z);
  bool _EmissiveMeshLights : packoffset(c27.w);
  bool _HalfLambert : packoffset(c28);
  bool _SwapSpecularGlossAndOcclusion : packoffset(c28.y);
  bool _UseColorizeDiffuse1 : packoffset(c28.z);
  bool _WaveEnabled : packoffset(c28.w);
}

cbuffer LightData : register(b3)
{
  float4 _CascadedShadowDepthRanges : packoffset(c0);
  float4 _CascadedShadowRanges : packoffset(c1);
  float4 _CascadedShadowScale : packoffset(c2);
  float4 _CascadedShadowSliceDepthOffsets : packoffset(c3);
  float4 _CascadedShadowSliceDepthScales : packoffset(c4);
  float4 _CascadedShadowSliceScaleOffsets[3] : packoffset(c5);
  float4 _CascadedShadowSliceScaleOffsetsBiased[3] : packoffset(c8);
  float4 _FacettedShadowReceiveParams : packoffset(c11);
  float4 _LightCapsuleDivLength : packoffset(c12);
  float4 _LightFadingClipPlanes[8] : packoffset(c13);
  float4 _LightProjectedVideoUnpack[8] : packoffset(c21);
  float4 _LightShadowFactor : packoffset(c29);
  float4 _LightShadowMapSize : packoffset(c30);
  float4x4 _LightSpotShadowProjections : packoffset(c31);
  float4x4 _LightVolumeTransform : packoffset(c35);
  float4 _LongRangeShadowVolumePosScaleBias : packoffset(c39);
  float4 _LongRangeShadowVolumeUvScaleBias : packoffset(c40);
  float4 _RainLightViewpointLPS_DistVPToEdgesLPS : packoffset(c41);
  float3 _LightAttenuation : packoffset(c42);
  float _LightSpecularIntensity : packoffset(c42.w);
  float3 _LightCapsuleMulLength : packoffset(c43);
  float _LightSpotNearClipFactor : packoffset(c43.w);
  float3 _LightDirection : packoffset(c44);
  float3 _LightFrontColor : packoffset(c45);
  float3 _LightPosition : packoffset(c46);
  float2 _LightCapsuleParams : packoffset(c47);
  float2 _LightShadowDepthTransform : packoffset(c47.z);
  float2 _LightSpotConeFactors : packoffset(c48);
}
SamplerState Viewport__DepthVPSampler__SampObj___s : register(s0);
SamplerState MaterialDriverGeneric__DiffuseTexture1__SampObj___s : register(s1);
SamplerState MaterialDriverGeneric__NormalTexture1__SampObj___s : register(s2);
SamplerState MaterialDriverGeneric__RaindropSplashesTexture__SampObj___s : register(s3);
SamplerState MaterialDriverGeneric__SpecularTexture1__SampObj___s : register(s4);
SamplerState LightData__FacettedShadowNoiseTexture__SampObj___s : register(s5);
SamplerComparisonState ShadowRealSampler_s : register(s6);
Texture2D<float4> Viewport__DepthVPSampler__TexObj__ : register(t0);
Texture2D<float4> MaterialDriverGeneric__DiffuseTexture1__TexObj__ : register(t1);
Texture2D<float4> MaterialDriverGeneric__NormalTexture1__TexObj__ : register(t2);
Texture2D<float4> MaterialDriverGeneric__RaindropSplashesTexture__TexObj__ : register(t3);
Texture2D<float4> MaterialDriverGeneric__SpecularTexture1__TexObj__ : register(t4);
Texture2D<float4> LightData__LightShadowTexture__TexObj__ : register(t5);
Texture2D<float4> LightData__FacettedShadowNoiseTexture__TexObj__ : register(t6);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : TEXCOORD0,
  float4 v1 : TEXCOORD1,
  float4 v2 : TEXCOORD2,
  float4 v3 : TEXCOORD3,
  float4 v4 : TEXCOORD4,
  float4 v5 : TEXCOORD5,
  float3 v6 : TEXCOORD6,
  float3 v7 : TEXCOORD7,
  float2 v8 : TEXCOORD8,
  float4 v9 : SV_Position0,
  uint v10 : SV_IsFrontFace0,
  out float4 o0 : SV_Target0,
  out float4 o1 : SV_Target1,
  out float4 o2 : SV_Target2)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7;
  uint4 bitmask;
  r0.xy = v3.xy / v3.zz;
  r0.x = Viewport__DepthVPSampler__TexObj__.Sample(Viewport__DepthVPSampler__SampObj___s, r0.xy).x;
  
  float d=r0.x;
  
  r0.yw = float2(1.000000e+000,1.000000e+000);
  r1.x = dot(r0.xy, _InvProjectionMatrix._m22_m32);
  r0.x = dot(r0.xy, _InvProjectionMatrix._m23_m33);
  
  r0.x = -r1.x / r0.x;
  r1.xyz = v4.xyz / v4.zzz;

  r1.xyz = r1.xyz * -r0.xxx;
  r1.w = 1.000000000e+000;

// float4 stereo = StereoParams.Load(0);
// r1.x -= stereo.x*(-r1.z - stereo.y)*_InvProjectionMatrix._m00;  
// r1.x -= stereo.x*(d - stereo.y)*_InvProjectionMatrix._m00; 

r2.x = dot(r1.xyzw, v1.xyzw);
r2.y = dot(r1.xyzw, v2.xyzw);

  r2.zw = float2(1.000000e+000,1.000000e+000) + -r2.xy;
  r3.x = r2.x < 0;
  r3.y = r2.y < 0;
  r3.z = r2.z < 0;
  r3.w = r2.w < 0;
  
  r2.xyzw = v0.xyxy * r2.xyxy + v0.zwzw;
 
  r0.xy = (int2)r3.zw | (int2)r3.xy;
  r0.x = (int)r0.y | (int)r0.x;
  if (r0.x != 0) discard;
  r0.x = dot(v5.xyz, v5.xyz);
  r0.x = rsqrt(r0.x);
  r3.xyz = v5.xyz * r0.xxx;
  r0.x = dot(v7.xyz, v7.xyz);
  r0.x = rsqrt(r0.x);
  r4.xyz = v7.xyz * r0.xxx;
  r0.x = dot(v6.xyz, v6.xyz);
  r0.x = rsqrt(r0.x);
  r5.xyz = v6.xyz * r0.xxx;
  r6.xyzw = _NormalUVTiling1.xyzw * r2.xyzw;
  r0.xy = r6.xy + r6.zw;
  
  
  
  
  r0.xy = MaterialDriverGeneric__NormalTexture1__TexObj__.Sample(MaterialDriverGeneric__NormalTexture1__SampObj___s, r0.xy).yw;
  r0.xy = r0.yx * float2(2.000000e+000,2.000000e+000) + float2(-1.000000e+000,-1.000000e+000);
  r2.xy = _NormalIntensity.xx * r0.xy;
  r0.x = saturate(dot(r0.xy, r0.xy));
  r0.x = 1.000000000e+000 + -r0.x;
  r0.x = sqrt(r0.x);
  r5.xyz = r2.yyy * r5.xyz;
  r4.xyz = r2.xxx * r4.xyz + r5.xyz;
  r3.xyz = r0.xxx * r3.xyz + r4.xyz;
  r3.x = v10.x ? r3.x : -r3.x;
  r3.y = v10.x ? r3.y : -r3.y;
  r3.z = v10.x ? r3.z : -r3.z;

 

  r4.z = dot(r1.xyzw, _InvViewMatrix._m02_m12_m22_m32);
  r4.x = dot(r1.xyzw, _InvViewMatrix._m00_m10_m20_m30);
  r4.y = dot(r1.xyzw, _InvViewMatrix._m01_m11_m21_m31);
  
 
  r1.xyz = r3.xyz * float3(3.000000e-001,3.000000e-001,2.000000e-001) + r4.xyz;
  
  r0.xy = float2(2.000000e-001,2.000000e-001) * r4.xy;
  r0.xy = MaterialDriverGeneric__RaindropSplashesTexture__TexObj__.Sample(MaterialDriverGeneric__RaindropSplashesTexture__SampObj___s, r0.xy).xy;
  r1.w = 1.000000000e+000;
 
  r4.z = dot(r1.xyzw, _LightSpotShadowProjections._m02_m12_m22_m32);
  r4.x = dot(r1.xyzw, _LightSpotShadowProjections._m00_m10_m20_m30);
  r4.y = dot(r1.xyzw, _LightSpotShadowProjections._m01_m11_m21_m31);
  
  r1.z = 0.000000000e+000;
  r2.xy = float2(1.562500e-002,1.562500e-002) * v8.xy;
  r2.xy = LightData__FacettedShadowNoiseTexture__TexObj__.SampleLevel(LightData__FacettedShadowNoiseTexture__SampObj___s, r2.xy, 0.000000000e+000).xy;
  r2.xy = r2.yx * float2(2.000000e+000,2.000000e+000) + float2(-1.000000e+000,-1.000000e+000);
  r5.xy = float2(-6.200062e-002,1.945140e-001) * r2.xx;
  r5.xy = r2.yy * float2(6.495577e-001,-2.520991e-001) + -r5.xy;
  r6.xy = _LightShadowMapSize.zw * v5.ww;
  r6.xy = float2(2.200000e+000,2.200000e+000) * r6.xy;
  r5.z = dot(r2.yx, float2(-6.200062e-002,6.495577e-001));
  r1.xy = r6.xy * r5.xz;
  r1.xyz = r4.xyz + r1.xyz;
  r1.x = LightData__LightShadowTexture__TexObj__.SampleCmpLevelZero(ShadowRealSampler_s, r1.xy, r1.z, int2(0, 0)).x;
  r5.w = dot(r2.yx, float2(1.945140e-001,-2.520991e-001));
  r5.xy = r6.xy * r5.yw;
  r5.z = 0.000000000e+000;
  r1.yzw = r5.xyz + r4.xyz;
  r1.y = LightData__LightShadowTexture__TexObj__.SampleCmpLevelZero(ShadowRealSampler_s, r1.yz, r1.w, int2(0, 0)).x;
  r1.x = r1.x + r1.y;
  r1.yz = float2(-6.026105e-001,9.879663e-001) * r2.xx;
  r5.xy = r2.yy * float2(-1.675160e-001,8.006269e-002) + -r1.yz;
  r5.z = dot(r2.yx, float2(-6.026105e-001,-1.675160e-001));
  r5.w = dot(r2.yx, float2(9.879663e-001,8.006269e-002));
  r7.xy = r5.yw * r6.xy;
  r5.xy = r5.xz * r6.xy;
  r5.z = 0.000000000e+000;
  r1.yzw = r5.xyz + r4.xyz;
  r1.y = LightData__LightShadowTexture__TexObj__.SampleCmpLevelZero(ShadowRealSampler_s, r1.yz, r1.w, int2(0, 0)).x;
  r1.x = r1.x + r1.y;
  r7.z = 0.000000000e+000;
  r1.yzw = r7.xyz + r4.xyz;
  r2.xy = -_RainLightViewpointLPS_DistVPToEdgesLPS.xy + r4.xy;
  r2.xy = _RainLightViewpointLPS_DistVPToEdgesLPS.zw + -abs(-r2.xy);
  r2.xy = float2(5.000000e+000,5.000000e+000) * r2.xy;
  r2.x = saturate(min(r2.y, r2.x));
  r1.y = LightData__LightShadowTexture__TexObj__.SampleCmpLevelZero(ShadowRealSampler_s, r1.yz, r1.w, int2(0, 0)).x;
  r1.x = r1.x + r1.y;
  r1.x = r1.x * 2.500000000e-001 + -1.000000000e+000;
  r1.x = r2.x * r1.x + 1.000000000e+000;
  r1.y = _GlobalWeatherControl_StaticReflectionIntensityDest.x * r1.x;
  r1.z = -1.000000000e+000 + _WetDiffuseMultiplier;
  r1.z = r1.y * r1.z + 1.000000000e+000;
  r4.xyzw = _DiffuseUVTiling1.xyzw * r2.zwzw;
  r2.xyzw = _SpecularUVTiling1.xyzw * r2.zwzw;
  r2.xy = r2.xy + r2.zw;
  r2.xyz = MaterialDriverGeneric__SpecularTexture1__TexObj__.Sample(MaterialDriverGeneric__SpecularTexture1__SampObj___s, r2.xy).xzw;
  r4.xy = r4.xy + r4.zw;
  r4.xyzw = MaterialDriverGeneric__DiffuseTexture1__TexObj__.Sample(MaterialDriverGeneric__DiffuseTexture1__SampObj___s, r4.xy).xyzw;
  r4.xyz = _DiffuseColor1.xyz * r4.xyz;
  r1.w = v3.w * r4.w;
  o0.xyz = r4.xyz * r1.zzz;
  o0.w = r1.w;
  r1.z = saturate(v10.x ? v4.w : -v4.w);
  r0.xy = r1.zz * r0.xy;
  r4.xy = r0.xy * r1.xx;
  r4.z = 0.000000000e+000;
  r3.xyz = r4.xyz + r3.xyz;
  o1.xyz = r3.xyz * float3(5.000000e-001,5.000000e-001,5.000000e-001) + float3(5.000000e-001,5.000000e-001,5.000000e-001);
  o1.w = r1.w;
  o2.w = r1.w;
  r0.z = r2.z;
  r0.x = _MaskAlphaChannelMode ? r0.z : r0.w;
  r0.y = _MaskAlphaChannelMode ? r0.w : r0.z;
  r0.x = r1.y * r0.x;
  o2.z = r0.y;
  r0.yzw = _WetSpecularPower.xzw + -_SpecularPower.xzw;
  r0.yzw = r0.xxx * r0.yzw + _SpecularPower.xzw;
  r0.z = r0.z + -r0.w;
  r0.z = r2.x * r0.z + r0.w;
  r0.y = log2(r0.y);
  r0.y = 7.692307979e-002 * r0.y;
  o2.y = _MaskRedChannelMode ? r0.z : r0.y;
  r0.yzw = _WetReflectance.xyz + -_Reflectance.xyz;
  r0.xyz = r0.xxx * r0.yzw + _Reflectance.xyz;
  r0.z = r0.z + -r0.y;
  r0.y = r2.y * r0.z + r0.y;
  o2.x = _MaskBlueChannelMode ? r0.y : r0.x;
  
  o0=0;
  o1=0;
  o2=0;
  
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 _DebugValues;               // Offset:    0 Size:    16 [unused]
//   float4 _GlobalLightsIntensity;     // Offset:   16 Size:    16 [unused]
//   float4 _GlobalScalars;             // Offset:   32 Size:    16 [unused]
//   float4 _GlobalScalars2;            // Offset:   48 Size:    16 [unused]
//   float4 _GlobalWeatherControl_StaticReflectionIntensityDest;// Offset:   64 Size:    16
//   float4 _WorldLoadingRingSizes;     // Offset:   80 Size:    16 [unused]
//   float4 _ReflectionAmbientColor_WindNoiseDeltaVectorX;// Offset:   96 Size:    16 [unused]
//   float4 _ReflectionLightDirection_WindNoiseDeltaVectorY;// Offset:  112 Size:    16 [unused]
//   float4 _ReflectionLightColor_CrowdAnimationStartTime;// Offset:  128 Size:    16 [unused]
//   float4 _WindVelocityTextureCoverage;// Offset:  144 Size:    16 [unused]
//   float4 _WindGlobalNoiseTextureCoverage_VertexAOIntensity;// Offset:  160 Size:    16 [unused]
//   float4 _WindGlobalNoiseTextureChannelSel_ReflectionTextureBlendRatio;// Offset:  176 Size:    16 [unused]
//   float4 _WindGlobalTurbulence;      // Offset:  192 Size:    16 [unused]
//   float4 _DefaultAmbientProbesColour_TimeOfDay;// Offset:  208 Size:    16 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4x4 _ViewRotProjectionMatrix; // Offset:    0 Size:    64 [unused]
//   float4x4 _ViewProjectionMatrix;    // Offset:   64 Size:    64 [unused]
//   float4x4 _ProjectionMatrix;        // Offset:  128 Size:    64 [unused]
//   float4x4 _InvProjectionMatrix;     // Offset:  192 Size:    64
//   float4x4 _InvProjectionMatrixDepth;// Offset:  256 Size:    64 [unused]
//   float4x4 _DepthTextureTransform;   // Offset:  320 Size:    64 [unused]
//   float4x3 _ViewMatrix;              // Offset:  384 Size:    48 [unused]
//   float4x3 _InvViewMatrix;           // Offset:  432 Size:    48
//   float4x4 _PreviousViewProjectionMatrix;// Offset:  480 Size:    64 [unused]
//   float4 _CameraDistances;           // Offset:  544 Size:    16 [unused]
//   float4 _ViewportSize;              // Offset:  560 Size:    16 [unused]
//   float4 _CameraPosition_MaxStaticReflectionMipIndex;// Offset:  576 Size:    16 [unused]
//   float4 _CameraDirection_MaxParaboloidReflectionMipIndex;// Offset:  592 Size:    16 [unused]
//   float4 _ViewPoint_ExposureScale;   // Offset:  608 Size:    16 [unused]
//   float4 _FogColorVector_ExposedWhitePointOverExposureScale;// Offset:  624 Size:    16 [unused]
//   float3 _SideFogColor;              // Offset:  640 Size:    12 [unused]
//   float3 _SunFogColorDelta;          // Offset:  656 Size:    12 [unused]
//   float3 _OppositeFogColorDelta;     // Offset:  672 Size:    12 [unused]
//   float4 _FogValues0;                // Offset:  688 Size:    16 [unused]
//   float4 _FogValues1;                // Offset:  704 Size:    16 [unused]
//   float4 _CameraNearPlaneSize;       // Offset:  720 Size:    16 [unused]
//   float4 _UncompressDepthWeights_ShadowProjDepthMinValue;// Offset:  736 Size:    16 [unused]
//   float4 _UncompressDepthWeightsWS_ReflectionFadeTarget;// Offset:  752 Size:    16 [unused]
//   float4 _WorldAmbientColorParams0;  // Offset:  768 Size:    16 [unused]
//   float4 _WorldAmbientColorParams1;  // Offset:  784 Size:    16 [unused]
//   float4 _WorldAmbientColorParams2;  // Offset:  800 Size:    16 [unused]
//   float4 _GlobalWorldTextureParams;  // Offset:  816 Size:    16 [unused]
//   float4 _CullingCameraPosition_OneOverAutoExposureScale;// Offset:  832 Size:    16 [unused]
//   float4 _AmbientSkyColor_ReflectionScaleStrength;// Offset:  848 Size:    16 [unused]
//   float4 _AmbientGroundColor_ReflectionScaleDistanceMul;// Offset:  864 Size:    16 [unused]
//   float4 _FacettedShadowCastParams;  // Offset:  880 Size:    16 [unused]
//   float4 _FSMClipPlanes;             // Offset:  896 Size:    16 [unused]
//   float2 _ReflectionGIControl;       // Offset:  912 Size:     8 [unused]
//
// }
//
// cbuffer MaterialDriverGeneric
// {
//
//   float4 _AlphaTexture1Size;         // Offset:    0 Size:    16 [unused]
//   float4 _AlphaUVTiling1;            // Offset:   16 Size:    16 [unused]
//   float4 _DiffuseTexture1Size;       // Offset:   32 Size:    16 [unused]
//   float4 _DiffuseTexture2Size;       // Offset:   48 Size:    16 [unused]
//   float4 _DiffuseUVTiling1;          // Offset:   64 Size:    16
//   float4 _DiffuseUVTiling2;          // Offset:   80 Size:    16 [unused]
//   float4 _EmissiveTextureSize;       // Offset:   96 Size:    16 [unused]
//   float4 _EmissiveUVTiling;          // Offset:  112 Size:    16 [unused]
//   float4 _GrungeTextureSize;         // Offset:  128 Size:    16 [unused]
//   float4 _MaterialPickingID;         // Offset:  144 Size:    16 [unused]
//   float4 _NormalTexture1Size;        // Offset:  160 Size:    16 [unused]
//   float4 _NormalUVTiling1;           // Offset:  176 Size:    16
//   float4 _RaindropSplashesTextureSize;// Offset:  192 Size:    16 [unused]
//   float4 _ReflectionIntensity;       // Offset:  208 Size:    16 [unused]
//   float4 _SpecularPower;             // Offset:  224 Size:    16
//   float4 _SpecularTexture1Size;      // Offset:  240 Size:    16 [unused]
//   float4 _SpecularUVTiling1;         // Offset:  256 Size:    16
//   float4 _VertexAnimationParameters; // Offset:  272 Size:    16 [unused]
//   float4 _WetSpecularPower;          // Offset:  288 Size:    16
//   float3 _Diffuse2Color1;            // Offset:  304 Size:    12 [unused]
//   float _GrungeOpacity;              // Offset:  316 Size:     4 [unused]
//   float3 _DiffuseColor1;             // Offset:  320 Size:    12
//   float _InvertMaskForColorize;      // Offset:  332 Size:     4 [unused]
//   float3 _DiffuseColor2;             // Offset:  336 Size:    12 [unused]
//   float _ReliefDepth;                // Offset:  348 Size:     4 [unused]
//   float3 _Reflectance;               // Offset:  352 Size:    12
//   float _Translucency;               // Offset:  364 Size:     4 [unused]
//   float3 _WetReflectance;            // Offset:  368 Size:    12
//   float _WaveAmplitude;              // Offset:  380 Size:     4 [unused]
//   float2 _GrungeTiling;              // Offset:  384 Size:     8 [unused]
//   float _WaveRipples;                // Offset:  392 Size:     4 [unused]
//   float _WaveSpeed;                  // Offset:  396 Size:     4 [unused]
//   float2 _NormalIntensity;           // Offset:  400 Size:     8
//   float _WetDiffuseMultiplier;       // Offset:  408 Size:     4
//   float _ZFCamHeight;                // Offset:  412 Size:     4 [unused]
//   float _ZFightOffset;               // Offset:  416 Size:     4 [unused]
//   int _ColorizeDiffuse1Mode;         // Offset:  420 Size:     4 [unused]
//   int _MaskAlphaChannelMode;         // Offset:  424 Size:     4
//   int _MaskBlueChannelMode;          // Offset:  428 Size:     4
//   int _MaskRedChannelMode;           // Offset:  432 Size:     4
//   int _RaindropRippleType;           // Offset:  436 Size:     4 [unused]
//   int _ReflectionType;               // Offset:  440 Size:     4 [unused]
//   bool _EmissiveMeshLights;          // Offset:  444 Size:     4 [unused]
//   bool _HalfLambert;                 // Offset:  448 Size:     4 [unused]
//   bool _SwapSpecularGlossAndOcclusion;// Offset:  452 Size:     4 [unused]
//   bool _UseColorizeDiffuse1;         // Offset:  456 Size:     4 [unused]
//   bool _WaveEnabled;                 // Offset:  460 Size:     4 [unused]
//
// }
//
// cbuffer LightData
// {
//
//   float4 _CascadedShadowDepthRanges; // Offset:    0 Size:    16 [unused]
//   float4 _CascadedShadowRanges;      // Offset:   16 Size:    16 [unused]
//   float4 _CascadedShadowScale;       // Offset:   32 Size:    16 [unused]
//   float4 _CascadedShadowSliceDepthOffsets;// Offset:   48 Size:    16 [unused]
//   float4 _CascadedShadowSliceDepthScales;// Offset:   64 Size:    16 [unused]
//   float4 _CascadedShadowSliceScaleOffsets[3];// Offset:   80 Size:    48 [unused]
//   float4 _CascadedShadowSliceScaleOffsetsBiased[3];// Offset:  128 Size:    48 [unused]
//   float4 _FacettedShadowReceiveParams;// Offset:  176 Size:    16 [unused]
//   float4 _LightCapsuleDivLength;     // Offset:  192 Size:    16 [unused]
//   float4 _LightFadingClipPlanes[8];  // Offset:  208 Size:   128 [unused]
//   float4 _LightProjectedVideoUnpack[8];// Offset:  336 Size:   128 [unused]
//   float4 _LightShadowFactor;         // Offset:  464 Size:    16 [unused]
//   float4 _LightShadowMapSize;        // Offset:  480 Size:    16
//   float4x4 _LightSpotShadowProjections;// Offset:  496 Size:    64
//   float4x4 _LightVolumeTransform;    // Offset:  560 Size:    64 [unused]
//   float4 _LongRangeShadowVolumePosScaleBias;// Offset:  624 Size:    16 [unused]
//   float4 _LongRangeShadowVolumeUvScaleBias;// Offset:  640 Size:    16 [unused]
//   float4 _RainLightViewpointLPS_DistVPToEdgesLPS;// Offset:  656 Size:    16
//   float3 _LightAttenuation;          // Offset:  672 Size:    12 [unused]
//   float _LightSpecularIntensity;     // Offset:  684 Size:     4 [unused]
//   float3 _LightCapsuleMulLength;     // Offset:  688 Size:    12 [unused]
//   float _LightSpotNearClipFactor;    // Offset:  700 Size:     4 [unused]
//   float3 _LightDirection;            // Offset:  704 Size:    12 [unused]
//   float3 _LightFrontColor;           // Offset:  720 Size:    12 [unused]
//   float3 _LightPosition;             // Offset:  736 Size:    12 [unused]
//   float2 _LightCapsuleParams;        // Offset:  752 Size:     8 [unused]
//   float2 _LightShadowDepthTransform; // Offset:  760 Size:     8 [unused]
//   float2 _LightSpotConeFactors;      // Offset:  768 Size:     8 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Viewport__DepthVPSampler__SampObj__    sampler      NA          NA    0        1
// MaterialDriverGeneric__DiffuseTexture1__SampObj__    sampler      NA          NA    1        1
// MaterialDriverGeneric__NormalTexture1__SampObj__    sampler      NA          NA    2        1
// MaterialDriverGeneric__RaindropSplashesTexture__SampObj__    sampler      NA          NA    3        1
// MaterialDriverGeneric__SpecularTexture1__SampObj__    sampler      NA          NA    4        1
// LightData__FacettedShadowNoiseTexture__SampObj__    sampler      NA          NA    5        1
// ShadowRealSampler               sampler_c      NA          NA    6        1
// Viewport__DepthVPSampler__TexObj__    texture  float4          2d    0        1
// MaterialDriverGeneric__DiffuseTexture1__TexObj__    texture  float4          2d    1        1
// MaterialDriverGeneric__NormalTexture1__TexObj__    texture  float4          2d    2        1
// MaterialDriverGeneric__RaindropSplashesTexture__TexObj__    texture  float4          2d    3        1
// MaterialDriverGeneric__SpecularTexture1__TexObj__    texture  float4          2d    4        1
// LightData__LightShadowTexture__TexObj__    texture  float4          2d    5        1
// LightData__FacettedShadowNoiseTexture__TexObj__    texture  float4          2d    6        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// MaterialDriverGeneric             cbuffer      NA          NA    2        1
// LightData                         cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyz         7     NONE   float   xyz 
// TEXCOORD                 8   xy          8     NONE   float   xy  
// SV_Position              0   xyzw        9      POS   float       
// SV_IsFrontFace           0   x          10    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[5], immediateIndexed
dcl_constantbuffer cb1[30], immediateIndexed
dcl_constantbuffer cb2[28], immediateIndexed
dcl_constantbuffer cb3[42], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps linear v8.xy
dcl_input_ps_sgv v10.x, is_front_face
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 8
div r0.xy, v3.xyxx, v3.zzzz
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t0.xyzw, s0
mov r0.yw, l(0,1.000000,0,1.000000)
dp2 r1.x, r0.xyxx, cb1[14].zwzz
dp2 r0.x, r0.xyxx, cb1[15].zwzz
div r0.x, -r1.x, r0.x
div r1.xyz, v4.xyzx, v4.zzzz
mul r1.xyz, -r0.xxxx, r1.xyzx
mov r1.w, l(1.000000)
dp4 r2.x, r1.xyzw, v1.xyzw
dp4 r2.y, r1.xyzw, v2.xyzw
add r2.zw, -r2.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
lt r3.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mad r2.xyzw, v0.xyxy, r2.xyxy, v0.zwzw
or r0.xy, r3.zwzz, r3.xyxx
or r0.x, r0.y, r0.x
discard_nz r0.x
dp3 r0.x, v5.xyzx, v5.xyzx
rsq r0.x, r0.x
mul r3.xyz, r0.xxxx, v5.xyzx
dp3 r0.x, v7.xyzx, v7.xyzx
rsq r0.x, r0.x
mul r4.xyz, r0.xxxx, v7.xyzx
dp3 r0.x, v6.xyzx, v6.xyzx
rsq r0.x, r0.x
mul r5.xyz, r0.xxxx, v6.xyzx
mul r6.xyzw, r2.xyzw, cb2[11].xyzw
add r0.xy, r6.zwzz, r6.xyxx
sample_indexable(texture2d)(float,float,float,float) r0.xy, r0.xyxx, t2.ywxz, s2
mad r0.xy, r0.yxyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r0.xyxx, cb2[25].xxxx
dp2_sat r0.x, r0.xyxx, r0.xyxx
add r0.x, -r0.x, l(1.000000)
sqrt r0.x, r0.x
mul r5.xyz, r5.xyzx, r2.yyyy
mad r4.xyz, r2.xxxx, r4.xyzx, r5.xyzx
mad r3.xyz, r0.xxxx, r3.xyzx, r4.xyzx
movc r3.xyz, v10.xxxx, r3.xyzx, -r3.xyzx
dp4 r4.z, r1.xyzw, cb1[29].xyzw
dp4 r4.x, r1.xyzw, cb1[27].xyzw
dp4 r4.y, r1.xyzw, cb1[28].xyzw
mad r1.xyz, r3.xyzx, l(0.300000, 0.300000, 0.200000, 0.000000), r4.xyzx
mul r0.xy, r4.xyxx, l(0.200000, 0.200000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r0.xy, r0.xyxx, t3.xyzw, s3
mov r1.w, l(1.000000)
dp4 r4.z, r1.xyzw, cb3[33].xyzw
dp4 r4.x, r1.xyzw, cb3[31].xyzw
dp4 r4.y, r1.xyzw, cb3[32].xyzw
mov r1.z, l(0)
mul r2.xy, v8.xyxx, l(0.015625, 0.015625, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r2.xy, r2.xyxx, t6.xyzw, s5, l(0.000000)
mad r2.xy, r2.yxyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r5.xy, r2.xxxx, l(-0.062001, 0.194514, 0.000000, 0.000000)
mad r5.xy, r2.yyyy, l(0.649558, -0.252099, 0.000000, 0.000000), -r5.xyxx
mul r6.xy, v5.wwww, cb3[30].zwzz
mul r6.xy, r6.xyxx, l(2.200000, 2.200000, 0.000000, 0.000000)
dp2 r5.z, r2.yxyy, l(-0.062001, 0.649558, 0.000000, 0.000000)
mul r1.xy, r5.xzxx, r6.xyxx
add r1.xyz, r1.xyzx, r4.xyzx
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.x, r1.xyxx, t5.xxxx, s6, r1.z
dp2 r5.w, r2.yxyy, l(0.194514, -0.252099, 0.000000, 0.000000)
mul r5.xy, r5.ywyy, r6.xyxx
mov r5.z, l(0)
add r1.yzw, r4.xxyz, r5.xxyz
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.y, r1.yzyy, t5.xxxx, s6, r1.w
add r1.x, r1.y, r1.x
mul r1.yz, r2.xxxx, l(0.000000, -0.602611, 0.987966, 0.000000)
mad r5.xy, r2.yyyy, l(-0.167516, 0.080063, 0.000000, 0.000000), -r1.yzyy
dp2 r5.z, r2.yxyy, l(-0.602611, -0.167516, 0.000000, 0.000000)
dp2 r5.w, r2.yxyy, l(0.987966, 0.080063, 0.000000, 0.000000)
mul r7.xy, r6.xyxx, r5.ywyy
mul r5.xy, r6.xyxx, r5.xzxx
mov r5.z, l(0)
add r1.yzw, r4.xxyz, r5.xxyz
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.y, r1.yzyy, t5.xxxx, s6, r1.w
add r1.x, r1.y, r1.x
mov r7.z, l(0)
add r1.yzw, r4.xxyz, r7.xxyz
add r2.xy, r4.xyxx, -cb3[41].xyxx
add r2.xy, -|r2.xyxx|, cb3[41].zwzz
mul r2.xy, r2.xyxx, l(5.000000, 5.000000, 0.000000, 0.000000)
min_sat r2.x, r2.y, r2.x
sample_c_lz_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.y, r1.yzyy, t5.xxxx, s6, r1.w
add r1.x, r1.y, r1.x
mad r1.x, r1.x, l(0.250000), l(-1.000000)
mad r1.x, r2.x, r1.x, l(1.000000)
mul r1.y, r1.x, cb0[4].x
add r1.z, cb2[25].z, l(-1.000000)
mad r1.z, r1.y, r1.z, l(1.000000)
mul r4.xyzw, r2.zwzw, cb2[4].xyzw
mul r2.xyzw, r2.zwzw, cb2[16].xyzw
add r2.xy, r2.zwzz, r2.xyxx
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t4.xzwy, s4
add r4.xy, r4.zwzz, r4.xyxx
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r4.xyxx, t1.xyzw, s1
mul r4.xyz, r4.xyzx, cb2[20].xyzx
mul r1.w, r4.w, v3.w
mul o0.xyz, r1.zzzz, r4.xyzx
mov o0.w, r1.w
movc_sat r1.z, v10.x, v4.w, -v4.w
mul r0.xy, r0.xyxx, r1.zzzz
mul r4.xy, r1.xxxx, r0.xyxx
mov r4.z, l(0)
add r3.xyz, r3.xyzx, r4.xyzx
mad o1.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mov o1.w, r1.w
mov o2.w, r1.w
mov r0.z, r2.z
movc r0.xy, cb2[26].zzzz, r0.zwzz, r0.wzww
mul r0.x, r0.x, r1.y
mov o2.z, r0.y
add r0.yzw, -cb2[14].xxzw, cb2[18].xxzw
mad r0.yzw, r0.xxxx, r0.yyzw, cb2[14].xxzw
add r0.z, -r0.w, r0.z
mad r0.z, r2.x, r0.z, r0.w
log r0.y, r0.y
mul r0.y, r0.y, l(0.076923)
movc o2.y, cb2[27].x, r0.z, r0.y
add r0.yzw, -cb2[22].xxyz, cb2[23].xxyz
mad r0.xyz, r0.xxxx, r0.yzwy, cb2[22].xyzx
add r0.z, -r0.y, r0.z
mad r0.y, r2.y, r0.z, r0.y
movc o2.x, cb2[26].w, r0.y, r0.x
ret 
// Approximately 124 instruction slots used
 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
