//Shadows/AO under cars
cbuffer Viewport : register(b0)
{
  float4x4 _ViewRotProjectionMatrix : packoffset(c0);
  float4x4 _ViewProjectionMatrix : packoffset(c4);
  float4x4 _ProjectionMatrix : packoffset(c8);
  float4x4 _InvProjectionMatrix : packoffset(c12);
  float4x4 _InvProjectionMatrixDepth : packoffset(c16);
  float4x4 _DepthTextureTransform : packoffset(c20);
  float4x3 _ViewMatrix : packoffset(c24);
  float4x3 _InvViewMatrix : packoffset(c27);
  float4x4 _PreviousViewProjectionMatrix : packoffset(c30);
  float4 _CameraDistances : packoffset(c34);
  float4 _ViewportSize : packoffset(c35);
  float4 _CameraPosition_MaxStaticReflectionMipIndex : packoffset(c36);
  float4 _CameraDirection_MaxParaboloidReflectionMipIndex : packoffset(c37);
  float4 _ViewPoint_ExposureScale : packoffset(c38);
  float4 _FogColorVector_ExposedWhitePointOverExposureScale : packoffset(c39);
  float3 _SideFogColor : packoffset(c40);
  float3 _SunFogColorDelta : packoffset(c41);
  float3 _OppositeFogColorDelta : packoffset(c42);
  float4 _FogValues0 : packoffset(c43);
  float4 _FogValues1 : packoffset(c44);
  float4 _CameraNearPlaneSize : packoffset(c45);
  float4 _UncompressDepthWeights_ShadowProjDepthMinValue : packoffset(c46);
  float4 _UncompressDepthWeightsWS_ReflectionFadeTarget : packoffset(c47);
  float4 _WorldAmbientColorParams0 : packoffset(c48);
  float4 _WorldAmbientColorParams1 : packoffset(c49);
  float4 _WorldAmbientColorParams2 : packoffset(c50);
  float4 _GlobalWorldTextureParams : packoffset(c51);
  float4 _CullingCameraPosition_OneOverAutoExposureScale : packoffset(c52);
  float4 _AmbientSkyColor_ReflectionScaleStrength : packoffset(c53);
  float4 _AmbientGroundColor_ReflectionScaleDistanceMul : packoffset(c54);
  float4 _FacettedShadowCastParams : packoffset(c55);
  float4 _FSMClipPlanes : packoffset(c56);
  float2 _ReflectionGIControl : packoffset(c57);
}
SamplerState Viewport__DepthVPSampler__SampObj___s : register(s0);
SamplerState Viewport__GBufferNormalTexture__SampObj___s : register(s1);
SamplerState AmbientOcclusionVolume__AmbientOcclusionTexure__SampObj___s : register(s2);
Texture2D<float4> Viewport__DepthVPSampler__TexObj__ : register(t0);
Texture2D<float4> Viewport__GBufferNormalTexture__TexObj__ : register(t1);
Texture2D<float4> AmbientOcclusionVolume__AmbientOcclusionTexure__TexObj__ : register(t2);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : TEXCOORD0,
  float4 v1 : TEXCOORD1,
  float4 v2 : TEXCOORD2,
  float4 v3 : TEXCOORD3,
  float4 v4 : TEXCOORD4,
  float4 v5 : TEXCOORD5,
  float v6 : TEXCOORD6,
  float4 v7 : SV_Position0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4;
  uint4 bitmask;
  r0.xy = v0.xy / v0.zz;
  r0.z = Viewport__DepthVPSampler__TexObj__.Sample(Viewport__DepthVPSampler__SampObj___s, r0.xy).x;
  r1.xyz = Viewport__GBufferNormalTexture__TexObj__.Sample(Viewport__GBufferNormalTexture__SampObj___s, r0.xy).xyz;
  r1.xyz = r1.xyz * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r0.w = 1.000000000e+000;
  r0.x = dot(r0.zw, _InvProjectionMatrix._m22_m32);
  r0.y = dot(r0.zw, _InvProjectionMatrix._m23_m33);
  r0.x = -r0.x / r0.y;
  r0.yzw = v5.xyz / v5.zzz;
  r2.x = v1.w;
  r2.y = v2.w;
  r2.z = v3.w;
  
float4 stereo = StereoParams.Load(0);
float4 r22;
r22.xyz = r0.yzw * -r0.xxx;
r22.x -= stereo.x*(-r22.z - stereo.y)*_InvProjectionMatrix._m00;  
  
  r0.xyz = r22.xyz + -r2.xyz;  //r0.yzw * -r0.xxx + -r2.xyz;
  
  
  r2.z = dot(r0.xyz, v3.xyz);
  r2.z = abs(r2.z);
  r3.x = dot(r0.xyz, v1.xyz);
  r3.y = dot(r0.xyz, v2.xyz);
  r3.zw = abs(r3.xy) * abs(r3.xy);
  r4.xy = r3.xy * float2(5.000000e-001,5.000000e-001) + float2(5.000000e-001,5.000000e-001);
  r2.xy = r3.zw * r3.zw;
  r2.xyz = min(r2.xyz, float3(1.000000e+000,1.000000e+000,1.000000e+000));
  r2.xyz = float3(1.000000e+000,1.000000e+000,1.000000e+000) + -r2.xyz;
  r0.w = r2.x * r2.y;
  r0.w = r0.w * r2.z;
  r4.z = 1.000000000e+000 + -r4.y;
  r2.xyzw = AmbientOcclusionVolume__AmbientOcclusionTexure__TexObj__.Sample(AmbientOcclusionVolume__AmbientOcclusionTexure__SampObj___s, r4.xz).xyzw;
  r1.w = dot(r2.xyzw, v4.xyzw);
  r0.w = r1.w * r0.w;
  r2.x = dot(r1.xyz, _ViewMatrix._m00_m10_m20);
  r2.y = dot(r1.xyz, _ViewMatrix._m01_m11_m21);
  r2.z = dot(r1.xyz, _ViewMatrix._m02_m12_m22);
  r1.x = dot(r2.xyz, r2.xyz);
  r1.x = rsqrt(r1.x);
  r1.xyz = r2.xyz * r1.xxx;
  r1.w = dot(r0.xyz, r0.xyz);
  r1.w = rsqrt(r1.w);
  r0.xyz = r1.www * r0.xyz;
  r0.x = dot(r1.xyz, r0.xyz);
  r0.x = saturate(5.000000000e-001 + r0.x);
  r0.x = -r0.x * v6.x + 1.000000000e+000;
  r0.x = r0.w * r0.x;
  r0.x = v5.w * r0.x;
  r0.x = saturate(min(r0.x, v4.w));
  r0.x = v0.w + -r0.x;
  o0.xyzw = float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000) + r0.xxxx;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4x4 _ViewRotProjectionMatrix; // Offset:    0 Size:    64 [unused]
//   float4x4 _ViewProjectionMatrix;    // Offset:   64 Size:    64 [unused]
//   float4x4 _ProjectionMatrix;        // Offset:  128 Size:    64 [unused]
//   float4x4 _InvProjectionMatrix;     // Offset:  192 Size:    64
//   float4x4 _InvProjectionMatrixDepth;// Offset:  256 Size:    64 [unused]
//   float4x4 _DepthTextureTransform;   // Offset:  320 Size:    64 [unused]
//   float4x3 _ViewMatrix;              // Offset:  384 Size:    48
//   float4x3 _InvViewMatrix;           // Offset:  432 Size:    48 [unused]
//   float4x4 _PreviousViewProjectionMatrix;// Offset:  480 Size:    64 [unused]
//   float4 _CameraDistances;           // Offset:  544 Size:    16 [unused]
//   float4 _ViewportSize;              // Offset:  560 Size:    16 [unused]
//   float4 _CameraPosition_MaxStaticReflectionMipIndex;// Offset:  576 Size:    16 [unused]
//   float4 _CameraDirection_MaxParaboloidReflectionMipIndex;// Offset:  592 Size:    16 [unused]
//   float4 _ViewPoint_ExposureScale;   // Offset:  608 Size:    16 [unused]
//   float4 _FogColorVector_ExposedWhitePointOverExposureScale;// Offset:  624 Size:    16 [unused]
//   float3 _SideFogColor;              // Offset:  640 Size:    12 [unused]
//   float3 _SunFogColorDelta;          // Offset:  656 Size:    12 [unused]
//   float3 _OppositeFogColorDelta;     // Offset:  672 Size:    12 [unused]
//   float4 _FogValues0;                // Offset:  688 Size:    16 [unused]
//   float4 _FogValues1;                // Offset:  704 Size:    16 [unused]
//   float4 _CameraNearPlaneSize;       // Offset:  720 Size:    16 [unused]
//   float4 _UncompressDepthWeights_ShadowProjDepthMinValue;// Offset:  736 Size:    16 [unused]
//   float4 _UncompressDepthWeightsWS_ReflectionFadeTarget;// Offset:  752 Size:    16 [unused]
//   float4 _WorldAmbientColorParams0;  // Offset:  768 Size:    16 [unused]
//   float4 _WorldAmbientColorParams1;  // Offset:  784 Size:    16 [unused]
//   float4 _WorldAmbientColorParams2;  // Offset:  800 Size:    16 [unused]
//   float4 _GlobalWorldTextureParams;  // Offset:  816 Size:    16 [unused]
//   float4 _CullingCameraPosition_OneOverAutoExposureScale;// Offset:  832 Size:    16 [unused]
//   float4 _AmbientSkyColor_ReflectionScaleStrength;// Offset:  848 Size:    16 [unused]
//   float4 _AmbientGroundColor_ReflectionScaleDistanceMul;// Offset:  864 Size:    16 [unused]
//   float4 _FacettedShadowCastParams;  // Offset:  880 Size:    16 [unused]
//   float4 _FSMClipPlanes;             // Offset:  896 Size:    16 [unused]
//   float2 _ReflectionGIControl;       // Offset:  912 Size:     8 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Viewport__DepthVPSampler__SampObj__    sampler      NA          NA    0        1
// Viewport__GBufferNormalTexture__SampObj__    sampler      NA          NA    1        1
// AmbientOcclusionVolume__AmbientOcclusionTexure__SampObj__    sampler      NA          NA    2        1
// Viewport__DepthVPSampler__TexObj__    texture  float4          2d    0        1
// Viewport__GBufferNormalTexture__TexObj__    texture  float4          2d    1        1
// AmbientOcclusionVolume__AmbientOcclusionTexure__TexObj__    texture  float4          2d    2        1
// Viewport                          cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   x           6     NONE   float   x   
// SV_Position              0   xyzw        7      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[27], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.x
dcl_output o0.xyzw
dcl_temps 5
div r0.xy, v0.xyxx, v0.zzzz
sample_indexable(texture2d)(float,float,float,float) r0.z, r0.xyxx, t0.zwxy, s0
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r0.xyxx, t1.xyzw, s1
mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mov r0.w, l(1.000000)
dp2 r0.x, r0.zwzz, cb0[14].zwzz
dp2 r0.y, r0.zwzz, cb0[15].zwzz
div r0.x, -r0.x, r0.y
div r0.yzw, v5.xxyz, v5.zzzz
mov r2.x, v1.w
mov r2.y, v2.w
mov r2.z, v3.w
mad r0.xyz, r0.yzwy, -r0.xxxx, -r2.xyzx
dp3 r2.z, r0.xyzx, v3.xyzx
mov r2.z, |r2.z|
dp3 r3.x, r0.xyzx, v1.xyzx
dp3 r3.y, r0.xyzx, v2.xyzx
mul r3.zw, |r3.xxxy|, |r3.xxxy|
mad r4.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mul r2.xy, r3.zwzz, r3.zwzz
min r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r2.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.w, r2.y, r2.x
mul r0.w, r2.z, r0.w
add r4.z, -r4.y, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r4.xzxx, t2.xyzw, s2
dp4 r1.w, r2.xyzw, v4.xyzw
mul r0.w, r0.w, r1.w
dp3 r2.x, r1.xyzx, cb0[24].xyzx
dp3 r2.y, r1.xyzx, cb0[25].xyzx
dp3 r2.z, r1.xyzx, cb0[26].xyzx
dp3 r1.x, r2.xyzx, r2.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, r2.xyzx
dp3 r1.w, r0.xyzx, r0.xyzx
rsq r1.w, r1.w
mul r0.xyz, r0.xyzx, r1.wwww
dp3 r0.x, r1.xyzx, r0.xyzx
add_sat r0.x, r0.x, l(0.500000)
mad r0.x, -r0.x, v6.x, l(1.000000)
mul r0.x, r0.x, r0.w
mul r0.x, r0.x, v5.w
min_sat r0.x, r0.x, v4.w
add r0.x, -r0.x, v0.w
add o0.xyzw, r0.xxxx, l(1.000000, 1.000000, 1.000000, 1.000000)
ret 
// Approximately 46 instruction slots used
 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
