//Shadows
cbuffer Viewport : register(b0)
{
  float4x4 _ViewRotProjectionMatrix : packoffset(c0);
  float4x4 _ViewProjectionMatrix : packoffset(c4);
  float4x4 _ProjectionMatrix : packoffset(c8);
  float4x4 _InvProjectionMatrix : packoffset(c12);
  float4x4 _InvProjectionMatrixDepth : packoffset(c16);
  float4x4 _DepthTextureTransform : packoffset(c20);
  float4x3 _ViewMatrix : packoffset(c24);
  float4x3 _InvViewMatrix : packoffset(c27);
  float4x4 _PreviousViewProjectionMatrix : packoffset(c30);
  float4 _CameraDistances : packoffset(c34);
  float4 _ViewportSize : packoffset(c35);
  float4 _CameraPosition_MaxStaticReflectionMipIndex : packoffset(c36);
  float4 _CameraDirection_MaxParaboloidReflectionMipIndex : packoffset(c37);
  float4 _ViewPoint_ExposureScale : packoffset(c38);
  float4 _FogColorVector_ExposedWhitePointOverExposureScale : packoffset(c39);
  float3 _SideFogColor : packoffset(c40);
  float3 _SunFogColorDelta : packoffset(c41);
  float3 _OppositeFogColorDelta : packoffset(c42);
  float4 _FogValues0 : packoffset(c43);
  float4 _FogValues1 : packoffset(c44);
  float4 _CameraNearPlaneSize : packoffset(c45);
  float4 _UncompressDepthWeights_ShadowProjDepthMinValue : packoffset(c46);
  float4 _UncompressDepthWeightsWS_ReflectionFadeTarget : packoffset(c47);
  float4 _WorldAmbientColorParams0 : packoffset(c48);
  float4 _WorldAmbientColorParams1 : packoffset(c49);
  float4 _WorldAmbientColorParams2 : packoffset(c50);
  float4 _GlobalWorldTextureParams : packoffset(c51);
  float4 _CullingCameraPosition_OneOverAutoExposureScale : packoffset(c52);
  float4 _AmbientSkyColor_ReflectionScaleStrength : packoffset(c53);
  float4 _AmbientGroundColor_ReflectionScaleDistanceMul : packoffset(c54);
  float4 _FacettedShadowCastParams : packoffset(c55);
  float4 _FSMClipPlanes : packoffset(c56);
  float2 _ReflectionGIControl : packoffset(c57);
}

cbuffer LightProbes : register(b1)
{
  float4 _InteriorIrradianceRadianceScale : packoffset(c0);
  float4x4 _LocalToWorldMatrixWithFeatherMargin : packoffset(c1);
  float4x4 _LocalToWorldMatrixWithoutFeatherMargin : packoffset(c5);
  float4 _MiscDataToTidy : packoffset(c9);
  float4x4 _ScreenToLocalMatrix : packoffset(c10);
  float4x4 _WorldToLocalMatrix : packoffset(c14);
  float3 _InteriorAmbientLightInfo : packoffset(c18);
  float _LinearGridResCutoff : packoffset(c18.w);
  float3 _InteriorUVWBias : packoffset(c19);
  float _MaxLinearSliceIndex : packoffset(c19.w);
  float3 _InteriorUVWScale : packoffset(c20);
  float3 _RcpFeatherWidthsInBasicUVWSpace : packoffset(c21);
  float3 _VolumeCentre : packoffset(c22);
  float3 _VolumeDimensions : packoffset(c23);
  float2 _IrradianceSHInfo : packoffset(c24);
  float2 _MaxDepthBoundsInnerOuter : packoffset(c24.z);
  float2 _RadianceSHInfo : packoffset(c25);
  float2 _SkySHInfo : packoffset(c25.z);
}

cbuffer LightProbesGlobal : register(b2)
{
  float4x4 _BoxMatrix : packoffset(c0);
  float4 _LightProbesMultipliers : packoffset(c4);
  float4 _MinAmbient : packoffset(c5);
  float4 _ProbeUVToViewSpace : packoffset(c6);
  float4 _SH_B : packoffset(c7);
  float4 _SH_G : packoffset(c8);
  float4 _SH_R : packoffset(c9);
  float4x4 _ScreenToWorldMatrix : packoffset(c10);
  float4x4 _ViewProjectionMatrixWithZBias : packoffset(c14);
  float4 _VolumeCentreGlobal : packoffset(c18);
  float4 _WorldEdgeFadeParams : packoffset(c19);
  float3 _DefaultProbeAverageColor : packoffset(c20);
  float _CenterBaseZ : packoffset(c20.w);
  float3 _DefaultProbeLowerColor : packoffset(c21);
  float _DrawDistance : packoffset(c21.w);
  float3 _DefaultProbeUpperColor : packoffset(c22);
  int _ProbeMSAALevel : packoffset(c22.w);
  float2 _LocalLightsMultipliersGlobal : packoffset(c23);
  float2 _RelightingMultiplier : packoffset(c23.z);
}
SamplerState Viewport__GBufferNormalTexture__SampObj___s : register(s0);
SamplerState LightProbes__FloorCeilingTexture__SampObj___s : register(s1);
SamplerState LightProbes__VolumeTextureB__SampObj___s : register(s2);
SamplerState LightProbes__VolumeTextureG__SampObj___s : register(s3);
SamplerState LightProbes__VolumeTextureR__SampObj___s : register(s4);
Texture2D<float4> Viewport__GBufferNormalTexture__TexObj__ : register(t0);
Texture2D<float4> LightProbes__FloorCeilingTexture__TexObj__ : register(t1);
Texture3D<float4> LightProbes__VolumeTextureB__TexObj__ : register(t2);
Texture3D<float4> LightProbes__VolumeTextureG__TexObj__ : register(t3);
Texture3D<float4> LightProbes__VolumeTextureR__TexObj__ : register(t4);
Texture2DMS<float4> LightProbesGlobal__GBufferNormalTextureMS : register(t5);
Texture2DMS<float4> LightProbesGlobal__ProbeDepthSamplerMS : register(t6);

Texture2D<float4> StereoParams : register(t125);

void main(
  float3 v0 : TEXCOORD0,
  float3 v1 : TEXCOORD1,
  float4 v2 : SV_Position0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7;
  uint4 bitmask;
  r0.xy = (int2)v2.xy;
  r0.zw = float2(0.000000e+000,0.000000e+000);
  r1.x = LightProbesGlobal__ProbeDepthSamplerMS.Load(r0.xyw,0.000000000e+000).x;
  r1.z = _MaxDepthBoundsInnerOuter.x < r1.x;
  if (r1.z != 0) discard;
  r1.zw = LightProbesGlobal__ProbeDepthSamplerMS.GetSamplePosition(0);
  r1.zw = v2.xy + r1.zw;
  r1.zw = _ViewportSize.zw * r1.zw;
  r1.y = 1.000000000e+000;
  r2.x = dot(r1.xy, _InvProjectionMatrix._m22_m32);
  r1.x = dot(r1.xy, _InvProjectionMatrix._m23_m33);
  r1.x = -r2.x / r1.x;
  r2.z = -r1.x;
  r1.xy = _ProbeUVToViewSpace.xy * r1.zw + _ProbeUVToViewSpace.zw;
  r2.xy = r1.xy * r2.zz;
  r2.w = 1.000000000e+000;
  
float4 stereo = StereoParams.Load(0);
r2.x -= stereo.x*(-r2.z - stereo.y)*_InvProjectionMatrix._m00;  

  r3.x = dot(r2.xyzw, _InvViewMatrix._m00_m10_m20_m30);
  r3.y = dot(r2.xyzw, _InvViewMatrix._m01_m11_m21_m31);
  r3.z = dot(r2.xyzw, _InvViewMatrix._m02_m12_m22_m32);
  r3.w = 1.000000000e+000;
  r2.y = dot(r3.xyzw, _WorldToLocalMatrix._m00_m10_m20_m30);
  r2.z = dot(r3.xyzw, _WorldToLocalMatrix._m01_m11_m21_m31);
  r2.x = dot(r3.xyzw, _WorldToLocalMatrix._m02_m12_m22_m32);
  r4.xyz = float3(0.000000e+000,0.000000e+000,-5.000000e-001) + r2.yzx;
  r4.xyz = float3(-5.000000e-001,-5.000000e-001,-5.000000e-001) + abs(r4.xyz);
  r4.xyz = saturate(_RcpFeatherWidthsInBasicUVWSpace.xyz * r4.xyz);
  r1.x = max(r4.y, r4.x);
  r1.x = max(r4.z, r1.x);
  r1.x = 1.000000000e+000 + -r1.x;
  r1.x = r1.x * r1.x;
  r1.y = r1.x != 1.000000;
  if (r1.y != 0) discard;
  r2.yz = float2(5.000000e-001,5.000000e-001) + r2.yz;
  r0.xyz = LightProbesGlobal__GBufferNormalTextureMS.Load(r0.xyz,0.000000000e+000).xyz;
  r0.xyz = r0.xyz * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r0.w = Viewport__GBufferNormalTexture__TexObj__.Sample(Viewport__GBufferNormalTexture__SampObj___s, r1.zw).w;
  r0.w = round(r0.w);
  r0.w = 1.250000000e-001 * r0.w;
  r1.y = r0.w >= -r0.w;
  r0.w = frac(abs(r0.w));
  r0.w = r1.y ? r0.w : -r0.w;
  r0.w = r0.w >= 5.000000000e-001;
  r1.yzw = -_ViewPoint_ExposureScale.xyz + r3.xyz;
  r2.w = dot(r1.yzw, r1.yzw);
  r2.w = rsqrt(r2.w);
  r1.yzw = r2.www * r1.yzw;
  r2.w = dot(r1.yzw, r0.xyz);
  r2.w = r2.w + r2.w;
  r1.yzw = r0.xyz * -r2.www + r1.yzw;
  r1.yzw = r1.yzw + -r0.xyz;
  r0.xyz = r1.yzw * float3(2.500000e-001,2.500000e-001,2.500000e-001) + r0.xyz;
  r1.y = dot(r0.xyz, r0.xyz);
  r1.y = rsqrt(r1.y);
  r3.xyw = r1.yyy * r0.xyz;
  r4.xyzw = float4(-1.000000e+000,-1.000000e+000,-1.000000e+000,-1.000000e+000) + _MiscDataToTidy.xxyz;
  r0.x = _VolumeDimensions.x / r4.x;
  r0.x = 3.000000119e-001 * r0.x;
  r0.xy = r3.xy * r0.xx;
  r0.xy = r0.xy / _VolumeDimensions.xy;
  r0.xy = saturate(r2.yz + r0.xy);
  r1.z = -_CameraPosition_MaxStaticReflectionMipIndex.z + r3.z;
  r1.z = saturate(r1.z * 5.000000000e-001 + 5.000000000e-001);
  r1.z = r1.z * -2.000000000e+000 + 1.000000000e+000;
  r0.z = r0.z * r1.y + r1.z;
  r1.y = 1.000000000e+000 + abs(r1.z);
  r0.z = r0.z / r1.y;
  r5.xyzw = float4(5.000000e-001,5.000000e-001,2.000000e-001,5.000000e-001) / _MiscDataToTidy.xyzz;
  r0.xy = r5.xy + r0.xy;
  r1.yz = r4.yz / _MiscDataToTidy.xy;
  r6.xy = r1.yz * r0.xy;
  r2.x = saturate(r2.x);
  r0.x = 0.000000000e+000 < _LinearGridResCutoff;
  r0.y = saturate(r2.x / _LinearGridResCutoff);
  r0.y = _MaxLinearSliceIndex * r0.y;
  r0.x = (int)r0.y & (int)r0.x;
  r0.y = _LinearGridResCutoff < 1.000000000e+000;
  r1.y = saturate(-_LinearGridResCutoff + r2.x);
  r1.z = 1.000000000e+000 + -_LinearGridResCutoff;
  r1.y = r1.y / r1.z;
  r1.y = log2(r1.y);
  r1.y = _MiscDataToTidy.w * r1.y;
  r1.y = exp2(r1.y);
  r1.z = -_MaxLinearSliceIndex + r4.w;
  r1.y = r1.y * r1.z;
  r0.y = r0.y ? r1.y : 0;
  r0.x = r0.x + r0.y;
  r0.x = r0.x / _MiscDataToTidy.z;
  r0.x = r0.z * r5.z + r0.x;
  r0.y = _MiscDataToTidy.z * r0.x;
  r0.z = floor(r0.y);
  r0.y = ceil(r0.y);
  r0.yz = r0.yz / _MiscDataToTidy.zz;
  r1.y = saturate(r6.y);
  r1.y = r1.y / _MiscDataToTidy.z;
  r6.z = r1.y + r0.z;
  r1.yz = LightProbes__FloorCeilingTexture__TexObj__.SampleLevel(LightProbes__FloorCeilingTexture__SampObj___s, r6.xz, 0.000000000e+000).xy;
  r2.xy = float2(1.000000e+000,1.000000e+000) + -r1.yz;
  r1.z = r2.y * 2.500000000e-001 + r1.z;
  r1.z = min(r1.z, r2.x);
  r1.y = r1.y / _MiscDataToTidy.z;
  r1.y = r1.y + r0.z;
  r0.x = -r1.y + r0.x;
  r0.x = _MiscDataToTidy.z * r0.x;
  r0.x = saturate(r0.x / r1.z);
  r0.y = r0.y + -r0.z;
  r0.x = r0.x * r0.y + r0.z;
  r6.w = r0.x + r5.w;
  r2.xyzw = LightProbes__VolumeTextureR__TexObj__.SampleLevel(LightProbes__VolumeTextureR__SampObj___s, r6.xyw, 0.000000000e+000).xyzw;
  r4.xyzw = LightProbes__VolumeTextureG__TexObj__.SampleLevel(LightProbes__VolumeTextureG__SampObj___s, r6.xyw, 0.000000000e+000).xyzw;
  r5.xyzw = LightProbes__VolumeTextureB__TexObj__.SampleLevel(LightProbes__VolumeTextureB__SampObj___s, r6.xyw, 0.000000000e+000).xyzw;
  r2.xyzw = max(r2.xyzw, _MinAmbient.xxxw);
  r4.xyzw = max(r4.xyzw, _MinAmbient.yyyw);
  r5.xyzw = max(r5.xywz, _MinAmbient.zzwz);
  r6.x = dot(r3.xyw, float3(-4.082480e-001,-7.071070e-001,5.773503e-001));
  r7.x = r6.x * 6.660000086e-001 + 3.330000043e-001;
  r6.y = dot(r3.xwy, float3(-4.082480e-001,5.773503e-001,7.071070e-001));
  r7.y = r6.y * 6.660000086e-001 + 3.330000043e-001;
  r6.z = dot(r3.xw, float2(8.164970e-001,5.773503e-001));
  r7.z = r6.z * 6.660000086e-001 + 3.330000043e-001;
  r6.w = -r3.w;
  r7.w = -2.500000000e-001 * r3.w;
  r6.xyzw = saturate(r0.wwww ? r7.xyzw : r6.xyzw);
  r0.xyz = r6.yyy * r4.xyz;
  r0.xyz = r6.xxx * r2.xyz + r0.xyz;
  r0.xyz = r6.zzz * r5.xyw + r0.xyz;
  r5.x = r2.w;
  r5.y = r4.w;
  r0.xyz = r6.www * r5.xyz + r0.xyz;
  r1.y = r6.x + r6.y;
  r1.y = r1.y + r6.z;
  r1.y = r1.y + r6.w;
  r0.xyz = r0.xyz / r1.yyy;
  r1.y = r3.w * 5.000000000e-001 + 5.000000000e-001;
  r1.y = r1.y * 4.000000060e-001 + 8.500000238e-001;
  r1.yzw = r1.yyy * r0.xyz;
  o0.xyz = r0.www ? r1.yzw : r0.xyz;
  o0.w = r1.x;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4x4 _ViewRotProjectionMatrix; // Offset:    0 Size:    64 [unused]
//   float4x4 _ViewProjectionMatrix;    // Offset:   64 Size:    64 [unused]
//   float4x4 _ProjectionMatrix;        // Offset:  128 Size:    64 [unused]
//   float4x4 _InvProjectionMatrix;     // Offset:  192 Size:    64
//   float4x4 _InvProjectionMatrixDepth;// Offset:  256 Size:    64 [unused]
//   float4x4 _DepthTextureTransform;   // Offset:  320 Size:    64 [unused]
//   float4x3 _ViewMatrix;              // Offset:  384 Size:    48 [unused]
//   float4x3 _InvViewMatrix;           // Offset:  432 Size:    48
//   float4x4 _PreviousViewProjectionMatrix;// Offset:  480 Size:    64 [unused]
//   float4 _CameraDistances;           // Offset:  544 Size:    16 [unused]
//   float4 _ViewportSize;              // Offset:  560 Size:    16
//   float4 _CameraPosition_MaxStaticReflectionMipIndex;// Offset:  576 Size:    16
//   float4 _CameraDirection_MaxParaboloidReflectionMipIndex;// Offset:  592 Size:    16 [unused]
//   float4 _ViewPoint_ExposureScale;   // Offset:  608 Size:    16
//   float4 _FogColorVector_ExposedWhitePointOverExposureScale;// Offset:  624 Size:    16 [unused]
//   float3 _SideFogColor;              // Offset:  640 Size:    12 [unused]
//   float3 _SunFogColorDelta;          // Offset:  656 Size:    12 [unused]
//   float3 _OppositeFogColorDelta;     // Offset:  672 Size:    12 [unused]
//   float4 _FogValues0;                // Offset:  688 Size:    16 [unused]
//   float4 _FogValues1;                // Offset:  704 Size:    16 [unused]
//   float4 _CameraNearPlaneSize;       // Offset:  720 Size:    16 [unused]
//   float4 _UncompressDepthWeights_ShadowProjDepthMinValue;// Offset:  736 Size:    16 [unused]
//   float4 _UncompressDepthWeightsWS_ReflectionFadeTarget;// Offset:  752 Size:    16 [unused]
//   float4 _WorldAmbientColorParams0;  // Offset:  768 Size:    16 [unused]
//   float4 _WorldAmbientColorParams1;  // Offset:  784 Size:    16 [unused]
//   float4 _WorldAmbientColorParams2;  // Offset:  800 Size:    16 [unused]
//   float4 _GlobalWorldTextureParams;  // Offset:  816 Size:    16 [unused]
//   float4 _CullingCameraPosition_OneOverAutoExposureScale;// Offset:  832 Size:    16 [unused]
//   float4 _AmbientSkyColor_ReflectionScaleStrength;// Offset:  848 Size:    16 [unused]
//   float4 _AmbientGroundColor_ReflectionScaleDistanceMul;// Offset:  864 Size:    16 [unused]
//   float4 _FacettedShadowCastParams;  // Offset:  880 Size:    16 [unused]
//   float4 _FSMClipPlanes;             // Offset:  896 Size:    16 [unused]
//   float2 _ReflectionGIControl;       // Offset:  912 Size:     8 [unused]
//
// }
//
// cbuffer LightProbes
// {
//
//   float4 _InteriorIrradianceRadianceScale;// Offset:    0 Size:    16 [unused]
//   float4x4 _LocalToWorldMatrixWithFeatherMargin;// Offset:   16 Size:    64 [unused]
//   float4x4 _LocalToWorldMatrixWithoutFeatherMargin;// Offset:   80 Size:    64 [unused]
//   float4 _MiscDataToTidy;            // Offset:  144 Size:    16
//   float4x4 _ScreenToLocalMatrix;     // Offset:  160 Size:    64 [unused]
//   float4x4 _WorldToLocalMatrix;      // Offset:  224 Size:    64
//   float3 _InteriorAmbientLightInfo;  // Offset:  288 Size:    12 [unused]
//   float _LinearGridResCutoff;        // Offset:  300 Size:     4
//   float3 _InteriorUVWBias;           // Offset:  304 Size:    12 [unused]
//   float _MaxLinearSliceIndex;        // Offset:  316 Size:     4
//   float3 _InteriorUVWScale;          // Offset:  320 Size:    12 [unused]
//   float3 _RcpFeatherWidthsInBasicUVWSpace;// Offset:  336 Size:    12
//   float3 _VolumeCentre;              // Offset:  352 Size:    12 [unused]
//   float3 _VolumeDimensions;          // Offset:  368 Size:    12
//   float2 _IrradianceSHInfo;          // Offset:  384 Size:     8 [unused]
//   float2 _MaxDepthBoundsInnerOuter;  // Offset:  392 Size:     8
//   float2 _RadianceSHInfo;            // Offset:  400 Size:     8 [unused]
//   float2 _SkySHInfo;                 // Offset:  408 Size:     8 [unused]
//
// }
//
// cbuffer LightProbesGlobal
// {
//
//   float4x4 _BoxMatrix;               // Offset:    0 Size:    64 [unused]
//   float4 _LightProbesMultipliers;    // Offset:   64 Size:    16 [unused]
//   float4 _MinAmbient;                // Offset:   80 Size:    16
//   float4 _ProbeUVToViewSpace;        // Offset:   96 Size:    16
//   float4 _SH_B;                      // Offset:  112 Size:    16 [unused]
//   float4 _SH_G;                      // Offset:  128 Size:    16 [unused]
//   float4 _SH_R;                      // Offset:  144 Size:    16 [unused]
//   float4x4 _ScreenToWorldMatrix;     // Offset:  160 Size:    64 [unused]
//   float4x4 _ViewProjectionMatrixWithZBias;// Offset:  224 Size:    64 [unused]
//   float4 _VolumeCentreGlobal;        // Offset:  288 Size:    16 [unused]
//   float4 _WorldEdgeFadeParams;       // Offset:  304 Size:    16 [unused]
//   float3 _DefaultProbeAverageColor;  // Offset:  320 Size:    12 [unused]
//   float _CenterBaseZ;                // Offset:  332 Size:     4 [unused]
//   float3 _DefaultProbeLowerColor;    // Offset:  336 Size:    12 [unused]
//   float _DrawDistance;               // Offset:  348 Size:     4 [unused]
//   float3 _DefaultProbeUpperColor;    // Offset:  352 Size:    12 [unused]
//   int _ProbeMSAALevel;               // Offset:  364 Size:     4 [unused]
//   float2 _LocalLightsMultipliersGlobal;// Offset:  368 Size:     8 [unused]
//   float2 _RelightingMultiplier;      // Offset:  376 Size:     8 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Viewport__GBufferNormalTexture__SampObj__    sampler      NA          NA    0        1
// LightProbes__FloorCeilingTexture__SampObj__    sampler      NA          NA    1        1
// LightProbes__VolumeTextureB__SampObj__    sampler      NA          NA    2        1
// LightProbes__VolumeTextureG__SampObj__    sampler      NA          NA    3        1
// LightProbes__VolumeTextureR__SampObj__    sampler      NA          NA    4        1
// Viewport__GBufferNormalTexture__TexObj__    texture  float4          2d    0        1
// LightProbes__FloorCeilingTexture__TexObj__    texture  float4          2d    1        1
// LightProbes__VolumeTextureB__TexObj__    texture  float4          3d    2        1
// LightProbes__VolumeTextureG__TexObj__    texture  float4          3d    3        1
// LightProbes__VolumeTextureR__TexObj__    texture  float4          3d    4        1
// LightProbesGlobal__GBufferNormalTextureMS    texture  float4        2dMS    5        1
// LightProbesGlobal__ProbeDepthSamplerMS    texture  float4        2dMS    6        1
// Viewport                          cbuffer      NA          NA    0        1
// LightProbes                       cbuffer      NA          NA    1        1
// LightProbesGlobal                 cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyz         0     NONE   float       
// TEXCOORD                 1   xyz         1     NONE   float       
// SV_Position              0   xyzw        2      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[39], immediateIndexed
dcl_constantbuffer cb1[25], immediateIndexed
dcl_constantbuffer cb2[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_resource_texture2dms(0) (float,float,float,float) t5
dcl_resource_texture2dms(0) (float,float,float,float) t6
dcl_input_ps_siv linear noperspective v2.xy, position
dcl_output o0.xyzw
dcl_temps 8
ftoi r0.xy, v2.xyxx
mov r0.zw, l(0,0,0,0)
ldms_indexable(texture2dms)(float,float,float,float) r1.x, r0.xyww, t6.xyzw, l(0)
lt r1.z, cb1[24].z, r1.x
discard_nz r1.z
samplepos r1.zw, t6.xxxy, l(0)
add r1.zw, r1.zzzw, v2.xxxy
mul r1.zw, r1.zzzw, cb0[35].zzzw
mov r1.y, l(1.000000)
dp2 r2.x, r1.xyxx, cb0[14].zwzz
dp2 r1.x, r1.xyxx, cb0[15].zwzz
div r1.x, -r2.x, r1.x
mov r2.z, -r1.x
mad r1.xy, cb2[6].xyxx, r1.zwzz, cb2[6].zwzz
mul r2.xy, r2.zzzz, r1.xyxx
mov r2.w, l(1.000000)
dp4 r3.x, r2.xyzw, cb0[27].xyzw
dp4 r3.y, r2.xyzw, cb0[28].xyzw
dp4 r3.z, r2.xyzw, cb0[29].xyzw
mov r3.w, l(1.000000)
dp4 r2.y, r3.xyzw, cb1[14].xyzw
dp4 r2.z, r3.xyzw, cb1[15].xyzw
dp4 r2.x, r3.xyzw, cb1[16].xyzw
add r4.xyz, r2.yzxy, l(0.000000, 0.000000, -0.500000, 0.000000)
add r4.xyz, |r4.xyzx|, l(-0.500000, -0.500000, -0.500000, 0.000000)
mul_sat r4.xyz, r4.xyzx, cb1[21].xyzx
max r1.x, r4.y, r4.x
max r1.x, r4.z, r1.x
add r1.x, -r1.x, l(1.000000)
mul r1.x, r1.x, r1.x
ne r1.y, r1.x, l(1.000000)
discard_nz r1.y
add r2.yz, r2.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
ldms_indexable(texture2dms)(float,float,float,float) r0.xyz, r0.xyzw, t5.xyzw, l(0)
mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r0.w, r1.zwzz, t0.xyzw, s0
round_z r0.w, r0.w
mul r0.w, r0.w, l(0.125000)
ge r1.y, r0.w, -r0.w
frc r0.w, |r0.w|
movc r0.w, r1.y, r0.w, -r0.w
ge r0.w, r0.w, l(0.500000)
add r1.yzw, r3.xxyz, -cb0[38].xxyz
dp3 r2.w, r1.yzwy, r1.yzwy
rsq r2.w, r2.w
mul r1.yzw, r1.yyzw, r2.wwww
dp3 r2.w, r1.yzwy, r0.xyzx
add r2.w, r2.w, r2.w
mad r1.yzw, r0.xxyz, -r2.wwww, r1.yyzw
add r1.yzw, -r0.xxyz, r1.yyzw
mad r0.xyz, r1.yzwy, l(0.250000, 0.250000, 0.250000, 0.000000), r0.xyzx
dp3 r1.y, r0.xyzx, r0.xyzx
rsq r1.y, r1.y
mul r3.xyw, r0.xyxz, r1.yyyy
add r4.xyzw, cb1[9].xxyz, l(-1.000000, -1.000000, -1.000000, -1.000000)
div r0.x, cb1[23].x, r4.x
mul r0.x, r0.x, l(0.300000)
mul r0.xy, r0.xxxx, r3.xyxx
div r0.xy, r0.xyxx, cb1[23].xyxx
add_sat r0.xy, r0.xyxx, r2.yzyy
add r1.z, r3.z, -cb0[36].z
mad_sat r1.z, r1.z, l(0.500000), l(0.500000)
mad r1.z, r1.z, l(-2.000000), l(1.000000)
mad r0.z, r0.z, r1.y, r1.z
add r1.y, |r1.z|, l(1.000000)
div r0.z, r0.z, r1.y
div r5.xyzw, l(0.500000, 0.500000, 0.200000, 0.500000), cb1[9].xyzz
add r0.xy, r0.xyxx, r5.xyxx
div r1.yz, r4.yyzy, cb1[9].xxyx
mul r6.xy, r0.xyxx, r1.yzyy
mov_sat r2.x, r2.x
lt r0.x, l(0.000000), cb1[18].w
div_sat r0.y, r2.x, cb1[18].w
mul r0.y, r0.y, cb1[19].w
and r0.x, r0.y, r0.x
lt r0.y, cb1[18].w, l(1.000000)
add_sat r1.y, r2.x, -cb1[18].w
add r1.z, -cb1[18].w, l(1.000000)
div r1.y, r1.y, r1.z
log r1.y, r1.y
mul r1.y, r1.y, cb1[9].w
exp r1.y, r1.y
add r1.z, r4.w, -cb1[19].w
mul r1.y, r1.z, r1.y
and r0.y, r0.y, r1.y
add r0.x, r0.y, r0.x
div r0.x, r0.x, cb1[9].z
mad r0.x, r0.z, r5.z, r0.x
mul r0.y, r0.x, cb1[9].z
round_ni r0.z, r0.y
round_pi r0.y, r0.y
div r0.yz, r0.yyzy, cb1[9].zzzz
mov_sat r1.y, r6.y
div r1.y, r1.y, cb1[9].z
add r6.z, r0.z, r1.y
sample_l_indexable(texture2d)(float,float,float,float) r1.yz, r6.xzxx, t1.zxyw, s1, l(0.000000)
add r2.xy, -r1.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
mad r1.z, r2.y, l(0.250000), r1.z
min r1.z, r1.z, r2.x
div r1.y, r1.y, cb1[9].z
add r1.y, r0.z, r1.y
add r0.x, r0.x, -r1.y
mul r0.x, r0.x, cb1[9].z
div_sat r0.x, r0.x, r1.z
add r0.y, -r0.z, r0.y
mad r0.x, r0.x, r0.y, r0.z
add r6.w, r5.w, r0.x
sample_l_indexable(texture3d)(float,float,float,float) r2.xyzw, r6.xywx, t4.xyzw, s4, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r4.xyzw, r6.xywx, t3.xyzw, s3, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r5.xyzw, r6.xywx, t2.xyzw, s2, l(0.000000)
max r2.xyzw, r2.xyzw, cb2[5].xxxw
max r4.xyzw, r4.xyzw, cb2[5].yyyw
max r5.xyzw, r5.xywz, cb2[5].zzwz
dp3 r6.x, r3.xywx, l(-0.408248, -0.707107, 0.577350, 0.000000)
mad r7.x, r6.x, l(0.666000), l(0.333000)
dp3 r6.y, r3.xwyx, l(-0.408248, 0.577350, 0.707107, 0.000000)
mad r7.y, r6.y, l(0.666000), l(0.333000)
dp2 r6.z, r3.xwxx, l(0.816497, 0.577350, 0.000000, 0.000000)
mad r7.z, r6.z, l(0.666000), l(0.333000)
mov r6.w, -r3.w
mul r7.w, r3.w, l(-0.250000)
movc_sat r6.xyzw, r0.wwww, r7.xyzw, r6.xyzw
mul r0.xyz, r4.xyzx, r6.yyyy
mad r0.xyz, r6.xxxx, r2.xyzx, r0.xyzx
mad r0.xyz, r6.zzzz, r5.xywx, r0.xyzx
mov r5.x, r2.w
mov r5.y, r4.w
mad r0.xyz, r6.wwww, r5.xyzx, r0.xyzx
add r1.y, r6.y, r6.x
add r1.y, r6.z, r1.y
add r1.y, r6.w, r1.y
div r0.xyz, r0.xyzx, r1.yyyy
mad r1.y, r3.w, l(0.500000), l(0.500000)
mad r1.y, r1.y, l(0.400000), l(0.850000)
mul r1.yzw, r0.xxyz, r1.yyyy
movc o0.xyz, r0.wwww, r1.yzwy, r0.xyzx
mov o0.w, r1.x
ret 
// Approximately 138 instruction slots used
 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
