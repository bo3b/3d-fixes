//WatchDogs - Shadows/Lights
//Helixmod fix By mike_ar69

cbuffer Global : register(b0)
{
  float4 _DebugValues : packoffset(c0);
  float4 _GlobalLightsIntensity : packoffset(c1);
  float4 _GlobalScalars : packoffset(c2);
  float4 _GlobalScalars2 : packoffset(c3);
  float4 _GlobalWeatherControl_StaticReflectionIntensityDest : packoffset(c4);
  float4 _WorldLoadingRingSizes : packoffset(c5);
  float4 _ReflectionAmbientColor_WindNoiseDeltaVectorX : packoffset(c6);
  float4 _ReflectionLightDirection_WindNoiseDeltaVectorY : packoffset(c7);
  float4 _ReflectionLightColor_CrowdAnimationStartTime : packoffset(c8);
  float4 _WindVelocityTextureCoverage : packoffset(c9);
  float4 _WindGlobalNoiseTextureCoverage_VertexAOIntensity : packoffset(c10);
  float4 _WindGlobalNoiseTextureChannelSel_ReflectionTextureBlendRatio : packoffset(c11);
  float4 _WindGlobalTurbulence : packoffset(c12);
  float4 _DefaultAmbientProbesColour_TimeOfDay : packoffset(c13);
}

cbuffer Viewport : register(b1)
{
  float4x4 _ViewRotProjectionMatrix : packoffset(c0);
  float4x4 _ViewProjectionMatrix : packoffset(c4);
  float4x4 _ProjectionMatrix : packoffset(c8);
  float4x4 _InvProjectionMatrix : packoffset(c12);
  float4x4 _InvProjectionMatrixDepth : packoffset(c16);
  float4x4 _DepthTextureTransform : packoffset(c20);
  float4x3 _ViewMatrix : packoffset(c24);
  float4x3 _InvViewMatrix : packoffset(c27);
  float4x4 _PreviousViewProjectionMatrix : packoffset(c30);
  float4 _CameraDistances : packoffset(c34);
  float4 _ViewportSize : packoffset(c35);
  float4 _CameraPosition_MaxStaticReflectionMipIndex : packoffset(c36);
  float4 _CameraDirection_MaxParaboloidReflectionMipIndex : packoffset(c37);
  float4 _ViewPoint_ExposureScale : packoffset(c38);
  float4 _FogColorVector_ExposedWhitePointOverExposureScale : packoffset(c39);
  float3 _SideFogColor : packoffset(c40);
  float3 _SunFogColorDelta : packoffset(c41);
  float3 _OppositeFogColorDelta : packoffset(c42);
  float4 _FogValues0 : packoffset(c43);
  float4 _FogValues1 : packoffset(c44);
  float4 _CameraNearPlaneSize : packoffset(c45);
  float4 _UncompressDepthWeights_ShadowProjDepthMinValue : packoffset(c46);
  float4 _UncompressDepthWeightsWS_ReflectionFadeTarget : packoffset(c47);
  float4 _WorldAmbientColorParams0 : packoffset(c48);
  float4 _WorldAmbientColorParams1 : packoffset(c49);
  float4 _WorldAmbientColorParams2 : packoffset(c50);
  float4 _GlobalWorldTextureParams : packoffset(c51);
  float4 _CullingCameraPosition_OneOverAutoExposureScale : packoffset(c52);
  float4 _AmbientSkyColor_ReflectionScaleStrength : packoffset(c53);
  float4 _AmbientGroundColor_ReflectionScaleDistanceMul : packoffset(c54);
  float4 _FacettedShadowCastParams : packoffset(c55);
  float4 _FSMClipPlanes : packoffset(c56);
  float2 _ReflectionGIControl : packoffset(c57);
}

cbuffer LightData : register(b2)
{
  float4 _CascadedShadowDepthRanges : packoffset(c0);
  float4 _CascadedShadowRanges : packoffset(c1);
  float4 _CascadedShadowScale : packoffset(c2);
  float4 _CascadedShadowSliceDepthOffsets : packoffset(c3);
  float4 _CascadedShadowSliceDepthScales : packoffset(c4);
  float4 _CascadedShadowSliceScaleOffsets[3] : packoffset(c5);
  float4 _CascadedShadowSliceScaleOffsetsBiased[3] : packoffset(c8);
  float4 _FacettedShadowReceiveParams : packoffset(c11);
  float4 _LightCapsuleDivLength : packoffset(c12);
  float4 _LightFadingClipPlanes[8] : packoffset(c13);
  float4 _LightProjectedVideoUnpack[8] : packoffset(c21);
  float4 _LightShadowFactor : packoffset(c29);
  float4 _LightShadowMapSize : packoffset(c30);
  float4x4 _LightSpotShadowProjections : packoffset(c31);
  float4x4 _LightVolumeTransform : packoffset(c35);
  float4 _LongRangeShadowVolumePosScaleBias : packoffset(c39);
  float4 _LongRangeShadowVolumeUvScaleBias : packoffset(c40);
  float4 _RainLightViewpointLPS_DistVPToEdgesLPS : packoffset(c41);
  float3 _LightAttenuation : packoffset(c42);
  float _LightSpecularIntensity : packoffset(c42.w);
  float3 _LightCapsuleMulLength : packoffset(c43);
  float _LightSpotNearClipFactor : packoffset(c43.w);
  float3 _LightDirection : packoffset(c44);
  float3 _LightFrontColor : packoffset(c45);
  float3 _LightPosition : packoffset(c46);
  float2 _LightCapsuleParams : packoffset(c47);
  float2 _LightShadowDepthTransform : packoffset(c47.z);
  float2 _LightSpotConeFactors : packoffset(c48);
}

cbuffer DeferredLightingBase : register(b3)
{
  float4 _AmbientParams : packoffset(c0);
  float2 _DownsampleInvResolution : packoffset(c1);
  float _DeferredReflectionTextureBlendRatio : packoffset(c1.z);
}

cbuffer DeferredLightingCommon : register(b4)
{
  float4 _LongRangeShadowTileDebug : packoffset(c0);
  float4 _PositionScaleOffset : packoffset(c1);
  float4 _UVToViewSpace : packoffset(c2);
  float4 _VPosOffset : packoffset(c3);
  float4 _VPosScale : packoffset(c4);
  int _MSAALevel : packoffset(c5);
}
SamplerState Viewport__ParaboloidReflectionTexture__SampObj___s : register(s0);
SamplerState DeferredLightingBase__DeferredReflectionTexture__SampObj___s : register(s1);
SamplerState DeferredLightingBase__DeferredReflectionTextureDest__SampObj___s : register(s2);
Texture2D<float4> Viewport__ParaboloidReflectionTexture__TexObj__ : register(t0);
TextureCube<float4> DeferredLightingBase__DeferredReflectionTexture__TexObj__ : register(t1);
TextureCube<float4> DeferredLightingBase__DeferredReflectionTextureDest__TexObj__ : register(t2);
Texture2DMS<float4> DeferredLightingBase__ProbeLightingTextureMS : register(t3);
Texture2DMS<float4> DeferredLightingCommon__AlbedoTextureMS : register(t4);
Texture2DMS<float4> DeferredLightingCommon__DepthSamplerMS : register(t5);
Texture2DMS<float4> DeferredLightingCommon__NormalTextureMS : register(t6);
Texture2DMS<float4> DeferredLightingCommon__OtherTextureMS : register(t7);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : SV_Position0,
  uint v1 : SV_SampleIndex0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8;
  uint4 bitmask;
  r0.xy = DeferredLightingCommon__DepthSamplerMS.GetSamplePosition(v1.x);
  r0.xy = v0.xy + r0.xy;
  r0.xy = r0.xy * _VPosScale.xy + _VPosOffset.xy;
  r0.xy = _UVToViewSpace.xy * r0.xy + _UVToViewSpace.zw;
  r1.y = 1.000000000e+000;
  r2.xy = (int2)v0.xy;
  r2.zw = float2(0.000000e+000,0.000000e+000);
  r1.x = DeferredLightingCommon__DepthSamplerMS.Load(r2.xyw,v1.x).x;
  r0.z = dot(r1.xy, _InvProjectionMatrix._m22_m32);
  r0.w = dot(r1.xy, _InvProjectionMatrix._m23_m33);
  r0.z = -r0.z / r0.w;
  r1.z = -r0.z;
  r1.xy = r1.zz * r0.xy;
  r1.w = 1.000000000e+000;


//Mike_ar69 - Stereo Shift
float4 stereo = StereoParams.Load(0);
r1.x -= stereo.x*(-r1.z - stereo.y)*_InvProjectionMatrix._m00;

  r0.z = dot(r1.xyzw, _InvViewMatrix._m02_m12_m22_m32);
  r0.x = dot(r1.xyzw, _InvViewMatrix._m00_m10_m20_m30);
  r0.y = dot(r1.xyzw, _InvViewMatrix._m01_m11_m21_m31);
  r1.xyz = _CameraPosition_MaxStaticReflectionMipIndex.xyz + -r0.xyz;
  r0.xy = -_CameraPosition_MaxStaticReflectionMipIndex.xy + r0.xy;
  r0.x = dot(r0.xy, r0.xy);
  r0.x = saturate(_AmbientGroundColor_ReflectionScaleDistanceMul.w * r0.x);
  r0.y = dot(r1.xyz, r1.xyz);
  r0.y = rsqrt(r0.y);
  r3.xyz = r1.xyz * r0.yyy;
  r0.yzw = r1.xyz * r0.yyy + -_LightDirection.xyz;
  r1.xyzw = DeferredLightingCommon__NormalTextureMS.Load(r2.xyw,v1.x).xyzw;
  r1.xyz = r1.xyz * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r1.w = round(r1.w);
  r4.xyzw = float4(5.000000e-001,2.500000e-001,6.250000e-002,3.125000e-002) * r1.wwww;
  r1.w = dot(r1.xyz, r1.xyz);
  r1.w = r1.w == 0.000000;
  r1.xyz = r1.www ? float3(0.000000e+000,0.000000e+000,1.000000e+000) : r1.xyz;
  r1.w = dot(r1.xyz, r1.xyz);
  r1.w = rsqrt(r1.w);
  r5.xyz = r1.xyz * r1.www;
  r3.w = dot(-r3.xyz, r5.xyz);
  r3.w = r3.w + r3.w;
  r6.xyz = r5.xyz * -r3.www + -r3.xyz;
  r3.x = saturate(dot(r5.xyz, r3.xyz));
  r6.w = r6.z * 5.102040768e-001 + 4.897959232e-001;
  r3.y = dot(r6.xyw, r6.xyw);
  r3.y = rsqrt(r3.y);
  r3.yzw = r6.xyw * r3.yyy;
  r7.x = r4.x >= -r4.x;
  r7.y = r4.y >= -r4.y;
  r7.z = r4.z >= -r4.z;
  r7.w = r4.w >= -r4.w;
  r4.xyzw = frac(abs(r4.xyzw));
  r4.xyzw = r7.xyzw ? r4.xyzw : -r4.xyzw;
  r4.x = r4.x == 0.500000;
  r4.y = r4.y >= 5.000000e-001;
  r4.z = r4.z >= 5.000000e-001;
  r4.w = r4.w >= 5.000000e-001;
  r3.yzw = r4.xxx ? r3.yzw : r6.xyz;
  r5.w = 1.000000015e-001 + -r3.w;
  r5.w = saturate(2.500000000e+000 * r5.w);
  r5.w = 3.000000119e-001 * r5.w;
  r6.x = max(r5.z, 0.000000000e+000);
  r6.z = r6.x * r5.w;
  r6.xy = float2(0.000000e+000,0.000000e+000);
  r6.xyz = r6.xyz + r3.yzw;
  r5.w = dot(r6.xyz, r6.xyz);
  r5.w = rsqrt(r5.w);
  r6.xyw = r6.xyz * r5.www;
  r5.w = 0.000000000e+000 < r6.z;
  r6.z = r6.w * 2.000000000e+000 + 2.000000000e+000;
  r6.xy = r6.yx / r6.zz;
  r6.zw = -r6.xx;
  r6.z = dot(r6.yz, r6.yw);
  r7.yz = saturate(r6.xy * float2(-1.000000e+000,1.000000e+000) + float2(5.000000e-001,5.000000e-001));
  r6.x = sqrt(r6.z);
  r8.xyzw = DeferredLightingCommon__OtherTextureMS.Load(r2.xyw,v1.x).xyzw;
  r6.yz = r8.yy * float2(-1.777778e+001,8.888889e+000) + float2(-2.222222e+000,1.111111e+000);
  r6.x = saturate(r6.x * r6.y + r6.z);
  r6.x = r4.z ? r6.x : 1.000000000e+000;
  r6.y = r4.z ? 0.000000000e+000 : 5.000000000e-001;
  r7.x = r7.y * 5.000000000e-001 + r6.y;
  r6.y = r8.y * -_CameraDirection_MaxParaboloidReflectionMipIndex.w + _CameraDirection_MaxParaboloidReflectionMipIndex.w;
  r6.yzw = Viewport__ParaboloidReflectionTexture__TexObj__.SampleLevel(Viewport__ParaboloidReflectionTexture__SampObj___s, r7.xz, r6.y).xyz;
  r6.xyzw = r6.yzww * r6.xxxx;
  r7.x = ~(int)r4.z;
  r5.w = (int)r5.w | (int)r7.x;
  r6.x = r5.w ? r6.x : 0;
  r6.y = r5.w ? r6.y : 0;
  r6.z = r5.w ? r6.z : 0;
  r6.w = r5.w ? r6.w : 0;
  r1.xyz = -r1.xyz * r1.www + r3.yzw;
  r1.xyz = r1.xyz * r0.xxx;
  r1.xyz = r1.xyz * _AmbientSkyColor_ReflectionScaleStrength.www + r3.yzw;
  r0.x = r8.y * -_CameraPosition_MaxStaticReflectionMipIndex.w + _CameraPosition_MaxStaticReflectionMipIndex.w;
  r7.xyzw = DeferredLightingBase__DeferredReflectionTextureDest__TexObj__.SampleLevel(DeferredLightingBase__DeferredReflectionTextureDest__SampObj___s, r1.xyz, r0.x).xyzw;
  r1.xyzw = DeferredLightingBase__DeferredReflectionTexture__TexObj__.SampleLevel(DeferredLightingBase__DeferredReflectionTexture__SampObj___s, r1.xyz, r0.x).xyzw;
  r7.xyz = _GlobalWeatherControl_StaticReflectionIntensityDest.www * r7.xyz;
  r1.xyz = _GlobalScalars.www * r1.xyz;
  r7.xyzw = r7.xyzw + -r1.xyzw;
  r1.xyzw = _DeferredReflectionTextureBlendRatio * r7.xyzw + r1.xyzw;
  r0.x = 1.000000000e+000 + -r1.w;
  r7.xyzw = r6.xyww * r0.xxxx;
  r1.xyzw = r7.xyzw * _UncompressDepthWeightsWS_ReflectionFadeTarget.wwww + r1.xyzz;
  r1.xyzw = r4.zzzz ? r6.xyzw : r1.xyzw;
  r6.xyzw = DeferredLightingBase__ProbeLightingTextureMS.Load(r2.xyz,v1.x).xyzw;
  r2.xyzw = DeferredLightingCommon__AlbedoTextureMS.Load(r2.xyw,v1.x).xyzw;
  r0.x = saturate(dot(r6.xyz, float3(3.086000e-001,6.094000e-001,8.200000e-002)));
  r0.x = -1.000000000e+000 + r0.x;
  r3.y = r4.z ? _ReflectionGIControl.y : _ReflectionGIControl.x;
  r0.x = r3.y * r0.x + 1.000000000e+000;
  r1.xyzw = r1.xyzw * r0.xxxx;
  r0.x = 1.000000000e+000 + -r3.x;
  r3.y = r0.x * r0.x;
  r3.y = r3.y * r3.y;
  r0.x = r3.y * r0.x;
  r3.y = max(r8.x, r8.y);
  r3.y = r3.y + -r8.x;
  r0.x = r3.y * r0.x + r8.x;
  r1.xyzw = r1.xyzw * r0.xxxx;
  r1.xyzw = r1.xyzw * r8.yyyy;
  r0.x = r8.z * r2.w;
  r1.xyzw = r1.xyzw * r0.xxxx;
  r3.y = dot(r0.yzw, r0.yzw);
  r3.y = rsqrt(r3.y);
  r0.yzw = r3.yyy * r0.yzw;
  r3.y = saturate(dot(-_LightDirection.xyz, r0.yzw));
  r0.y = saturate(dot(r5.xyz, r0.yzw));
  r0.z = dot(r5.xyz, -_LightDirection.xyz);
  r0.y = log2(r0.y);
  r0.w = 1.000000000e+000 + -r3.y;
  r3.y = r0.w * r0.w;
  r3.y = r3.y * r3.y;
  r0.w = r3.y * r0.w;
  r3.y = 1.000000000e+000 + -r8.x;
  r0.w = r3.y * r0.w + r8.x;
  r0.x = r0.x * r0.w;
  r0.w = 1.300000000e+001 * r8.y;
  r0.w = exp2(r0.w);
  r0.y = r0.w * r0.y;
  r0.w = r0.w * 3.974359855e-002 + 8.568319678e-002;
  r0.y = exp2(r0.y);
  r0.x = r0.x * r0.y;
  r0.x = r0.x * r0.w;
  r0.y = saturate(r0.z);
  r0.w = max(r3.x, r0.y);
  r0.w = max(r0.w, 1.000000012e-007);
  r0.w = 1.000000e+000 / r0.w;
  r0.x = r0.x * r0.w;
  r0.x = r0.x * r0.y;
  r0.y = r6.w * _LightShadowFactor.x + _LightShadowFactor.y;
  r3.xyzw = _LightFrontColor.xyzz * r0.yyyy;
  r5.xyzw = r3.xyzw * r0.xxxx;
  r1.xyzw = r1.xyzw * r2.wwww + r5.xyww;
  r1.xyzw = r4.wwww ? r1.xyzw : r5.xyzw;
  r2.xyzw = r2.xyzz * r2.wwww;
  r5.xyzw = r0.zzzz * float4(4.500000e-001,5.000000e-001,5.000000e-001,5.000000e-001) + float4(5.500000e-001,5.000000e-001,5.000000e-001,5.000000e-001);
  r7.xyzw = saturate(r5.xyzw);
  r7.xyzw = r4.xxxx ? r7.xyzw : r0.zzzz;
  r0.x = (int)r4.y | (int)r4.x;
  r4.xyzw = r4.yyyy ? r5.wwww : r7.xyzw;
  r0.z = saturate(-r0.z);
  r5.xyzw = r0.zzzz * r3.xyww;
  r5.xyzw = r5.xyzw * r8.wwww;
  r7.xyzw = r4.xwww * r4.xwww;
  r7.xyzw = r7.xyzw * r7.xyzw;
  r0.xyzw = saturate(r0.xxxx ? r7.xyzw : r4.xyzw);
  r0.xyzw = r0.xyzw * r3.xyzw + r5.xyzw;
  r0.xyzw = r0.xyzw + r6.xyzz;
  r0.xyzw = r2.xyzw * r0.xyzw + r1.xyzw;
  o0.xyzw = _ViewPoint_ExposureScale.wwww * r0.xyzw;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 _DebugValues;               // Offset:    0 Size:    16 [unused]
//   float4 _GlobalLightsIntensity;     // Offset:   16 Size:    16 [unused]
//   float4 _GlobalScalars;             // Offset:   32 Size:    16
//   float4 _GlobalScalars2;            // Offset:   48 Size:    16 [unused]
//   float4 _GlobalWeatherControl_StaticReflectionIntensityDest;// Offset:   64 Size:    16
//   float4 _WorldLoadingRingSizes;     // Offset:   80 Size:    16 [unused]
//   float4 _ReflectionAmbientColor_WindNoiseDeltaVectorX;// Offset:   96 Size:    16 [unused]
//   float4 _ReflectionLightDirection_WindNoiseDeltaVectorY;// Offset:  112 Size:    16 [unused]
//   float4 _ReflectionLightColor_CrowdAnimationStartTime;// Offset:  128 Size:    16 [unused]
//   float4 _WindVelocityTextureCoverage;// Offset:  144 Size:    16 [unused]
//   float4 _WindGlobalNoiseTextureCoverage_VertexAOIntensity;// Offset:  160 Size:    16 [unused]
//   float4 _WindGlobalNoiseTextureChannelSel_ReflectionTextureBlendRatio;// Offset:  176 Size:    16 [unused]
//   float4 _WindGlobalTurbulence;      // Offset:  192 Size:    16 [unused]
//   float4 _DefaultAmbientProbesColour_TimeOfDay;// Offset:  208 Size:    16 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4x4 _ViewRotProjectionMatrix; // Offset:    0 Size:    64 [unused]
//   float4x4 _ViewProjectionMatrix;    // Offset:   64 Size:    64 [unused]
//   float4x4 _ProjectionMatrix;        // Offset:  128 Size:    64 [unused]
//   float4x4 _InvProjectionMatrix;     // Offset:  192 Size:    64
//   float4x4 _InvProjectionMatrixDepth;// Offset:  256 Size:    64 [unused]
//   float4x4 _DepthTextureTransform;   // Offset:  320 Size:    64 [unused]
//   float4x3 _ViewMatrix;              // Offset:  384 Size:    48 [unused]
//   float4x3 _InvViewMatrix;           // Offset:  432 Size:    48
//   float4x4 _PreviousViewProjectionMatrix;// Offset:  480 Size:    64 [unused]
//   float4 _CameraDistances;           // Offset:  544 Size:    16 [unused]
//   float4 _ViewportSize;              // Offset:  560 Size:    16 [unused]
//   float4 _CameraPosition_MaxStaticReflectionMipIndex;// Offset:  576 Size:    16
//   float4 _CameraDirection_MaxParaboloidReflectionMipIndex;// Offset:  592 Size:    16
//   float4 _ViewPoint_ExposureScale;   // Offset:  608 Size:    16
//   float4 _FogColorVector_ExposedWhitePointOverExposureScale;// Offset:  624 Size:    16 [unused]
//   float3 _SideFogColor;              // Offset:  640 Size:    12 [unused]
//   float3 _SunFogColorDelta;          // Offset:  656 Size:    12 [unused]
//   float3 _OppositeFogColorDelta;     // Offset:  672 Size:    12 [unused]
//   float4 _FogValues0;                // Offset:  688 Size:    16 [unused]
//   float4 _FogValues1;                // Offset:  704 Size:    16 [unused]
//   float4 _CameraNearPlaneSize;       // Offset:  720 Size:    16 [unused]
//   float4 _UncompressDepthWeights_ShadowProjDepthMinValue;// Offset:  736 Size:    16 [unused]
//   float4 _UncompressDepthWeightsWS_ReflectionFadeTarget;// Offset:  752 Size:    16
//   float4 _WorldAmbientColorParams0;  // Offset:  768 Size:    16 [unused]
//   float4 _WorldAmbientColorParams1;  // Offset:  784 Size:    16 [unused]
//   float4 _WorldAmbientColorParams2;  // Offset:  800 Size:    16 [unused]
//   float4 _GlobalWorldTextureParams;  // Offset:  816 Size:    16 [unused]
//   float4 _CullingCameraPosition_OneOverAutoExposureScale;// Offset:  832 Size:    16 [unused]
//   float4 _AmbientSkyColor_ReflectionScaleStrength;// Offset:  848 Size:    16
//   float4 _AmbientGroundColor_ReflectionScaleDistanceMul;// Offset:  864 Size:    16
//   float4 _FacettedShadowCastParams;  // Offset:  880 Size:    16 [unused]
//   float4 _FSMClipPlanes;             // Offset:  896 Size:    16 [unused]
//   float2 _ReflectionGIControl;       // Offset:  912 Size:     8
//
// }
//
// cbuffer LightData
// {
//
//   float4 _CascadedShadowDepthRanges; // Offset:    0 Size:    16 [unused]
//   float4 _CascadedShadowRanges;      // Offset:   16 Size:    16 [unused]
//   float4 _CascadedShadowScale;       // Offset:   32 Size:    16 [unused]
//   float4 _CascadedShadowSliceDepthOffsets;// Offset:   48 Size:    16 [unused]
//   float4 _CascadedShadowSliceDepthScales;// Offset:   64 Size:    16 [unused]
//   float4 _CascadedShadowSliceScaleOffsets[3];// Offset:   80 Size:    48 [unused]
//   float4 _CascadedShadowSliceScaleOffsetsBiased[3];// Offset:  128 Size:    48 [unused]
//   float4 _FacettedShadowReceiveParams;// Offset:  176 Size:    16 [unused]
//   float4 _LightCapsuleDivLength;     // Offset:  192 Size:    16 [unused]
//   float4 _LightFadingClipPlanes[8];  // Offset:  208 Size:   128 [unused]
//   float4 _LightProjectedVideoUnpack[8];// Offset:  336 Size:   128 [unused]
//   float4 _LightShadowFactor;         // Offset:  464 Size:    16
//   float4 _LightShadowMapSize;        // Offset:  480 Size:    16 [unused]
//   float4x4 _LightSpotShadowProjections;// Offset:  496 Size:    64 [unused]
//   float4x4 _LightVolumeTransform;    // Offset:  560 Size:    64 [unused]
//   float4 _LongRangeShadowVolumePosScaleBias;// Offset:  624 Size:    16 [unused]
//   float4 _LongRangeShadowVolumeUvScaleBias;// Offset:  640 Size:    16 [unused]
//   float4 _RainLightViewpointLPS_DistVPToEdgesLPS;// Offset:  656 Size:    16 [unused]
//   float3 _LightAttenuation;          // Offset:  672 Size:    12 [unused]
//   float _LightSpecularIntensity;     // Offset:  684 Size:     4 [unused]
//   float3 _LightCapsuleMulLength;     // Offset:  688 Size:    12 [unused]
//   float _LightSpotNearClipFactor;    // Offset:  700 Size:     4 [unused]
//   float3 _LightDirection;            // Offset:  704 Size:    12
//   float3 _LightFrontColor;           // Offset:  720 Size:    12
//   float3 _LightPosition;             // Offset:  736 Size:    12 [unused]
//   float2 _LightCapsuleParams;        // Offset:  752 Size:     8 [unused]
//   float2 _LightShadowDepthTransform; // Offset:  760 Size:     8 [unused]
//   float2 _LightSpotConeFactors;      // Offset:  768 Size:     8 [unused]
//
// }
//
// cbuffer DeferredLightingBase
// {
//
//   float4 _AmbientParams;             // Offset:    0 Size:    16 [unused]
//   float2 _DownsampleInvResolution;   // Offset:   16 Size:     8 [unused]
//   float _DeferredReflectionTextureBlendRatio;// Offset:   24 Size:     4
//
// }
//
// cbuffer DeferredLightingCommon
// {
//
//   float4 _LongRangeShadowTileDebug;  // Offset:    0 Size:    16 [unused]
//   float4 _PositionScaleOffset;       // Offset:   16 Size:    16 [unused]
//   float4 _UVToViewSpace;             // Offset:   32 Size:    16
//   float4 _VPosOffset;                // Offset:   48 Size:    16
//   float4 _VPosScale;                 // Offset:   64 Size:    16
//   int _MSAALevel;                    // Offset:   80 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Viewport__ParaboloidReflectionTexture__SampObj__    sampler      NA          NA    0        1
// DeferredLightingBase__DeferredReflectionTexture__SampObj__    sampler      NA          NA    1        1
// DeferredLightingBase__DeferredReflectionTextureDest__SampObj__    sampler      NA          NA    2        1
// Viewport__ParaboloidReflectionTexture__TexObj__    texture  float4          2d    0        1
// DeferredLightingBase__DeferredReflectionTexture__TexObj__    texture  float4        cube    1        1
// DeferredLightingBase__DeferredReflectionTextureDest__TexObj__    texture  float4        cube    2        1
// DeferredLightingBase__ProbeLightingTextureMS    texture  float4        2dMS    3        1
// DeferredLightingCommon__AlbedoTextureMS    texture  float4        2dMS    4        1
// DeferredLightingCommon__DepthSamplerMS    texture  float4        2dMS    5        1
// DeferredLightingCommon__NormalTextureMS    texture  float4        2dMS    6        1
// DeferredLightingCommon__OtherTextureMS    texture  float4        2dMS    7        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// LightData                         cbuffer      NA          NA    2        1
// DeferredLightingBase              cbuffer      NA          NA    3        1
// DeferredLightingCommon            cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
// SV_SampleIndex           0   x           1   SAMPLE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
// Pixel Shader runs at sample frequency
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[5], immediateIndexed
dcl_constantbuffer cb1[58], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[5], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texturecube (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texture2dms(0) (float,float,float,float) t3
dcl_resource_texture2dms(0) (float,float,float,float) t4
dcl_resource_texture2dms(0) (float,float,float,float) t5
dcl_resource_texture2dms(0) (float,float,float,float) t6
dcl_resource_texture2dms(0) (float,float,float,float) t7
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps_sgv v1.x, sampleIndex
dcl_output o0.xyzw
dcl_temps 9
samplepos r0.xy, t5.xyxx, v1.x
add r0.xy, r0.xyxx, v0.xyxx
mad r0.xy, r0.xyxx, cb4[4].xyxx, cb4[3].xyxx
mad r0.xy, cb4[2].xyxx, r0.xyxx, cb4[2].zwzz
mov r1.y, l(1.000000)
ftoi r2.xy, v0.xyxx
mov r2.zw, l(0,0,0,0)
ldms_indexable(texture2dms)(float,float,float,float) r1.x, r2.xyww, t5.xyzw, v1.x
dp2 r0.z, r1.xyxx, cb1[14].zwzz
dp2 r0.w, r1.xyxx, cb1[15].zwzz
div r0.z, -r0.z, r0.w
mov r1.z, -r0.z
mul r1.xy, r0.xyxx, r1.zzzz
mov r1.w, l(1.000000)
dp4 r0.z, r1.xyzw, cb1[29].xyzw
dp4 r0.x, r1.xyzw, cb1[27].xyzw
dp4 r0.y, r1.xyzw, cb1[28].xyzw
add r1.xyz, -r0.xyzx, cb1[36].xyzx
add r0.xy, r0.xyxx, -cb1[36].xyxx
dp2 r0.x, r0.xyxx, r0.xyxx
mul_sat r0.x, r0.x, cb1[54].w
dp3 r0.y, r1.xyzx, r1.xyzx
rsq r0.y, r0.y
mul r3.xyz, r0.yyyy, r1.xyzx
mad r0.yzw, r1.xxyz, r0.yyyy, -cb2[44].xxyz
ldms_indexable(texture2dms)(float,float,float,float) r1.xyzw, r2.xyww, t6.xyzw, v1.x
mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
round_z r1.w, r1.w
mul r4.xyzw, r1.wwww, l(0.500000, 0.250000, 0.062500, 0.031250)
dp3 r1.w, r1.xyzx, r1.xyzx
eq r1.w, r1.w, l(0.000000)
movc r1.xyz, r1.wwww, l(0,0,1.000000,0), r1.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r5.xyz, r1.wwww, r1.xyzx
dp3 r3.w, -r3.xyzx, r5.xyzx
add r3.w, r3.w, r3.w
mad r6.xyz, r5.xyzx, -r3.wwww, -r3.xyzx
dp3_sat r3.x, r5.xyzx, r3.xyzx
mad r6.w, r6.z, l(0.510204), l(0.489796)
dp3 r3.y, r6.xywx, r6.xywx
rsq r3.y, r3.y
mul r3.yzw, r3.yyyy, r6.xxyw
ge r7.xyzw, r4.xyzw, -r4.xyzw
frc r4.xyzw, |r4.xyzw|
movc r4.xyzw, r7.xyzw, r4.xyzw, -r4.xyzw
eq r4.x, r4.x, l(0.500000)
ge r4.yzw, r4.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)
movc r3.yzw, r4.xxxx, r3.yyzw, r6.xxyz
add r5.w, -r3.w, l(0.100000)
mul_sat r5.w, r5.w, l(2.500000)
mul r5.w, r5.w, l(0.300000)
max r6.x, r5.z, l(0.000000)
mul r6.z, r5.w, r6.x
mov r6.xy, l(0,0,0,0)
add r6.xyz, r3.yzwy, r6.xyzx
dp3 r5.w, r6.xyzx, r6.xyzx
rsq r5.w, r5.w
mul r6.xyw, r5.wwww, r6.xyxz
lt r5.w, l(0.000000), r6.z
mad r6.z, r6.w, l(2.000000), l(2.000000)
div r6.xy, r6.yxyy, r6.zzzz
mov r6.zw, -r6.xxxx
dp2 r6.z, r6.yzyy, r6.ywyy
mad_sat r7.yz, r6.xxyx, l(0.000000, -1.000000, 1.000000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
sqrt r6.x, r6.z
ldms_indexable(texture2dms)(float,float,float,float) r8.xyzw, r2.xyww, t7.xyzw, v1.x
mad r6.yz, r8.yyyy, l(0.000000, -17.777779, 8.888889, 0.000000), l(0.000000, -2.222222, 1.111111, 0.000000)
mad_sat r6.x, r6.x, r6.y, r6.z
movc r6.x, r4.z, r6.x, l(1.000000)
movc r6.y, r4.z, l(0), l(0.500000)
mad r7.x, r7.y, l(0.500000), r6.y
mad r6.y, r8.y, -cb1[37].w, cb1[37].w
sample_l_indexable(texture2d)(float,float,float,float) r6.yzw, r7.xzxx, t0.wxyz, s0, r6.y
mul r6.xyzw, r6.xxxx, r6.yzww
not r7.x, r4.z
or r5.w, r5.w, r7.x
and r6.xyzw, r6.xyzw, r5.wwww
mad r1.xyz, -r1.xyzx, r1.wwww, r3.yzwy
mul r1.xyz, r0.xxxx, r1.xyzx
mad r1.xyz, r1.xyzx, cb1[53].wwww, r3.yzwy
mad r0.x, r8.y, -cb1[36].w, cb1[36].w
sample_l_indexable(texturecube)(float,float,float,float) r7.xyzw, r1.xyzx, t2.xyzw, s2, r0.x
sample_l_indexable(texturecube)(float,float,float,float) r1.xyzw, r1.xyzx, t1.xyzw, s1, r0.x
mul r7.xyz, r7.xyzx, cb0[4].wwww
mul r1.xyz, r1.xyzx, cb0[2].wwww
add r7.xyzw, -r1.xyzw, r7.xyzw
mad r1.xyzw, cb3[1].zzzz, r7.xyzw, r1.xyzw
add r0.x, -r1.w, l(1.000000)
mul r7.xyzw, r0.xxxx, r6.xyww
mad r1.xyzw, r7.xyzw, cb1[47].wwww, r1.xyzz
movc r1.xyzw, r4.zzzz, r6.xyzw, r1.xyzw
ldms_indexable(texture2dms)(float,float,float,float) r6.xyzw, r2.xyzw, t3.xyzw, v1.x
ldms_indexable(texture2dms)(float,float,float,float) r2.xyzw, r2.xyww, t4.xyzw, v1.x
dp3_sat r0.x, r6.xyzx, l(0.308600, 0.609400, 0.082000, 0.000000)
add r0.x, r0.x, l(-1.000000)
movc r3.y, r4.z, cb1[57].y, cb1[57].x
mad r0.x, r3.y, r0.x, l(1.000000)
mul r1.xyzw, r0.xxxx, r1.xyzw
add r0.x, -r3.x, l(1.000000)
mul r3.y, r0.x, r0.x
mul r3.y, r3.y, r3.y
mul r0.x, r0.x, r3.y
max r3.y, r8.x, r8.y
add r3.y, -r8.x, r3.y
mad r0.x, r3.y, r0.x, r8.x
mul r1.xyzw, r0.xxxx, r1.xyzw
mul r1.xyzw, r8.yyyy, r1.xyzw
mul r0.x, r2.w, r8.z
mul r1.xyzw, r0.xxxx, r1.xyzw
dp3 r3.y, r0.yzwy, r0.yzwy
rsq r3.y, r3.y
mul r0.yzw, r0.yyzw, r3.yyyy
dp3_sat r3.y, -cb2[44].xyzx, r0.yzwy
dp3_sat r0.y, r5.xyzx, r0.yzwy
dp3 r0.z, r5.xyzx, -cb2[44].xyzx
log r0.y, r0.y
add r0.w, -r3.y, l(1.000000)
mul r3.y, r0.w, r0.w
mul r3.y, r3.y, r3.y
mul r0.w, r0.w, r3.y
add r3.y, -r8.x, l(1.000000)
mad r0.w, r3.y, r0.w, r8.x
mul r0.x, r0.w, r0.x
mul r0.w, r8.y, l(13.000000)
exp r0.w, r0.w
mul r0.y, r0.y, r0.w
mad r0.w, r0.w, l(0.039744), l(0.085683)
exp r0.y, r0.y
mul r0.x, r0.y, r0.x
mul r0.x, r0.w, r0.x
mov_sat r0.y, r0.z
max r0.w, r3.x, r0.y
max r0.w, r0.w, l(0.000000)
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul r0.x, r0.w, r0.x
mul r0.x, r0.y, r0.x
mad r0.y, r6.w, cb2[29].x, cb2[29].y
mul r3.xyzw, r0.yyyy, cb2[45].xyzz
mul r5.xyzw, r0.xxxx, r3.xyzw
mad r1.xyzw, r1.xyzw, r2.wwww, r5.xyww
movc r1.xyzw, r4.wwww, r1.xyzw, r5.xyzw
mul r2.xyzw, r2.wwww, r2.xyzz
mad r5.xyzw, r0.zzzz, l(0.450000, 0.500000, 0.500000, 0.500000), l(0.550000, 0.500000, 0.500000, 0.500000)
mov_sat r7.xyzw, r5.xyzw
movc r7.xyzw, r4.xxxx, r7.xyzw, r0.zzzz
or r0.x, r4.y, r4.x
movc r4.xyzw, r4.yyyy, r5.wwww, r7.xyzw
mov_sat r0.z, -r0.z
mul r5.xyzw, r3.xyww, r0.zzzz
mul r5.xyzw, r8.wwww, r5.xyzw
mul r7.xyzw, r4.xwww, r4.xwww
mul r7.xyzw, r7.xyzw, r7.xyzw
movc_sat r0.xyzw, r0.xxxx, r7.xyzw, r4.xyzw
mad r0.xyzw, r0.xyzw, r3.xyzw, r5.xyzw
add r0.xyzw, r6.xyzz, r0.xyzw
mad r0.xyzw, r2.xyzw, r0.xyzw, r1.xyzw
mul o0.xyzw, r0.xyzw, cb1[38].wwww
ret 
// Approximately 159 instruction slots used
 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
