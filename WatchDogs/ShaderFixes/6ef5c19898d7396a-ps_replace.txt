//Water reflections
cbuffer Viewport : register(b0)
{
  float4x4 _ViewRotProjectionMatrix : packoffset(c0);
  float4x4 _ViewProjectionMatrix : packoffset(c4);
  float4x4 _ProjectionMatrix : packoffset(c8);
  float4x4 _InvProjectionMatrix : packoffset(c12);
  float4x4 _InvProjectionMatrixDepth : packoffset(c16);
  float4x4 _DepthTextureTransform : packoffset(c20);
  float4x3 _ViewMatrix : packoffset(c24);
  float4x3 _InvViewMatrix : packoffset(c27);
  float4x4 _PreviousViewProjectionMatrix : packoffset(c30);
  float4 _CameraDistances : packoffset(c34);
  float4 _ViewportSize : packoffset(c35);
  float4 _CameraPosition_MaxStaticReflectionMipIndex : packoffset(c36);
  float4 _CameraDirection_MaxParaboloidReflectionMipIndex : packoffset(c37);
  float4 _ViewPoint_ExposureScale : packoffset(c38);
  float4 _FogColorVector_ExposedWhitePointOverExposureScale : packoffset(c39);
  float3 _SideFogColor : packoffset(c40);
  float3 _SunFogColorDelta : packoffset(c41);
  float3 _OppositeFogColorDelta : packoffset(c42);
  float4 _FogValues0 : packoffset(c43);
  float4 _FogValues1 : packoffset(c44);
  float4 _CameraNearPlaneSize : packoffset(c45);
  float4 _UncompressDepthWeights_ShadowProjDepthMinValue : packoffset(c46);
  float4 _UncompressDepthWeightsWS_ReflectionFadeTarget : packoffset(c47);
  float4 _WorldAmbientColorParams0 : packoffset(c48);
  float4 _WorldAmbientColorParams1 : packoffset(c49);
  float4 _WorldAmbientColorParams2 : packoffset(c50);
  float4 _GlobalWorldTextureParams : packoffset(c51);
  float4 _CullingCameraPosition_OneOverAutoExposureScale : packoffset(c52);
  float4 _AmbientSkyColor_ReflectionScaleStrength : packoffset(c53);
  float4 _AmbientGroundColor_ReflectionScaleDistanceMul : packoffset(c54);
  float4 _FacettedShadowCastParams : packoffset(c55);
  float4 _FSMClipPlanes : packoffset(c56);
  float2 _ReflectionGIControl : packoffset(c57);
}

cbuffer WaterGridRendering : register(b1)
{
  float4x4 _GridMatrix : packoffset(c0);
  float4 _SizeParams : packoffset(c4);
  float4 _WaterParams : packoffset(c5);
  float4 _WaterParams1 : packoffset(c6);
  float4 _WaterParams2 : packoffset(c7);
  float3 _SunColor : packoffset(c8);
  float3 _SunDirection : packoffset(c9);
}
SamplerState Viewport__ParaboloidReflectionTexture__SampObj___s : register(s0);
SamplerState WaterGridRendering__DepthCopyTexture__SampObj___s : register(s1);
SamplerState WaterGridRendering__ScreenSpaceReflectionTexture__SampObj___s : register(s2);
SamplerState WaterGridRendering__ColorMapTexture__SampObj___s : register(s3);
SamplerState WaterGridRendering__DetailNormalMapTexture__SampObj___s : register(s4);
SamplerState WaterGridRendering__FoamTexture__SampObj___s : register(s5);
SamplerState WaterGridRendering__NormalMapTexture__SampObj___s : register(s6);
SamplerState WaterGridRendering__ParametersMapTexture__SampObj___s : register(s7);
SamplerState WaterGridRendering__RippleNormalMapTexture__SampObj___s : register(s8);
Texture2D<float4> Viewport__ParaboloidReflectionTexture__TexObj__ : register(t0);
Texture2D<float4> WaterGridRendering__DepthCopyTexture__TexObj__ : register(t1);
Texture2D<float4> WaterGridRendering__ScreenSpaceReflectionTexture__TexObj__ : register(t2);
Texture2D<float4> WaterGridRendering__ColorMapTexture__TexObj__ : register(t3);
Texture2D<float4> WaterGridRendering__DetailNormalMapTexture__TexObj__ : register(t4);
Texture2D<float4> WaterGridRendering__FoamTexture__TexObj__ : register(t5);
Texture2D<float4> WaterGridRendering__NormalMapTexture__TexObj__ : register(t6);
Texture2D<float4> WaterGridRendering__ParametersMapTexture__TexObj__ : register(t7);
Texture2D<float4> WaterGridRendering__RippleNormalMapTexture__TexObj__ : register(t8);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : TEXCOORD0,
  float4 v1 : TEXCOORD1,
  float4 v2 : TEXCOORD2,
  float3 v3 : TEXCOORD3,
  float2 v4 : TEXCOORD4,
  float4 v6 : TEXCOORD5,
  float4 v5 : SV_Position0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5;
  uint4 bitmask;
  r0.xy = _WaterParams.ww * float2(1.000000e-001,1.000000e-001) + v3.xy;
  r0.xy = float2(3.333333e-001,3.333333e-001) * r0.xy;
  r0.xyz = WaterGridRendering__DetailNormalMapTexture__TexObj__.Sample(WaterGridRendering__DetailNormalMapTexture__SampObj___s, r0.xy).xyz;
  r0.xyz = r0.xyz * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r1.xy = -_WaterParams.ww * float2(1.000000e-001,1.000000e-001) + v3.xy;
  r1.xy = float2(1.666667e-002,1.666667e-002) * r1.xy;
  r1.xyz = WaterGridRendering__DetailNormalMapTexture__TexObj__.Sample(WaterGridRendering__DetailNormalMapTexture__SampObj___s, r1.xy).xyz;
  r1.xyz = r1.xyz * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r0.xyz = r0.xyz * float3(5.000000e-001,5.000000e-001,5.000000e-001) + r1.xyz;
  r1.xy = float2(2.500000e-001,2.500000e-001) * v3.xy;
  r1.xy = WaterGridRendering__RippleNormalMapTexture__TexObj__.Sample(WaterGridRendering__RippleNormalMapTexture__SampObj___s, r1.xy).xy;
  r0.w = dot(r1.xy, r1.xy);
  r0.w = sqrt(r0.w);
  r1.z = 1.000000000e+000 + -r0.w;
  r0.xyz = r1.xyz * float3(6.000000e+000,6.000000e+000,6.000000e+000) + r0.xyz;
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = rsqrt(r0.w);
  r0.xyz = r0.xyz * r0.www;
  r1.x = 0.000000000e+000;
  r2.xyz = WaterGridRendering__NormalMapTexture__TexObj__.Sample(WaterGridRendering__NormalMapTexture__SampObj___s, v4.xy).xyz;
  r2.xyz = r2.xyz * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r1.yz = float2(1.000000e+000,-1.000000e+000) * r2.zy;
  r0.w = dot(r1.yz, r1.yz);
  r0.w = rsqrt(r0.w);
  r1.xyz = r1.xyz * r0.www;
  r1.xyz = r1.xyz * r0.yyy;
  r3.y = 0.000000000e+000;
  r2.w = -r2.x;
  r0.y = dot(r2.zw, r2.zw);
  r0.y = rsqrt(r0.y);
  r3.x = r2.z * r0.y;
  r3.z = -r2.x * r0.y;
  r0.xyw = r3.xyz * r0.xxx + r1.xyz;
  r0.xyz = r2.xyz * r0.zzz + r0.xyw;
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = rsqrt(r0.w);
  r0.xyz = r0.xyz * r0.www;
  r1.xyz = _CameraPosition_MaxStaticReflectionMipIndex.xyz + -v1.xyz;
  r0.w = dot(r1.xyz, r1.xyz);
  r0.w = rsqrt(r0.w);
  r2.xyz = r1.xyz * r0.www;
  r1.w = dot(-r2.xyz, r0.xyz);
  r1.w = r1.w + r1.w;
  r3.xyz = r0.xyz * -r1.www + -r2.xyz;
  r3.w = 5.000000075e-002 + r3.z;
  r1.xyz = r1.xyz * r0.www + r3.xyw;
  r0.w = dot(r1.xyz, r1.xyz);
  r0.w = rsqrt(r0.w);
  r1.xyz = r1.xyz * r0.www;
  r0.w = saturate(dot(r1.xyz, r2.xyz));
  r0.z = saturate(dot(r0.xyz, r2.xyz));
  r0.zw = float2(1.000000e+000,1.000000e+000) + -r0.zw;
  r1.x = r0.w * r0.w;
  r1.x = r1.x * r1.x;
  r0.w = r1.x * r0.w;
  r0.w = r0.w * 9.900000095e-001 + 9.999999776e-003;
  r1.x = r0.z * r0.z;
  r1.x = r1.x * r1.x;
  r0.z = r1.x * r0.z;
  r1.x = 5.000000075e-002 + r3.z;
  r1.x = r1.x * 2.000000000e+000 + 2.000000000e+000;
  r1.xy = r3.yx / r1.xx;
  r1.xy = saturate(r1.xy * float2(-1.000000e+000,1.000000e+000) + float2(5.000000e-001,5.000000e-001));
  r1.z = r1.x * 5.000000000e-001 + 5.000000000e-001;
  r1.xyz = Viewport__ParaboloidReflectionTexture__TexObj__.SampleLevel(Viewport__ParaboloidReflectionTexture__SampObj___s, r1.zy, 0.000000000e+000).xyz;


r2.xyz = v0.xyz / v0.www;
float4 r22;
r22.xyz = v6.xyz / v6.www;

  r3.xy = r2.xy * float2(5.000000e-001,5.000000e-001) + float2(5.000000e-001,5.000000e-001);
  
float4 r23;
r23.xy = r22.xy * float2(5.000000e-001,5.000000e-001) + float2(5.000000e-001,5.000000e-001);
  
  r3.z = 1.000000000e+000 + -r3.y;
r23.z = 1.000000000e+000 + -r23.y;
  
  r2.xy = r0.xy * float2(1.000000e-001,1.000000e-001) + r23.xz;  //<===========
  r0.x = dot(r0.xy, r0.xy);
  r0.x = min(r0.x, 1.000000000e+000);
  r4.xyz = float3(3.500000e-001,5.000000e-001,5.000000e-001) * r0.xxx;
  r0.x = WaterGridRendering__DepthCopyTexture__TexObj__.Sample(WaterGridRendering__DepthCopyTexture__SampObj___s, r3.xz).x;  //<===========
  r3.xyzw = WaterGridRendering__ScreenSpaceReflectionTexture__TexObj__.Sample(WaterGridRendering__ScreenSpaceReflectionTexture__SampObj___s, r2.xy).xyzw;
  r3.xyz = r3.xyz + -r1.xyz;
  r1.xyz = r3.www * r3.xyz + r1.xyz;
  r1.xyz = r1.xyz * r0.zzz;
  r1.xyz = r1.xyz * r0.www;
  r2.w = 1.000000000e+000;
  r0.z = dot(r2.zw, _InvProjectionMatrix._m22_m32);
  r0.w = dot(r2.zw, _InvProjectionMatrix._m23_m33);
  r0.z = -r0.z / r0.w;
  r0.y = 1.000000000e+000;
  r0.w = dot(r0.xy, _InvProjectionMatrix._m22_m32);
  r0.x = dot(r0.xy, _InvProjectionMatrix._m23_m33);
  r0.x = -r0.w / r0.x;
  r0.x = r0.x + -r0.z;
  r0.y = 5.000000075e-002 + -r0.x;
  r0.y = 8.000000000e+000 * abs(r0.y);
  r0.y = min(r0.y, 1.000000000e+000);
  r0.y = 1.000000000e+000 + -r0.y;
  r0.y = 1.250000000e-001 * r0.y;
  r2.xyz = float3(-8.656170e+000,-2.596851e+000,-1.731234e+000) * r0.xxx;
  r2.xyz = exp2(r2.xyz);
  r2.xyz = min(r2.xyz, float3(1.000000e+000,1.000000e+000,1.000000e+000));
  r0.z = saturate(r0.x);
  r0.x = saturate(_WaterParams1.x * r0.x);
  r0.x = r0.x * 5.000000000e-001 + 5.000000000e-001;
  r3.xyz = WaterGridRendering__ColorMapTexture__TexObj__.Sample(WaterGridRendering__ColorMapTexture__SampObj___s, v4.xy).xyz;
  r3.xyz = float3(2.000000e-002,2.000000e-002,2.000000e-002) * r3.xyz;
  r3.xyz = r3.xyz * r0.zzz;
  r5.xyz = _SunColor.xyz * r3.xyz;
  r2.xyz = r5.xyz * r2.xyz;
  r2.xyz = r2.xyz * float3(1.000000e-002,1.000000e-002,1.000000e-002) + r3.xyz;
  r0.z = 2.499999944e-003 * _WaterParams.w;
  r3.xy = _WaterParams1.yy * v3.xy;
  r0.zw = r3.xy * float2(2.000000e+000,2.000000e+000) + r0.zz;
  r3.xyzw = WaterGridRendering__FoamTexture__TexObj__.SampleBias(WaterGridRendering__FoamTexture__SampObj___s, r0.zw, -2.000000000e+000).xyzw;
  r3.xyz = r3.xyz + -r2.xyz;
  r0.z = WaterGridRendering__ParametersMapTexture__TexObj__.Sample(WaterGridRendering__ParametersMapTexture__SampObj___s, v4.xy).z;
  r0.w = 1.000000000e+000 + -r0.z;
  r0.z = 1.000000047e-003 + r0.z;
  r0.w = r3.w + -r0.w;
  r0.z = saturate(r0.w / r0.z);
  r0.z = 1.500000060e-001 * r0.z;
  r2.xyz = r0.zzz * r3.xyz + r2.xyz;
  r3.xyz = r3.www + -r2.xyz;
  r0.yzw = r0.yyy * r3.xyz + r2.xyz;
  r2.xyz = float3(8.000000e-001,1.000000e+000,1.000000e+000) * _WaterParams2.www;
  r2.xyz = r2.xyz * r0.yzw;
  r1.xyz = r1.xyz * _WaterParams2.yyy + r2.xyz;
  r2.xyz = _WaterParams2.www * float3(8.000000e-001,1.000000e+000,1.000000e+000) + _SunColor.xyz;
  r2.xyz = r4.xyz * r2.xyz;
  r0.yzw = r2.xyz * r0.yzw;
  r0.yzw = r0.yzw * float3(3.000000e+000,3.000000e+000,3.000000e+000) + r1.xyz;
  r1.xyz = -_CameraPosition_MaxStaticReflectionMipIndex.xyz + v1.xyz;
  r1.w = max(r1.z, 0.000000000e+000);
  r2.x = dot(r1.xyw, r1.xyw);
  r2.x = rsqrt(r2.x);
  r2.xyz = r2.xxx * r1.xyw;
  r1.w = r2.z * 2.000000000e+000 + 2.000000000e+000;
  r2.xy = r2.yx / r1.ww;
  r1.w = 5.000000000e-001 + -r2.x;
  r2.y = saturate(5.000000000e-001 + r2.y);
  r2.x = saturate(max(r1.w, 1.250000000e-001));
  r2.z = r2.x * 5.000000000e-001 + 5.000000000e-001;
  r2.xyz = Viewport__ParaboloidReflectionTexture__TexObj__.SampleLevel(Viewport__ParaboloidReflectionTexture__SampObj___s, r2.zy, 6.000000000e+000).xyz;
  r3.xyz = Viewport__ParaboloidReflectionTexture__TexObj__.SampleLevel(Viewport__ParaboloidReflectionTexture__SampObj___s, float2(7.500000e-001,5.000000e-001), 6.000000000e+000).xyz;
  r3.xyz = r3.xyz + -r2.xyz;
  r1.x = dot(r1.xyz, r1.xyz);
  r1.y = rsqrt(r1.x);
  r1.x = sqrt(r1.x);
  r1.xw = _WorldAmbientColorParams0.zw * r1.xx;
  r1.y = r1.z * r1.y;
  r2.xyz = abs(r1.yyy) * r3.xyz + r2.xyz;
  r2.xyz = _WorldAmbientColorParams2.xyz * r2.xyz;
  r2.xyz = _WorldAmbientColorParams1.www * r2.xyz;
  r1.y = 0.000000000e+000 >= _UncompressDepthWeightsWS_ReflectionFadeTarget.w;
  r1.y = r1.y ? -1.000000000e+001 : -1.000000000e+004;
  r1.y = v1.z >= r1.y;
  r3.xy = float2(1.000000e+000,-1.000000e+000) * r1.zz;
  r1.z = 9.999999776e-003 < abs(r1.z);
  r3.xy = _WorldAmbientColorParams1.xy * r3.xy;
  r3.zw = float2(-1.442695e+000,-1.442695e+000) * r3.xy;
  r3.zw = exp2(r3.zw);
  r3.zw = float2(1.000000e+000,1.000000e+000) + -r3.zw;
  r3.xy = r3.zw / r3.xy;
  r3.xy = r3.xy * r1.xw;
  r1.xz = r1.zz ? r3.xy : r1.xw;
  r1.xz = -_WorldAmbientColorParams0.xy * r1.xz;
  r1.xz = float2(1.442695e+000,1.442695e+000) * r1.xz;
  r1.xz = exp2(r1.xz);
  r1.xz = float2(1.000000e+000,1.000000e+000) + -r1.xz;
  r1.x = max(r1.z, r1.x);
  r1.x = log2(r1.x);
  r1.x = _WorldAmbientColorParams2.w * r1.x;
  r1.x = exp2(r1.x);
  r2.w = min(r1.x, _WorldAmbientColorParams1.z);
  r1.xyzw = r1.yyyy ? r2.xyzw : float4(0.000000e+000,0.000000e+000,0.000000e+000,1.000000e+000);
  r2.xyz = r1.xyz * r1.www;
  r2.w = 1.000000000e+000 + -r1.w;
  r1.xyzw = _ViewPoint_ExposureScale.wwww * r2.xyzw;
  o0.xyz = r0.yzw * r1.www + r1.xyz;
  r0.y = -9.635416865e-001 + v4.y;
  r0.y = saturate(3.840000153e+001 * r0.y);
  r0.y = 1.000000000e+000 + -r0.y;
  o0.w = r0.x * r0.y;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4x4 _ViewRotProjectionMatrix; // Offset:    0 Size:    64 [unused]
//   float4x4 _ViewProjectionMatrix;    // Offset:   64 Size:    64 [unused]
//   float4x4 _ProjectionMatrix;        // Offset:  128 Size:    64 [unused]
//   float4x4 _InvProjectionMatrix;     // Offset:  192 Size:    64
//   float4x4 _InvProjectionMatrixDepth;// Offset:  256 Size:    64 [unused]
//   float4x4 _DepthTextureTransform;   // Offset:  320 Size:    64 [unused]
//   float4x3 _ViewMatrix;              // Offset:  384 Size:    48 [unused]
//   float4x3 _InvViewMatrix;           // Offset:  432 Size:    48 [unused]
//   float4x4 _PreviousViewProjectionMatrix;// Offset:  480 Size:    64 [unused]
//   float4 _CameraDistances;           // Offset:  544 Size:    16 [unused]
//   float4 _ViewportSize;              // Offset:  560 Size:    16 [unused]
//   float4 _CameraPosition_MaxStaticReflectionMipIndex;// Offset:  576 Size:    16
//   float4 _CameraDirection_MaxParaboloidReflectionMipIndex;// Offset:  592 Size:    16 [unused]
//   float4 _ViewPoint_ExposureScale;   // Offset:  608 Size:    16
//   float4 _FogColorVector_ExposedWhitePointOverExposureScale;// Offset:  624 Size:    16 [unused]
//   float3 _SideFogColor;              // Offset:  640 Size:    12 [unused]
//   float3 _SunFogColorDelta;          // Offset:  656 Size:    12 [unused]
//   float3 _OppositeFogColorDelta;     // Offset:  672 Size:    12 [unused]
//   float4 _FogValues0;                // Offset:  688 Size:    16 [unused]
//   float4 _FogValues1;                // Offset:  704 Size:    16 [unused]
//   float4 _CameraNearPlaneSize;       // Offset:  720 Size:    16 [unused]
//   float4 _UncompressDepthWeights_ShadowProjDepthMinValue;// Offset:  736 Size:    16 [unused]
//   float4 _UncompressDepthWeightsWS_ReflectionFadeTarget;// Offset:  752 Size:    16
//   float4 _WorldAmbientColorParams0;  // Offset:  768 Size:    16
//   float4 _WorldAmbientColorParams1;  // Offset:  784 Size:    16
//   float4 _WorldAmbientColorParams2;  // Offset:  800 Size:    16
//   float4 _GlobalWorldTextureParams;  // Offset:  816 Size:    16 [unused]
//   float4 _CullingCameraPosition_OneOverAutoExposureScale;// Offset:  832 Size:    16 [unused]
//   float4 _AmbientSkyColor_ReflectionScaleStrength;// Offset:  848 Size:    16 [unused]
//   float4 _AmbientGroundColor_ReflectionScaleDistanceMul;// Offset:  864 Size:    16 [unused]
//   float4 _FacettedShadowCastParams;  // Offset:  880 Size:    16 [unused]
//   float4 _FSMClipPlanes;             // Offset:  896 Size:    16 [unused]
//   float2 _ReflectionGIControl;       // Offset:  912 Size:     8 [unused]
//
// }
//
// cbuffer WaterGridRendering
// {
//
//   float4x4 _GridMatrix;              // Offset:    0 Size:    64 [unused]
//   float4 _SizeParams;                // Offset:   64 Size:    16 [unused]
//   float4 _WaterParams;               // Offset:   80 Size:    16
//   float4 _WaterParams1;              // Offset:   96 Size:    16
//   float4 _WaterParams2;              // Offset:  112 Size:    16
//   float3 _SunColor;                  // Offset:  128 Size:    12
//   float3 _SunDirection;              // Offset:  144 Size:    12 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Viewport__ParaboloidReflectionTexture__SampObj__    sampler      NA          NA    0        1
// WaterGridRendering__DepthCopyTexture__SampObj__    sampler      NA          NA    1        1
// WaterGridRendering__ScreenSpaceReflectionTexture__SampObj__    sampler      NA          NA    2        1
// WaterGridRendering__ColorMapTexture__SampObj__    sampler      NA          NA    3        1
// WaterGridRendering__DetailNormalMapTexture__SampObj__    sampler      NA          NA    4        1
// WaterGridRendering__FoamTexture__SampObj__    sampler      NA          NA    5        1
// WaterGridRendering__NormalMapTexture__SampObj__    sampler      NA          NA    6        1
// WaterGridRendering__ParametersMapTexture__SampObj__    sampler      NA          NA    7        1
// WaterGridRendering__RippleNormalMapTexture__SampObj__    sampler      NA          NA    8        1
// Viewport__ParaboloidReflectionTexture__TexObj__    texture  float4          2d    0        1
// WaterGridRendering__DepthCopyTexture__TexObj__    texture  float4          2d    1        1
// WaterGridRendering__ScreenSpaceReflectionTexture__TexObj__    texture  float4          2d    2        1
// WaterGridRendering__ColorMapTexture__TexObj__    texture  float4          2d    3        1
// WaterGridRendering__DetailNormalMapTexture__TexObj__    texture  float4          2d    4        1
// WaterGridRendering__FoamTexture__TexObj__    texture  float4          2d    5        1
// WaterGridRendering__NormalMapTexture__TexObj__    texture  float4          2d    6        1
// WaterGridRendering__ParametersMapTexture__TexObj__    texture  float4          2d    7        1
// WaterGridRendering__RippleNormalMapTexture__TexObj__    texture  float4          2d    8        1
// Viewport                          cbuffer      NA          NA    0        1
// WaterGridRendering                cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyz 
// TEXCOORD                 2   xyzw        2     NONE   float       
// TEXCOORD                 3   xyz         3     NONE   float   xy  
// TEXCOORD                 4   xy          4     NONE   float   xy  
// SV_Position              0   xyzw        5      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[51], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v1.xyz
dcl_input_ps linear v3.xy
dcl_input_ps linear v4.xy
dcl_output o0.xyzw
dcl_temps 6
mad r0.xy, cb1[5].wwww, l(0.100000, 0.100000, 0.000000, 0.000000), v3.xyxx
mul r0.xy, r0.xyxx, l(0.333333, 0.333333, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyxx, t4.xyzw, s4
mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r1.xy, -cb1[5].wwww, l(0.100000, 0.100000, 0.000000, 0.000000), v3.xyxx
mul r1.xy, r1.xyxx, l(0.016667, 0.016667, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t4.xyzw, s4
mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
mul r1.xy, v3.xyxx, l(0.250000, 0.250000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r1.xy, r1.xyxx, t8.xyzw, s8
dp2 r0.w, r1.xyxx, r1.xyxx
sqrt r0.w, r0.w
add r1.z, -r0.w, l(1.000000)
mad r0.xyz, r1.xyzx, l(6.000000, 6.000000, 6.000000, 0.000000), r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mov r1.x, l(0)
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v4.xyxx, t6.xyzw, s6
mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mul r1.yz, r2.zzyz, l(0.000000, 1.000000, -1.000000, 0.000000)
dp2 r0.w, r1.yzyy, r1.yzyy
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mul r1.xyz, r0.yyyy, r1.xyzx
mov r3.y, l(0)
mov r2.w, -r2.x
dp2 r0.y, r2.zwzz, r2.zwzz
rsq r0.y, r0.y
mul r3.x, r0.y, r2.z
mul r3.z, r0.y, -r2.x
mad r0.xyw, r3.xyxz, r0.xxxx, r1.xyxz
mad r0.xyz, r2.xyzx, r0.zzzz, r0.xywx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
add r1.xyz, -v1.xyzx, cb0[36].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
dp3 r1.w, -r2.xyzx, r0.xyzx
add r1.w, r1.w, r1.w
mad r3.xyz, r0.xyzx, -r1.wwww, -r2.xyzx
add r3.w, r3.z, l(0.050000)
mad r1.xyz, r1.xyzx, r0.wwww, r3.xywx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3_sat r0.w, r1.xyzx, r2.xyzx
dp3_sat r0.z, r0.xyzx, r2.xyzx
add r0.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
mul r1.x, r0.w, r0.w
mul r1.x, r1.x, r1.x
mul r0.w, r0.w, r1.x
mad r0.w, r0.w, l(0.990000), l(0.010000)
mul r1.x, r0.z, r0.z
mul r1.x, r1.x, r1.x
mul r0.z, r0.z, r1.x
add r1.x, r3.z, l(0.050000)
mad r1.x, r1.x, l(2.000000), l(2.000000)
div r1.xy, r3.yxyy, r1.xxxx
mad_sat r1.xy, r1.xyxx, l(-1.000000, 1.000000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mad r1.z, r1.x, l(0.500000), l(0.500000)
sample_l_indexable(texture2d)(float,float,float,float) r1.xyz, r1.zyzz, t0.xyzw, s0, l(0.000000)
div r2.xyz, v0.xyzx, v0.wwww
mad r3.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
add r3.z, -r3.y, l(1.000000)
mad r2.xy, r0.xyxx, l(0.100000, 0.100000, 0.000000, 0.000000), r3.xzxx
dp2 r0.x, r0.xyxx, r0.xyxx
min r0.x, r0.x, l(1.000000)
mul r4.xyz, r0.xxxx, l(0.350000, 0.500000, 0.500000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r0.x, r3.xzxx, t1.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r2.xyxx, t2.xyzw, s2
add r3.xyz, -r1.xyzx, r3.xyzx
mad r1.xyz, r3.wwww, r3.xyzx, r1.xyzx
mul r1.xyz, r0.zzzz, r1.xyzx
mul r1.xyz, r0.wwww, r1.xyzx
mov r2.w, l(1.000000)
dp2 r0.z, r2.zwzz, cb0[14].zwzz
dp2 r0.w, r2.zwzz, cb0[15].zwzz
div r0.z, -r0.z, r0.w
mov r0.y, l(1.000000)
dp2 r0.w, r0.xyxx, cb0[14].zwzz
dp2 r0.x, r0.xyxx, cb0[15].zwzz
div r0.x, -r0.w, r0.x
add r0.x, -r0.z, r0.x
add r0.y, -r0.x, l(0.050000)
mul r0.y, |r0.y|, l(8.000000)
min r0.y, r0.y, l(1.000000)
add r0.y, -r0.y, l(1.000000)
mul r0.y, r0.y, l(0.125000)
mul r2.xyz, r0.xxxx, l(-8.656170, -2.596851, -1.731234, 0.000000)
exp r2.xyz, r2.xyzx
min r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mov_sat r0.z, r0.x
mul_sat r0.x, r0.x, cb1[6].x
mad r0.x, r0.x, l(0.500000), l(0.500000)
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v4.xyxx, t3.xyzw, s3
mul r3.xyz, r3.xyzx, l(0.020000, 0.020000, 0.020000, 0.000000)
mul r3.xyz, r0.zzzz, r3.xyzx
mul r5.xyz, r3.xyzx, cb1[8].xyzx
mul r2.xyz, r2.xyzx, r5.xyzx
mad r2.xyz, r2.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000), r3.xyzx
mul r0.z, cb1[5].w, l(0.002500)
mul r3.xy, v3.xyxx, cb1[6].yyyy
mad r0.zw, r3.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), r0.zzzz
sample_b_indexable(texture2d)(float,float,float,float) r3.xyzw, r0.zwzz, t5.xyzw, s5, l(-2.000000)
add r3.xyz, -r2.xyzx, r3.xyzx
sample_indexable(texture2d)(float,float,float,float) r0.z, v4.xyxx, t7.xyzw, s7
add r0.w, -r0.z, l(1.000000)
add r0.z, r0.z, l(0.001000)
add r0.w, -r0.w, r3.w
div_sat r0.z, r0.w, r0.z
mul r0.z, r0.z, l(0.150000)
mad r2.xyz, r0.zzzz, r3.xyzx, r2.xyzx
add r3.xyz, -r2.xyzx, r3.wwww
mad r0.yzw, r0.yyyy, r3.xxyz, r2.xxyz
mul r2.xyz, cb1[7].wwww, l(0.800000, 1.000000, 1.000000, 0.000000)
mul r2.xyz, r0.yzwy, r2.xyzx
mad r1.xyz, r1.xyzx, cb1[7].yyyy, r2.xyzx
mad r2.xyz, cb1[7].wwww, l(0.800000, 1.000000, 1.000000, 0.000000), cb1[8].xyzx
mul r2.xyz, r2.xyzx, r4.xyzx
mul r0.yzw, r0.yyzw, r2.xxyz
mad r0.yzw, r0.yyzw, l(0.000000, 3.000000, 3.000000, 3.000000), r1.xxyz
add r1.xyz, v1.xyzx, -cb0[36].xyzx
max r1.w, r1.z, l(0.000000)
dp3 r2.x, r1.xywx, r1.xywx
rsq r2.x, r2.x
mul r2.xyz, r1.xywx, r2.xxxx
mad r1.w, r2.z, l(2.000000), l(2.000000)
div r2.xy, r2.yxyy, r1.wwww
add r1.w, -r2.x, l(0.500000)
add_sat r2.y, r2.y, l(0.500000)
max_sat r2.x, r1.w, l(0.125000)
mad r2.z, r2.x, l(0.500000), l(0.500000)
sample_l_indexable(texture2d)(float,float,float,float) r2.xyz, r2.zyzz, t0.xyzw, s0, l(6.000000)
sample_l_indexable(texture2d)(float,float,float,float) r3.xyz, l(0.750000, 0.500000, 0.000000, 0.000000), t0.xyzw, s0, l(6.000000)
add r3.xyz, -r2.xyzx, r3.xyzx
dp3 r1.x, r1.xyzx, r1.xyzx
rsq r1.y, r1.x
sqrt r1.x, r1.x
mul r1.xw, r1.xxxx, cb0[48].zzzw
mul r1.y, r1.y, r1.z
mad r2.xyz, |r1.yyyy|, r3.xyzx, r2.xyzx
mul r2.xyz, r2.xyzx, cb0[50].xyzx
mul r2.xyz, r2.xyzx, cb0[49].wwww
ge r1.y, l(0.000000), cb0[47].w
movc r1.y, r1.y, l(-10.000000), l(-10000.000000)
ge r1.y, v1.z, r1.y
mul r3.xy, r1.zzzz, l(1.000000, -1.000000, 0.000000, 0.000000)
lt r1.z, l(0.010000), |r1.z|
mul r3.xy, r3.xyxx, cb0[49].xyxx
mul r3.zw, r3.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
exp r3.zw, r3.zzzw
add r3.zw, -r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
div r3.xy, r3.zwzz, r3.xyxx
mul r3.xy, r1.xwxx, r3.xyxx
movc r1.xz, r1.zzzz, r3.xxyx, r1.xxwx
mul r1.xz, r1.xxzx, -cb0[48].xxyx
mul r1.xz, r1.xxzx, l(1.442695, 0.000000, 1.442695, 0.000000)
exp r1.xz, r1.xxzx
add r1.xz, -r1.xxzx, l(1.000000, 0.000000, 1.000000, 0.000000)
max r1.x, r1.z, r1.x
log r1.x, r1.x
mul r1.x, r1.x, cb0[50].w
exp r1.x, r1.x
min r2.w, r1.x, cb0[49].z
movc r1.xyzw, r1.yyyy, r2.xyzw, l(0,0,0,1.000000)
mul r2.xyz, r1.wwww, r1.xyzx
add r2.w, -r1.w, l(1.000000)
mul r1.xyzw, r2.xyzw, cb0[38].wwww
mad o0.xyz, r0.yzwy, r1.wwww, r1.xyzx
add r0.y, v4.y, l(-0.963542)
mul_sat r0.y, r0.y, l(38.400002)
add r0.y, -r0.y, l(1.000000)
mul o0.w, r0.y, r0.x
ret 
// Approximately 178 instruction slots used
 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
