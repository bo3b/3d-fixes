//Lights
cbuffer Viewport : register(b0)
{
  float4x4 _ViewRotProjectionMatrix : packoffset(c0);
  float4x4 _ViewProjectionMatrix : packoffset(c4);
  float4x4 _ProjectionMatrix : packoffset(c8);
  float4x4 _InvProjectionMatrix : packoffset(c12);
  float4x4 _InvProjectionMatrixDepth : packoffset(c16);
  float4x4 _DepthTextureTransform : packoffset(c20);
  float4x3 _ViewMatrix : packoffset(c24);
  float4x3 _InvViewMatrix : packoffset(c27);
  float4x4 _PreviousViewProjectionMatrix : packoffset(c30);
  float4 _CameraDistances : packoffset(c34);
  float4 _ViewportSize : packoffset(c35);
  float4 _CameraPosition_MaxStaticReflectionMipIndex : packoffset(c36);
  float4 _CameraDirection_MaxParaboloidReflectionMipIndex : packoffset(c37);
  float4 _ViewPoint_ExposureScale : packoffset(c38);
  float4 _FogColorVector_ExposedWhitePointOverExposureScale : packoffset(c39);
  float3 _SideFogColor : packoffset(c40);
  float3 _SunFogColorDelta : packoffset(c41);
  float3 _OppositeFogColorDelta : packoffset(c42);
  float4 _FogValues0 : packoffset(c43);
  float4 _FogValues1 : packoffset(c44);
  float4 _CameraNearPlaneSize : packoffset(c45);
  float4 _UncompressDepthWeights_ShadowProjDepthMinValue : packoffset(c46);
  float4 _UncompressDepthWeightsWS_ReflectionFadeTarget : packoffset(c47);
  float4 _WorldAmbientColorParams0 : packoffset(c48);
  float4 _WorldAmbientColorParams1 : packoffset(c49);
  float4 _WorldAmbientColorParams2 : packoffset(c50);
  float4 _GlobalWorldTextureParams : packoffset(c51);
  float4 _CullingCameraPosition_OneOverAutoExposureScale : packoffset(c52);
  float4 _AmbientSkyColor_ReflectionScaleStrength : packoffset(c53);
  float4 _AmbientGroundColor_ReflectionScaleDistanceMul : packoffset(c54);
  float4 _FacettedShadowCastParams : packoffset(c55);
  float4 _FSMClipPlanes : packoffset(c56);
  float2 _ReflectionGIControl : packoffset(c57);
}

cbuffer LightProbes : register(b1)
{
  float4 _InteriorIrradianceRadianceScale : packoffset(c0);
  float4x4 _LocalToWorldMatrixWithFeatherMargin : packoffset(c1);
  float4x4 _LocalToWorldMatrixWithoutFeatherMargin : packoffset(c5);
  float4 _MiscDataToTidy : packoffset(c9);
  float4x4 _ScreenToLocalMatrix : packoffset(c10);
  float4x4 _WorldToLocalMatrix : packoffset(c14);
  float3 _InteriorAmbientLightInfo : packoffset(c18);
  float _LinearGridResCutoff : packoffset(c18.w);
  float3 _InteriorUVWBias : packoffset(c19);
  float _MaxLinearSliceIndex : packoffset(c19.w);
  float3 _InteriorUVWScale : packoffset(c20);
  float3 _RcpFeatherWidthsInBasicUVWSpace : packoffset(c21);
  float3 _VolumeCentre : packoffset(c22);
  float3 _VolumeDimensions : packoffset(c23);
  float2 _IrradianceSHInfo : packoffset(c24);
  float2 _MaxDepthBoundsInnerOuter : packoffset(c24.z);
  float2 _RadianceSHInfo : packoffset(c25);
  float2 _SkySHInfo : packoffset(c25.z);
}

cbuffer LightProbesGlobal : register(b2)
{
  float4x4 _BoxMatrix : packoffset(c0);
  float4 _LightProbesMultipliers : packoffset(c4);
  float4 _MinAmbient : packoffset(c5);
  float4 _ProbeUVToViewSpace : packoffset(c6);
  float4 _SH_B : packoffset(c7);
  float4 _SH_G : packoffset(c8);
  float4 _SH_R : packoffset(c9);
  float4x4 _ScreenToWorldMatrix : packoffset(c10);
  float4x4 _ViewProjectionMatrixWithZBias : packoffset(c14);
  float4 _VolumeCentreGlobal : packoffset(c18);
  float4 _WorldEdgeFadeParams : packoffset(c19);
  float3 _DefaultProbeAverageColor : packoffset(c20);
  float _CenterBaseZ : packoffset(c20.w);
  float3 _DefaultProbeLowerColor : packoffset(c21);
  float _DrawDistance : packoffset(c21.w);
  float3 _DefaultProbeUpperColor : packoffset(c22);
  int _ProbeMSAALevel : packoffset(c22.w);
  float2 _LocalLightsMultipliersGlobal : packoffset(c23);
  float2 _RelightingMultiplier : packoffset(c23.z);
}
SamplerState LightProbes__FloorCeilingTexture__SampObj___s : register(s0);
SamplerState LightProbes__VolumeTextureB__SampObj___s : register(s1);
SamplerState LightProbes__VolumeTextureG__SampObj___s : register(s2);
SamplerState LightProbes__VolumeTextureR__SampObj___s : register(s3);
Texture2D<float4> LightProbes__FloorCeilingTexture__TexObj__ : register(t0);
Texture3D<float4> LightProbes__VolumeTextureB__TexObj__ : register(t1);
Texture3D<float4> LightProbes__VolumeTextureG__TexObj__ : register(t2);
Texture3D<float4> LightProbes__VolumeTextureR__TexObj__ : register(t3);
Texture2DMS<float4> LightProbesGlobal__GBufferNormalTextureMS : register(t4);
Texture2DMS<float4> LightProbesGlobal__ProbeDepthSamplerMS : register(t5);

Texture2D<float4> StereoParams : register(t125);

void main(
  float3 v0 : TEXCOORD0,
  float3 v1 : TEXCOORD1,
  float4 v2 : SV_Position0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5;
  uint4 bitmask;
  r0.xy = LightProbesGlobal__ProbeDepthSamplerMS.GetSamplePosition(0);
  r0.xy = v2.xy + r0.xy;
  r0.xy = _ViewportSize.zw * r0.xy;
  r0.xy = _ProbeUVToViewSpace.xy * r0.xy + _ProbeUVToViewSpace.zw;
  r1.xy = (int2)v2.xy;
  r1.zw = float2(0.000000e+000,0.000000e+000);
  r0.z = LightProbesGlobal__ProbeDepthSamplerMS.Load(r1.xyz,0.000000000e+000).x;
  r1.xyz = LightProbesGlobal__GBufferNormalTextureMS.Load(r1.xyw,0.000000000e+000).xyz;
  r1.xyz = r1.xyz * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r0.w = 1.000000000e+000;
  r1.w = dot(r0.zw, _InvProjectionMatrix._m22_m32);
  r0.z = dot(r0.zw, _InvProjectionMatrix._m23_m33);
  r0.z = -r1.w / r0.z;
  r2.z = -r0.z;
  r2.xy = r2.zz * r0.xy;
  r2.w = 1.000000000e+000;
  
//Mike_ar69 - Stereo Shift
float4 stereo = StereoParams.Load(0);
r2.x -= stereo.x*(-r2.z - stereo.y)*_InvProjectionMatrix._m00;

  r0.x = dot(r2.xyzw, _InvViewMatrix._m00_m10_m20_m30);
  r0.y = dot(r2.xyzw, _InvViewMatrix._m01_m11_m21_m31);
  r0.z = dot(r2.xyzw, _InvViewMatrix._m02_m12_m22_m32);
  r2.xyz = -_ViewPoint_ExposureScale.xyz + r0.xyz;
  r1.w = dot(r2.xyz, r2.xyz);
  r1.w = rsqrt(r1.w);
  r2.xyz = r2.xyz * r1.www;
  r1.w = dot(r2.xyz, r1.xyz);
  r1.w = r1.w + r1.w;
  r2.xyz = r1.xyz * -r1.www + r2.xyz;
  r2.xyz = r2.xyz + -r1.xyz;
  r1.xyz = r2.xyz * float3(2.500000e-001,2.500000e-001,2.500000e-001) + r1.xyz;
  r1.w = dot(r1.xyz, r1.xyz);
  r1.w = rsqrt(r1.w);
  r2.x = -_CameraPosition_MaxStaticReflectionMipIndex.z + r0.z;
  r2.x = saturate(r2.x * 5.000000000e-001 + 5.000000000e-001);
  r2.x = r2.x * -2.000000000e+000 + 1.000000000e+000;
  r2.y = r1.z * r1.w + r2.x;
  r1.xyz = r1.xyz * r1.www;
  r1.w = 1.000000000e+000 + abs(r2.x);
  r1.w = r2.y / r1.w;
  r0.w = 1.000000000e+000;
  r2.x = saturate(dot(r0.xyzw, _WorldToLocalMatrix._m02_m12_m22_m32));
  r2.y = saturate(-_LinearGridResCutoff + r2.x);
  r2.x = saturate(r2.x / _LinearGridResCutoff);
  r2.x = _MaxLinearSliceIndex * r2.x;
  r2.z = 1.000000000e+000 + -_LinearGridResCutoff;
  
  // r2.y = r2.y / r2.z;
  // r2.y = log2(r2.y);
  // r2.y = _MiscDataToTidy.w * r2.y;
  // r2.y = exp2(r2.y);
r2.y = 1.0;  
  
  r3.xyzw = float4(-1.000000e+000,-1.000000e+000,-1.000000e+000,-1.000000e+000) + _MiscDataToTidy.xxyz;
  r2.z = -_MaxLinearSliceIndex + r3.w;
  r2.y = r2.y * r2.z;
  r2.z = _LinearGridResCutoff < 1.000000000e+000;
  r2.y = r2.y ? r2.z : 0;
  r2.z = 0.000000000e+000 < _LinearGridResCutoff;
  r2.x = r2.x ? r2.z : 0;
  r2.x = r2.x + r2.y;
  r2.x = r2.x / _MiscDataToTidy.z;
  r4.xyzw = float4(5.000000e-001,5.000000e-001,2.000000e-001,5.000000e-001) / _MiscDataToTidy.xyzz;
  r1.w = r1.w * r4.z + r2.x;
  r2.x = _MiscDataToTidy.z * r1.w;
  r2.y = floor(r2.x);
  r2.x = ceil(r2.x);
  r2.xy = r2.xy / _MiscDataToTidy.zz;
  r5.x = dot(r0.xyzw, _WorldToLocalMatrix._m00_m10_m20_m30);
  r5.y = dot(r0.xyzw, _WorldToLocalMatrix._m01_m11_m21_m31);
  r0.xy = abs(r0.xy) * _WorldEdgeFadeParams.xy + float2(-1.000000e+000,-1.000000e+000);
  r0.xy = saturate(_WorldEdgeFadeParams.zw * r0.xy);
  r0.x = max(r0.y, r0.x);
  r0.yw = float2(5.000000e-001,5.000000e-001) + r5.xy;
  r2.z = _VolumeDimensions.x / r3.x;
  r3.xy = r3.yz / _MiscDataToTidy.xy;
  r2.z = 3.000000119e-001 * r2.z;
  r2.zw = r2.zz * r1.xy;
  r2.zw = r2.zw / _VolumeDimensions.xy;
  r0.yw = saturate(r2.zw + r0.yw);
  r0.yw = r0.yw + r4.xy;
  r3.xy = r0.yw * r3.xy;
  r0.y = saturate(r3.y);
  r0.y = r0.y / _MiscDataToTidy.z;
  r3.z = r0.y + r2.y;
  // r0.yw = LightProbes__FloorCeilingTexture__TexObj__.SampleLevel(LightProbes__FloorCeilingTexture__SampObj___s, r3.xz, 0.000000000e+000).xy;
r0.yw = float2(0.0,0.0);

  r2.z = r0.y / _MiscDataToTidy.z;
  r2.z = r2.y + r2.z;
  r1.w = -r2.z + r1.w;
  r1.w = _MiscDataToTidy.z * r1.w;
  r2.zw = float2(1.000000e+000,1.000000e+000) + -r0.yw;
  r0.y = r2.w * 2.500000000e-001 + r0.w;
  r0.y = min(r0.y, r2.z);
  r0.y = saturate(r1.w / r0.y);
  r0.w = r2.x + -r2.y;
  r0.y = r0.y * r0.w + r2.y;
  r3.w = r0.y + r4.w;
  r2.xyzw = LightProbes__VolumeTextureR__TexObj__.SampleLevel(LightProbes__VolumeTextureR__SampObj___s, r3.xyw, 0.000000000e+000).xyzw;
  r4.xyzw = _SH_R.xyzw + -r2.xyzw;
  r0.y = _VolumeDimensions.z + _VolumeCentre.z;
  r0.y = r0.y + -r0.z;
  r0.y = saturate(3.333333507e-002 * r0.y);
  r0.y = 1.000000000e+000 + -r0.y;
  r0.x = max(r0.x, r0.y);
  r2.xyzw = r0.xxxx * r4.xyzw + r2.xyzw;
  r2.xyzw = max(r2.xyzw, _MinAmbient.xxxw);
  r4.xyzw = LightProbes__VolumeTextureG__TexObj__.SampleLevel(LightProbes__VolumeTextureG__SampObj___s, r3.xyw, 0.000000000e+000).xyzw;
  r3.xyzw = LightProbes__VolumeTextureB__TexObj__.SampleLevel(LightProbes__VolumeTextureB__SampObj___s, r3.xyw, 0.000000000e+000).xyzw;
  r5.xyzw = _SH_G.xyzw + -r4.xyzw;
  r4.xyzw = r0.xxxx * r5.xyzw + r4.xyzw;
  r4.xyzw = max(r4.xwyz, _MinAmbient.ywyy);
  r5.x = dot(r1.xyz, float3(-4.082480e-001,-7.071070e-001,5.773503e-001));
  r5.y = dot(r1.xyz, float3(-4.082480e-001,7.071070e-001,5.773503e-001));
  r5.z = dot(r1.zx, float2(5.773503e-001,8.164970e-001));
  r5.w = -r1.z;
  r5.xyzw = saturate(r5.xyzw);
  r0.yzw = r5.yyy * r4.xzw;
  r0.yzw = r5.xxx * r2.xyz + r0.yzw;
  r4.x = r2.w;
  r1.xyzw = _SH_B.xyzw + -r3.xyzw;
  r1.xyzw = r0.xxxx * r1.xyzw + r3.xyzw;
  r1.xyzw = max(r1.xyzw, _MinAmbient.zzzw);
  r0.xyz = r5.zzz * r1.xyz + r0.yzw;
  r4.z = r1.w;
  r0.xyz = r5.www * r4.xyz + r0.xyz;
  r0.w = r5.x + r5.y;
  r0.w = r0.w + r5.z;
  r0.w = r0.w + r5.w;
  o0.xyz = r0.xyz / r0.www;
  o0.w = 1.000000000e+000;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4x4 _ViewRotProjectionMatrix; // Offset:    0 Size:    64 [unused]
//   float4x4 _ViewProjectionMatrix;    // Offset:   64 Size:    64 [unused]
//   float4x4 _ProjectionMatrix;        // Offset:  128 Size:    64 [unused]
//   float4x4 _InvProjectionMatrix;     // Offset:  192 Size:    64
//   float4x4 _InvProjectionMatrixDepth;// Offset:  256 Size:    64 [unused]
//   float4x4 _DepthTextureTransform;   // Offset:  320 Size:    64 [unused]
//   float4x3 _ViewMatrix;              // Offset:  384 Size:    48 [unused]
//   float4x3 _InvViewMatrix;           // Offset:  432 Size:    48
//   float4x4 _PreviousViewProjectionMatrix;// Offset:  480 Size:    64 [unused]
//   float4 _CameraDistances;           // Offset:  544 Size:    16 [unused]
//   float4 _ViewportSize;              // Offset:  560 Size:    16
//   float4 _CameraPosition_MaxStaticReflectionMipIndex;// Offset:  576 Size:    16
//   float4 _CameraDirection_MaxParaboloidReflectionMipIndex;// Offset:  592 Size:    16 [unused]
//   float4 _ViewPoint_ExposureScale;   // Offset:  608 Size:    16
//   float4 _FogColorVector_ExposedWhitePointOverExposureScale;// Offset:  624 Size:    16 [unused]
//   float3 _SideFogColor;              // Offset:  640 Size:    12 [unused]
//   float3 _SunFogColorDelta;          // Offset:  656 Size:    12 [unused]
//   float3 _OppositeFogColorDelta;     // Offset:  672 Size:    12 [unused]
//   float4 _FogValues0;                // Offset:  688 Size:    16 [unused]
//   float4 _FogValues1;                // Offset:  704 Size:    16 [unused]
//   float4 _CameraNearPlaneSize;       // Offset:  720 Size:    16 [unused]
//   float4 _UncompressDepthWeights_ShadowProjDepthMinValue;// Offset:  736 Size:    16 [unused]
//   float4 _UncompressDepthWeightsWS_ReflectionFadeTarget;// Offset:  752 Size:    16 [unused]
//   float4 _WorldAmbientColorParams0;  // Offset:  768 Size:    16 [unused]
//   float4 _WorldAmbientColorParams1;  // Offset:  784 Size:    16 [unused]
//   float4 _WorldAmbientColorParams2;  // Offset:  800 Size:    16 [unused]
//   float4 _GlobalWorldTextureParams;  // Offset:  816 Size:    16 [unused]
//   float4 _CullingCameraPosition_OneOverAutoExposureScale;// Offset:  832 Size:    16 [unused]
//   float4 _AmbientSkyColor_ReflectionScaleStrength;// Offset:  848 Size:    16 [unused]
//   float4 _AmbientGroundColor_ReflectionScaleDistanceMul;// Offset:  864 Size:    16 [unused]
//   float4 _FacettedShadowCastParams;  // Offset:  880 Size:    16 [unused]
//   float4 _FSMClipPlanes;             // Offset:  896 Size:    16 [unused]
//   float2 _ReflectionGIControl;       // Offset:  912 Size:     8 [unused]
//
// }
//
// cbuffer LightProbes
// {
//
//   float4 _InteriorIrradianceRadianceScale;// Offset:    0 Size:    16 [unused]
//   float4x4 _LocalToWorldMatrixWithFeatherMargin;// Offset:   16 Size:    64 [unused]
//   float4x4 _LocalToWorldMatrixWithoutFeatherMargin;// Offset:   80 Size:    64 [unused]
//   float4 _MiscDataToTidy;            // Offset:  144 Size:    16
//   float4x4 _ScreenToLocalMatrix;     // Offset:  160 Size:    64 [unused]
//   float4x4 _WorldToLocalMatrix;      // Offset:  224 Size:    64
//   float3 _InteriorAmbientLightInfo;  // Offset:  288 Size:    12 [unused]
//   float _LinearGridResCutoff;        // Offset:  300 Size:     4
//   float3 _InteriorUVWBias;           // Offset:  304 Size:    12 [unused]
//   float _MaxLinearSliceIndex;        // Offset:  316 Size:     4
//   float3 _InteriorUVWScale;          // Offset:  320 Size:    12 [unused]
//   float3 _RcpFeatherWidthsInBasicUVWSpace;// Offset:  336 Size:    12 [unused]
//   float3 _VolumeCentre;              // Offset:  352 Size:    12
//   float3 _VolumeDimensions;          // Offset:  368 Size:    12
//   float2 _IrradianceSHInfo;          // Offset:  384 Size:     8 [unused]
//   float2 _MaxDepthBoundsInnerOuter;  // Offset:  392 Size:     8 [unused]
//   float2 _RadianceSHInfo;            // Offset:  400 Size:     8 [unused]
//   float2 _SkySHInfo;                 // Offset:  408 Size:     8 [unused]
//
// }
//
// cbuffer LightProbesGlobal
// {
//
//   float4x4 _BoxMatrix;               // Offset:    0 Size:    64 [unused]
//   float4 _LightProbesMultipliers;    // Offset:   64 Size:    16 [unused]
//   float4 _MinAmbient;                // Offset:   80 Size:    16
//   float4 _ProbeUVToViewSpace;        // Offset:   96 Size:    16
//   float4 _SH_B;                      // Offset:  112 Size:    16
//   float4 _SH_G;                      // Offset:  128 Size:    16
//   float4 _SH_R;                      // Offset:  144 Size:    16
//   float4x4 _ScreenToWorldMatrix;     // Offset:  160 Size:    64 [unused]
//   float4x4 _ViewProjectionMatrixWithZBias;// Offset:  224 Size:    64 [unused]
//   float4 _VolumeCentreGlobal;        // Offset:  288 Size:    16 [unused]
//   float4 _WorldEdgeFadeParams;       // Offset:  304 Size:    16
//   float3 _DefaultProbeAverageColor;  // Offset:  320 Size:    12 [unused]
//   float _CenterBaseZ;                // Offset:  332 Size:     4 [unused]
//   float3 _DefaultProbeLowerColor;    // Offset:  336 Size:    12 [unused]
//   float _DrawDistance;               // Offset:  348 Size:     4 [unused]
//   float3 _DefaultProbeUpperColor;    // Offset:  352 Size:    12 [unused]
//   int _ProbeMSAALevel;               // Offset:  364 Size:     4 [unused]
//   float2 _LocalLightsMultipliersGlobal;// Offset:  368 Size:     8 [unused]
//   float2 _RelightingMultiplier;      // Offset:  376 Size:     8 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// LightProbes__FloorCeilingTexture__SampObj__    sampler      NA          NA    0        1
// LightProbes__VolumeTextureB__SampObj__    sampler      NA          NA    1        1
// LightProbes__VolumeTextureG__SampObj__    sampler      NA          NA    2        1
// LightProbes__VolumeTextureR__SampObj__    sampler      NA          NA    3        1
// LightProbes__FloorCeilingTexture__TexObj__    texture  float4          2d    0        1
// LightProbes__VolumeTextureB__TexObj__    texture  float4          3d    1        1
// LightProbes__VolumeTextureG__TexObj__    texture  float4          3d    2        1
// LightProbes__VolumeTextureR__TexObj__    texture  float4          3d    3        1
// LightProbesGlobal__GBufferNormalTextureMS    texture  float4        2dMS    4        1
// LightProbesGlobal__ProbeDepthSamplerMS    texture  float4        2dMS    5        1
// Viewport                          cbuffer      NA          NA    0        1
// LightProbes                       cbuffer      NA          NA    1        1
// LightProbesGlobal                 cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyz         0     NONE   float       
// TEXCOORD                 1   xyz         1     NONE   float       
// SV_Position              0   xyzw        2      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[39], immediateIndexed
dcl_constantbuffer cb1[24], immediateIndexed
dcl_constantbuffer cb2[20], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_resource_texture2dms(0) (float,float,float,float) t4
dcl_resource_texture2dms(0) (float,float,float,float) t5
dcl_input_ps_siv linear noperspective v2.xy, position
dcl_output o0.xyzw
dcl_temps 6
samplepos r0.xy, t5.xyxx, l(0)
add r0.xy, r0.xyxx, v2.xyxx
mul r0.xy, r0.xyxx, cb0[35].zwzz
mad r0.xy, cb2[6].xyxx, r0.xyxx, cb2[6].zwzz
ftoi r1.xy, v2.xyxx
mov r1.zw, l(0,0,0,0)
ldms_indexable(texture2dms)(float,float,float,float) r0.z, r1.xyzw, t5.zwxy, l(0)
ldms_indexable(texture2dms)(float,float,float,float) r1.xyz, r1.xyww, t4.xyzw, l(0)
mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mov r0.w, l(1.000000)
dp2 r1.w, r0.zwzz, cb0[14].zwzz
dp2 r0.z, r0.zwzz, cb0[15].zwzz
div r0.z, -r1.w, r0.z
mov r2.z, -r0.z
mul r2.xy, r0.xyxx, r2.zzzz
mov r2.w, l(1.000000)
dp4 r0.x, r2.xyzw, cb0[27].xyzw
dp4 r0.y, r2.xyzw, cb0[28].xyzw
dp4 r0.z, r2.xyzw, cb0[29].xyzw
add r2.xyz, r0.xyzx, -cb0[38].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
dp3 r1.w, r2.xyzx, r1.xyzx
add r1.w, r1.w, r1.w
mad r2.xyz, r1.xyzx, -r1.wwww, r2.xyzx
add r2.xyz, -r1.xyzx, r2.xyzx
mad r1.xyz, r2.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r1.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
add r2.x, r0.z, -cb0[36].z
mad_sat r2.x, r2.x, l(0.500000), l(0.500000)
mad r2.x, r2.x, l(-2.000000), l(1.000000)
mad r2.y, r1.z, r1.w, r2.x
mul r1.xyz, r1.wwww, r1.xyzx
add r1.w, |r2.x|, l(1.000000)
div r1.w, r2.y, r1.w
mov r0.w, l(1.000000)
dp4_sat r2.x, r0.xyzw, cb1[16].xyzw
add_sat r2.y, r2.x, -cb1[18].w
div_sat r2.x, r2.x, cb1[18].w
mul r2.x, r2.x, cb1[19].w
add r2.z, -cb1[18].w, l(1.000000)
div r2.y, r2.y, r2.z
log r2.y, r2.y
mul r2.y, r2.y, cb1[9].w
exp r2.y, r2.y
add r3.xyzw, cb1[9].xxyz, l(-1.000000, -1.000000, -1.000000, -1.000000)
add r2.z, r3.w, -cb1[19].w
mul r2.y, r2.z, r2.y
lt r2.z, cb1[18].w, l(1.000000)
and r2.y, r2.y, r2.z
lt r2.z, l(0.000000), cb1[18].w
and r2.x, r2.x, r2.z
add r2.x, r2.y, r2.x
div r2.x, r2.x, cb1[9].z
div r4.xyzw, l(0.500000, 0.500000, 0.200000, 0.500000), cb1[9].xyzz
mad r1.w, r1.w, r4.z, r2.x
mul r2.x, r1.w, cb1[9].z
round_ni r2.y, r2.x
round_pi r2.x, r2.x
div r2.xy, r2.xyxx, cb1[9].zzzz
dp4 r5.x, r0.xyzw, cb1[14].xyzw
dp4 r5.y, r0.xyzw, cb1[15].xyzw
mad r0.xy, |r0.xyxx|, cb2[19].xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)
mul_sat r0.xy, r0.xyxx, cb2[19].zwzz
max r0.x, r0.y, r0.x
add r0.yw, r5.xxxy, l(0.000000, 0.500000, 0.000000, 0.500000)
div r2.z, cb1[23].x, r3.x
div r3.xy, r3.yzyy, cb1[9].xyxx
mul r2.z, r2.z, l(0.300000)
mul r2.zw, r1.xxxy, r2.zzzz
div r2.zw, r2.zzzw, cb1[23].xxxy
add_sat r0.yw, r0.yyyw, r2.zzzw
add r0.yw, r4.xxxy, r0.yyyw
mul r3.xy, r3.xyxx, r0.ywyy
mov_sat r0.y, r3.y
div r0.y, r0.y, cb1[9].z
add r3.z, r2.y, r0.y
sample_l_indexable(texture2d)(float,float,float,float) r0.yw, r3.xzxx, t0.zxwy, s0, l(0.000000)
div r2.z, r0.y, cb1[9].z
add r2.z, r2.z, r2.y
add r1.w, r1.w, -r2.z
mul r1.w, r1.w, cb1[9].z
add r2.zw, -r0.yyyw, l(0.000000, 0.000000, 1.000000, 1.000000)
mad r0.y, r2.w, l(0.250000), r0.w
min r0.y, r0.y, r2.z
div_sat r0.y, r1.w, r0.y
add r0.w, -r2.y, r2.x
mad r0.y, r0.y, r0.w, r2.y
add r3.w, r4.w, r0.y
sample_l_indexable(texture3d)(float,float,float,float) r2.xyzw, r3.xywx, t3.xyzw, s3, l(0.000000)
add r4.xyzw, -r2.xyzw, cb2[9].xyzw
add r0.y, cb1[22].z, cb1[23].z
add r0.y, -r0.z, r0.y
mul_sat r0.y, r0.y, l(0.033333)
add r0.y, -r0.y, l(1.000000)
max r0.x, r0.x, r0.y
mad r2.xyzw, r0.xxxx, r4.xyzw, r2.xyzw
max r2.xyzw, r2.xyzw, cb2[5].xxxw
sample_l_indexable(texture3d)(float,float,float,float) r4.xyzw, r3.xywx, t2.xyzw, s2, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r3.xyzw, r3.xywx, t1.xyzw, s1, l(0.000000)
add r5.xyzw, -r4.xyzw, cb2[8].xyzw
mad r4.xyzw, r0.xxxx, r5.xyzw, r4.xyzw
max r4.xyzw, r4.xwyz, cb2[5].ywyy
dp3 r5.x, r1.xyzx, l(-0.408248, -0.707107, 0.577350, 0.000000)
dp3 r5.y, r1.xyzx, l(-0.408248, 0.707107, 0.577350, 0.000000)
dp2 r5.z, r1.zxzz, l(0.577350, 0.816497, 0.000000, 0.000000)
mov r5.w, -r1.z
mov_sat r5.xyzw, r5.xyzw
mul r0.yzw, r4.xxzw, r5.yyyy
mad r0.yzw, r5.xxxx, r2.xxyz, r0.yyzw
mov r4.x, r2.w
add r1.xyzw, -r3.xyzw, cb2[7].xyzw
mad r1.xyzw, r0.xxxx, r1.xyzw, r3.xyzw
max r1.xyzw, r1.xyzw, cb2[5].zzzw
mad r0.xyz, r5.zzzz, r1.xyzx, r0.yzwy
mov r4.z, r1.w
mad r0.xyz, r5.wwww, r4.xyzx, r0.xyzx
add r0.w, r5.y, r5.x
add r0.w, r5.z, r0.w
add r0.w, r5.w, r0.w
div o0.xyz, r0.xyzx, r0.wwww
mov o0.w, l(1.000000)
ret 
// Approximately 125 instruction slots used
 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
