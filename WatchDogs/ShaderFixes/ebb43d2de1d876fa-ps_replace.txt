//Night Lighting
cbuffer Global : register(b0)
{
  float4 _DebugValues : packoffset(c0);
  float4 _GlobalLightsIntensity : packoffset(c1);
  float4 _GlobalScalars : packoffset(c2);
  float4 _GlobalScalars2 : packoffset(c3);
  float4 _GlobalWeatherControl_StaticReflectionIntensityDest : packoffset(c4);
  float4 _WorldLoadingRingSizes : packoffset(c5);
  float4 _ReflectionAmbientColor_WindNoiseDeltaVectorX : packoffset(c6);
  float4 _ReflectionLightDirection_WindNoiseDeltaVectorY : packoffset(c7);
  float4 _ReflectionLightColor_CrowdAnimationStartTime : packoffset(c8);
  float4 _WindVelocityTextureCoverage : packoffset(c9);
  float4 _WindGlobalNoiseTextureCoverage_VertexAOIntensity : packoffset(c10);
  float4 _WindGlobalNoiseTextureChannelSel_ReflectionTextureBlendRatio : packoffset(c11);
  float4 _WindGlobalTurbulence : packoffset(c12);
  float4 _DefaultAmbientProbesColour_TimeOfDay : packoffset(c13);
}

cbuffer Viewport : register(b1)
{
  float4x4 _ViewRotProjectionMatrix : packoffset(c0);
  float4x4 _ViewProjectionMatrix : packoffset(c4);
  float4x4 _ProjectionMatrix : packoffset(c8);
  float4x4 _InvProjectionMatrix : packoffset(c12);
  float4x4 _InvProjectionMatrixDepth : packoffset(c16);
  float4x4 _DepthTextureTransform : packoffset(c20);
  float4x3 _ViewMatrix : packoffset(c24);
  float4x3 _InvViewMatrix : packoffset(c27);
  float4x4 _PreviousViewProjectionMatrix : packoffset(c30);
  float4 _CameraDistances : packoffset(c34);
  float4 _ViewportSize : packoffset(c35);
  float4 _CameraPosition_MaxStaticReflectionMipIndex : packoffset(c36);
  float4 _CameraDirection_MaxParaboloidReflectionMipIndex : packoffset(c37);
  float4 _ViewPoint_ExposureScale : packoffset(c38);
  float4 _FogColorVector_ExposedWhitePointOverExposureScale : packoffset(c39);
  float3 _SideFogColor : packoffset(c40);
  float3 _SunFogColorDelta : packoffset(c41);
  float3 _OppositeFogColorDelta : packoffset(c42);
  float4 _FogValues0 : packoffset(c43);
  float4 _FogValues1 : packoffset(c44);
  float4 _CameraNearPlaneSize : packoffset(c45);
  float4 _UncompressDepthWeights_ShadowProjDepthMinValue : packoffset(c46);
  float4 _UncompressDepthWeightsWS_ReflectionFadeTarget : packoffset(c47);
  float4 _WorldAmbientColorParams0 : packoffset(c48);
  float4 _WorldAmbientColorParams1 : packoffset(c49);
  float4 _WorldAmbientColorParams2 : packoffset(c50);
  float4 _GlobalWorldTextureParams : packoffset(c51);
  float4 _CullingCameraPosition_OneOverAutoExposureScale : packoffset(c52);
  float4 _AmbientSkyColor_ReflectionScaleStrength : packoffset(c53);
  float4 _AmbientGroundColor_ReflectionScaleDistanceMul : packoffset(c54);
  float4 _FacettedShadowCastParams : packoffset(c55);
  float4 _FSMClipPlanes : packoffset(c56);
  float2 _ReflectionGIControl : packoffset(c57);
}

cbuffer DeferredLightingCommon : register(b2)
{
  float4 _LongRangeShadowTileDebug : packoffset(c0);
  float4 _PositionScaleOffset : packoffset(c1);
  float4 _UVToViewSpace : packoffset(c2);
  float4 _VPosOffset : packoffset(c3);
  float4 _VPosScale : packoffset(c4);
  int _MSAALevel : packoffset(c5);
}
SamplerState Viewport__ParaboloidReflectionTexture__SampObj___s : register(s0);
SamplerState DeferredLightingBase__DeferredReflectionTexture__SampObj___s : register(s1);
Texture2D<float4> Viewport__ParaboloidReflectionTexture__TexObj__ : register(t0);
TextureCube<float4> DeferredLightingBase__DeferredReflectionTexture__TexObj__ : register(t1);
Texture2DMS<float4> DeferredLightingBase__ProbeLightingTextureMS : register(t2);
Texture2DMS<float4> DeferredLightingCommon__AlbedoTextureMS : register(t3);
Texture2DMS<float4> DeferredLightingCommon__DepthSamplerMS : register(t4);
Texture2DMS<float4> DeferredLightingCommon__NormalTextureMS : register(t5);
Texture2DMS<float4> DeferredLightingCommon__OtherTextureMS : register(t6);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : SV_Position0,
  uint v1 : SV_SampleIndex0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6;
  uint4 bitmask;
  r0.xy = DeferredLightingCommon__DepthSamplerMS.GetSamplePosition(v1.x);
  r0.xy = v0.xy + r0.xy;
  r0.xy = r0.xy * _VPosScale.xy + _VPosOffset.xy;
  r0.xy = _UVToViewSpace.xy * r0.xy + _UVToViewSpace.zw;
  r1.y = 1.000000000e+000;
  r2.xy = (int2)v0.xy;
  r2.zw = float2(0.000000e+000,0.000000e+000);
  r1.x = DeferredLightingCommon__DepthSamplerMS.Load(r2.xyw,v1.x).x;
  r0.z = dot(r1.xy, _InvProjectionMatrix._m22_m32);
  r0.w = dot(r1.xy, _InvProjectionMatrix._m23_m33);
  r0.z = -r0.z / r0.w;
  r1.z = -r0.z;
  r1.xy = r1.zz * r0.xy;
  r1.w = 1.000000000e+000;
  
float4 stereo = StereoParams.Load(0);
r1.x -= stereo.x*(-r1.z - stereo.y)*_InvProjectionMatrix._m00; 
  
  r0.z = dot(r1.xyzw, _InvViewMatrix._m02_m12_m22_m32);
  r0.x = dot(r1.xyzw, _InvViewMatrix._m00_m10_m20_m30);
  r0.y = dot(r1.xyzw, _InvViewMatrix._m01_m11_m21_m31);
  r1.xyz = _CameraPosition_MaxStaticReflectionMipIndex.xyz + -r0.xyz;
  r0.xy = -_CameraPosition_MaxStaticReflectionMipIndex.xy + r0.xy;
  r0.x = dot(r0.xy, r0.xy);
  r0.x = saturate(_AmbientGroundColor_ReflectionScaleDistanceMul.w * r0.x);
  r0.y = dot(r1.xyz, r1.xyz);
  r0.y = rsqrt(r0.y);
  r0.yzw = r1.xyz * r0.yyy;
  r1.xyzw = DeferredLightingCommon__NormalTextureMS.Load(r2.xyw,v1.x).xyzw;
  r1.xyz = r1.xyz * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r1.w = round(r1.w);
  r3.xyz = float3(5.000000e-001,6.250000e-002,3.125000e-002) * r1.www;
  r1.w = dot(r1.xyz, r1.xyz);
  r1.w = r1.w == 0.000000;
  r1.x = r1.w ? 0 : r1.x;
  r1.y = r1.w ? 0 : r1.y;
  r1.z = r1.w ? 1 : r1.z;
  r1.w = dot(r1.xyz, r1.xyz);
  r1.w = rsqrt(r1.w);
  r4.xyz = r1.xyz * r1.www;
  r3.w = dot(-r0.yzw, r4.xyz);
  r3.w = r3.w + r3.w;
  r5.xyz = r4.xyz * -r3.www + -r0.yzw;
  r0.y = saturate(dot(r4.xyz, r0.yzw));
  r0.z = max(r4.z, 0.000000000e+000);
  r0.y = 1.000000000e+000 + -r0.y;
  r5.w = r5.z * 5.102040768e-001 + 4.897959232e-001;
  r0.w = dot(r5.xyw, r5.xyw);
  r0.w = rsqrt(r0.w);
  r4.xyz = r5.xyw * r0.www;
  r6.x = r3.x >= -r3.x;
  r6.y = r3.y >= -r3.y;
  r6.z = r3.z >= -r3.z;
  r3.xyz = frac(abs(r3.xyz));
  r3.x = r6.x ? r3.x : -r3.x;
  r3.y = r6.y ? r3.y : -r3.y;
  r3.z = r6.z ? r3.z : -r3.z;
  r0.w = r3.x == 0.500000;
  r3.x = r3.y >= 5.000000e-001;
  r3.y = r3.z >= 5.000000e-001;
  r4.x = r0.w ? r4.x : r5.x;
  r4.y = r0.w ? r4.y : r5.y;
  r4.z = r0.w ? r4.z : r5.z;
  r0.w = 1.000000015e-001 + -r4.z;
  r0.w = saturate(2.500000000e+000 * r0.w);
  r0.w = 3.000000119e-001 * r0.w;
  r5.z = r0.w * r0.z;
  r5.xy = float2(0.000000e+000,0.000000e+000);
  r5.xyz = r5.xyz + r4.xyz;
  r0.z = dot(r5.xyz, r5.xyz);
  r0.z = rsqrt(r0.z);
  r5.xyw = r5.xyz * r0.zzz;
  r0.z = 0.000000000e+000 < r5.z;
  r0.w = r5.w * 2.000000000e+000 + 2.000000000e+000;
  r5.xy = r5.yx / r0.ww;
  r5.zw = -r5.xx;
  r0.w = dot(r5.yz, r5.yw);
  r5.yz = saturate(r5.xy * float2(-1.000000e+000,1.000000e+000) + float2(5.000000e-001,5.000000e-001));
  r0.w = sqrt(r0.w);
  r6.xyz = DeferredLightingCommon__OtherTextureMS.Load(r2.xyw,v1.x).xyz;
  r3.zw = r6.yy * float2(-1.777778e+001,8.888889e+000) + float2(-2.222222e+000,1.111111e+000);
  r0.w = saturate(r0.w * r3.z + r3.w);
  r0.w = r3.x ? r0.w : 1.000000000e+000;
  r3.z = r3.x ? 0.000000000e+000 : 5.000000000e-001;
  r5.x = r5.y * 5.000000000e-001 + r3.z;
  r3.z = r6.y * -_CameraDirection_MaxParaboloidReflectionMipIndex.w + _CameraDirection_MaxParaboloidReflectionMipIndex.w;
  r5.xyz = Viewport__ParaboloidReflectionTexture__TexObj__.SampleLevel(Viewport__ParaboloidReflectionTexture__SampObj___s, r5.xz, r3.z).xyz;
  r5.xyzw = r5.xyzz * r0.wwww;
  r0.w = ~(int)r3.x;
  r0.z = (int)r0.w | (int)r0.z;
  r5.xyzw = (int4)r5.xyzw & (int4)r0.zzzz;
  r1.xyz = -r1.xyz * r1.www + r4.xyz;
  r0.xzw = r1.xyz * r0.xxx;
  r0.xzw = r0.xzw * _AmbientSkyColor_ReflectionScaleStrength.www + r4.xyz;
  r1.x = r6.y * -_CameraPosition_MaxStaticReflectionMipIndex.w + _CameraPosition_MaxStaticReflectionMipIndex.w;
  r1.xyzw = DeferredLightingBase__DeferredReflectionTexture__TexObj__.SampleLevel(DeferredLightingBase__DeferredReflectionTexture__SampObj___s, r0.xzw, r1.x).xyzw;
  r0.x = 1.000000000e+000 + -r1.w;
  r4.xyzw = r5.xyww * r0.xxxx;
  r4.xyzw = _UncompressDepthWeightsWS_ReflectionFadeTarget.wwww * r4.xyzw;
  r1.xyzw = r1.xyzz * _GlobalScalars.wwww + r4.xyzw;
  r1.x = r3.x ? r5.x : r1.x;
  r1.y = r3.x ? r5.y : r1.y;
  r1.z = r3.x ? r5.z : r1.z;
  r1.w = r3.x ? r5.w : r1.w;
  r0.xzw = DeferredLightingBase__ProbeLightingTextureMS.Load(r2.xyz,v1.x).xyz;
  r2.xyzw = DeferredLightingCommon__AlbedoTextureMS.Load(r2.xyw,v1.x).xyzw;
  r3.z = saturate(dot(r0.xzw, float3(3.086000e-001,6.094000e-001,8.200000e-002)));
  r3.z = -1.000000000e+000 + r3.z;
  r3.x = r3.x ? _ReflectionGIControl.y : _ReflectionGIControl.x;
  r3.x = r3.x * r3.z + 1.000000000e+000;
  r1.xyzw = r3.xxxx * r1.xyzw;
  r3.x = r0.y * r0.y;
  r3.x = r3.x * r3.x;
  r0.y = r3.x * r0.y;
  r3.x = max(r6.x, r6.y);
  r3.x = r3.x + -r6.x;
  r0.y = r3.x * r0.y + r6.x;
  r1.xyzw = r1.xyzw * r0.yyyy;
  r1.xyzw = r1.xyzw * r6.yyyy;
  r0.y = r6.z * r2.w;
  r1.xyzw = r1.xyzw * r0.yyyy;
  r1.xyzw = r1.xyzw * r2.wwww;
  r2.xyzw = r2.xyzz * r2.wwww;
  r1.xyzw = (int4)r1.xyzw & (int4)r3.yyyy;
  r0.xyzw = r2.xyzw * r0.xzww + r1.xyzw;
  o0.xyzw = _ViewPoint_ExposureScale.wwww * r0.xyzw;
  

  
  
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer Global
// {
//
//   float4 _DebugValues;               // Offset:    0 Size:    16 [unused]
//   float4 _GlobalLightsIntensity;     // Offset:   16 Size:    16 [unused]
//   float4 _GlobalScalars;             // Offset:   32 Size:    16
//   float4 _GlobalScalars2;            // Offset:   48 Size:    16 [unused]
//   float4 _GlobalWeatherControl_StaticReflectionIntensityDest;// Offset:   64 Size:    16 [unused]
//   float4 _WorldLoadingRingSizes;     // Offset:   80 Size:    16 [unused]
//   float4 _ReflectionAmbientColor_WindNoiseDeltaVectorX;// Offset:   96 Size:    16 [unused]
//   float4 _ReflectionLightDirection_WindNoiseDeltaVectorY;// Offset:  112 Size:    16 [unused]
//   float4 _ReflectionLightColor_CrowdAnimationStartTime;// Offset:  128 Size:    16 [unused]
//   float4 _WindVelocityTextureCoverage;// Offset:  144 Size:    16 [unused]
//   float4 _WindGlobalNoiseTextureCoverage_VertexAOIntensity;// Offset:  160 Size:    16 [unused]
//   float4 _WindGlobalNoiseTextureChannelSel_ReflectionTextureBlendRatio;// Offset:  176 Size:    16 [unused]
//   float4 _WindGlobalTurbulence;      // Offset:  192 Size:    16 [unused]
//   float4 _DefaultAmbientProbesColour_TimeOfDay;// Offset:  208 Size:    16 [unused]
//
// }
//
// cbuffer Viewport
// {
//
//   float4x4 _ViewRotProjectionMatrix; // Offset:    0 Size:    64 [unused]
//   float4x4 _ViewProjectionMatrix;    // Offset:   64 Size:    64 [unused]
//   float4x4 _ProjectionMatrix;        // Offset:  128 Size:    64 [unused]
//   float4x4 _InvProjectionMatrix;     // Offset:  192 Size:    64
//   float4x4 _InvProjectionMatrixDepth;// Offset:  256 Size:    64 [unused]
//   float4x4 _DepthTextureTransform;   // Offset:  320 Size:    64 [unused]
//   float4x3 _ViewMatrix;              // Offset:  384 Size:    48 [unused]
//   float4x3 _InvViewMatrix;           // Offset:  432 Size:    48
//   float4x4 _PreviousViewProjectionMatrix;// Offset:  480 Size:    64 [unused]
//   float4 _CameraDistances;           // Offset:  544 Size:    16 [unused]
//   float4 _ViewportSize;              // Offset:  560 Size:    16 [unused]
//   float4 _CameraPosition_MaxStaticReflectionMipIndex;// Offset:  576 Size:    16
//   float4 _CameraDirection_MaxParaboloidReflectionMipIndex;// Offset:  592 Size:    16
//   float4 _ViewPoint_ExposureScale;   // Offset:  608 Size:    16
//   float4 _FogColorVector_ExposedWhitePointOverExposureScale;// Offset:  624 Size:    16 [unused]
//   float3 _SideFogColor;              // Offset:  640 Size:    12 [unused]
//   float3 _SunFogColorDelta;          // Offset:  656 Size:    12 [unused]
//   float3 _OppositeFogColorDelta;     // Offset:  672 Size:    12 [unused]
//   float4 _FogValues0;                // Offset:  688 Size:    16 [unused]
//   float4 _FogValues1;                // Offset:  704 Size:    16 [unused]
//   float4 _CameraNearPlaneSize;       // Offset:  720 Size:    16 [unused]
//   float4 _UncompressDepthWeights_ShadowProjDepthMinValue;// Offset:  736 Size:    16 [unused]
//   float4 _UncompressDepthWeightsWS_ReflectionFadeTarget;// Offset:  752 Size:    16
//   float4 _WorldAmbientColorParams0;  // Offset:  768 Size:    16 [unused]
//   float4 _WorldAmbientColorParams1;  // Offset:  784 Size:    16 [unused]
//   float4 _WorldAmbientColorParams2;  // Offset:  800 Size:    16 [unused]
//   float4 _GlobalWorldTextureParams;  // Offset:  816 Size:    16 [unused]
//   float4 _CullingCameraPosition_OneOverAutoExposureScale;// Offset:  832 Size:    16 [unused]
//   float4 _AmbientSkyColor_ReflectionScaleStrength;// Offset:  848 Size:    16
//   float4 _AmbientGroundColor_ReflectionScaleDistanceMul;// Offset:  864 Size:    16
//   float4 _FacettedShadowCastParams;  // Offset:  880 Size:    16 [unused]
//   float4 _FSMClipPlanes;             // Offset:  896 Size:    16 [unused]
//   float2 _ReflectionGIControl;       // Offset:  912 Size:     8
//
// }
//
// cbuffer DeferredLightingCommon
// {
//
//   float4 _LongRangeShadowTileDebug;  // Offset:    0 Size:    16 [unused]
//   float4 _PositionScaleOffset;       // Offset:   16 Size:    16 [unused]
//   float4 _UVToViewSpace;             // Offset:   32 Size:    16
//   float4 _VPosOffset;                // Offset:   48 Size:    16
//   float4 _VPosScale;                 // Offset:   64 Size:    16
//   int _MSAALevel;                    // Offset:   80 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Viewport__ParaboloidReflectionTexture__SampObj__    sampler      NA          NA    0        1
// DeferredLightingBase__DeferredReflectionTexture__SampObj__    sampler      NA          NA    1        1
// Viewport__ParaboloidReflectionTexture__TexObj__    texture  float4          2d    0        1
// DeferredLightingBase__DeferredReflectionTexture__TexObj__    texture  float4        cube    1        1
// DeferredLightingBase__ProbeLightingTextureMS    texture  float4        2dMS    2        1
// DeferredLightingCommon__AlbedoTextureMS    texture  float4        2dMS    3        1
// DeferredLightingCommon__DepthSamplerMS    texture  float4        2dMS    4        1
// DeferredLightingCommon__NormalTextureMS    texture  float4        2dMS    5        1
// DeferredLightingCommon__OtherTextureMS    texture  float4        2dMS    6        1
// Global                            cbuffer      NA          NA    0        1
// Viewport                          cbuffer      NA          NA    1        1
// DeferredLightingCommon            cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
// SV_SampleIndex           0   x           1   SAMPLE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
// Pixel Shader runs at sample frequency
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[3], immediateIndexed
dcl_constantbuffer cb1[58], immediateIndexed
dcl_constantbuffer cb2[5], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texturecube (float,float,float,float) t1
dcl_resource_texture2dms(0) (float,float,float,float) t2
dcl_resource_texture2dms(0) (float,float,float,float) t3
dcl_resource_texture2dms(0) (float,float,float,float) t4
dcl_resource_texture2dms(0) (float,float,float,float) t5
dcl_resource_texture2dms(0) (float,float,float,float) t6
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps_sgv v1.x, sampleIndex
dcl_output o0.xyzw
dcl_temps 7
samplepos r0.xy, t4.xyxx, v1.x
add r0.xy, r0.xyxx, v0.xyxx
mad r0.xy, r0.xyxx, cb2[4].xyxx, cb2[3].xyxx
mad r0.xy, cb2[2].xyxx, r0.xyxx, cb2[2].zwzz
mov r1.y, l(1.000000)
ftoi r2.xy, v0.xyxx
mov r2.zw, l(0,0,0,0)
ldms_indexable(texture2dms)(float,float,float,float) r1.x, r2.xyww, t4.xyzw, v1.x
dp2 r0.z, r1.xyxx, cb1[14].zwzz
dp2 r0.w, r1.xyxx, cb1[15].zwzz
div r0.z, -r0.z, r0.w
mov r1.z, -r0.z
mul r1.xy, r0.xyxx, r1.zzzz
mov r1.w, l(1.000000)
dp4 r0.z, r1.xyzw, cb1[29].xyzw
dp4 r0.x, r1.xyzw, cb1[27].xyzw
dp4 r0.y, r1.xyzw, cb1[28].xyzw
add r1.xyz, -r0.xyzx, cb1[36].xyzx
add r0.xy, r0.xyxx, -cb1[36].xyxx
dp2 r0.x, r0.xyxx, r0.xyxx
mul_sat r0.x, r0.x, cb1[54].w
dp3 r0.y, r1.xyzx, r1.xyzx
rsq r0.y, r0.y
mul r0.yzw, r0.yyyy, r1.xxyz
ldms_indexable(texture2dms)(float,float,float,float) r1.xyzw, r2.xyww, t5.xyzw, v1.x
mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
round_z r1.w, r1.w
mul r3.xyz, r1.wwww, l(0.500000, 0.062500, 0.031250, 0.000000)
dp3 r1.w, r1.xyzx, r1.xyzx
eq r1.w, r1.w, l(0.000000)
movc r1.xyz, r1.wwww, l(0,0,1.000000,0), r1.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r1.xyzx
dp3 r3.w, -r0.yzwy, r4.xyzx
add r3.w, r3.w, r3.w
mad r5.xyz, r4.xyzx, -r3.wwww, -r0.yzwy
dp3_sat r0.y, r4.xyzx, r0.yzwy
max r0.z, r4.z, l(0.000000)
add r0.y, -r0.y, l(1.000000)
mad r5.w, r5.z, l(0.510204), l(0.489796)
dp3 r0.w, r5.xywx, r5.xywx
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, r5.xywx
ge r6.xyz, r3.xyzx, -r3.xyzx
frc r3.xyz, |r3.xyzx|
movc r3.xyz, r6.xyzx, r3.xyzx, -r3.xyzx
eq r0.w, r3.x, l(0.500000)
ge r3.xy, r3.yzyy, l(0.500000, 0.500000, 0.000000, 0.000000)
movc r4.xyz, r0.wwww, r4.xyzx, r5.xyzx
add r0.w, -r4.z, l(0.100000)
mul_sat r0.w, r0.w, l(2.500000)
mul r0.w, r0.w, l(0.300000)
mul r5.z, r0.z, r0.w
mov r5.xy, l(0,0,0,0)
add r5.xyz, r4.xyzx, r5.xyzx
dp3 r0.z, r5.xyzx, r5.xyzx
rsq r0.z, r0.z
mul r5.xyw, r0.zzzz, r5.xyxz
lt r0.z, l(0.000000), r5.z
mad r0.w, r5.w, l(2.000000), l(2.000000)
div r5.xy, r5.yxyy, r0.wwww
mov r5.zw, -r5.xxxx
dp2 r0.w, r5.yzyy, r5.ywyy
mad_sat r5.yz, r5.xxyx, l(0.000000, -1.000000, 1.000000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
sqrt r0.w, r0.w
ldms_indexable(texture2dms)(float,float,float,float) r6.xyz, r2.xyww, t6.xyzw, v1.x
mad r3.zw, r6.yyyy, l(0.000000, 0.000000, -17.777779, 8.888889), l(0.000000, 0.000000, -2.222222, 1.111111)
mad_sat r0.w, r0.w, r3.z, r3.w
movc r0.w, r3.x, r0.w, l(1.000000)
movc r3.z, r3.x, l(0), l(0.500000)
mad r5.x, r5.y, l(0.500000), r3.z
mad r3.z, r6.y, -cb1[37].w, cb1[37].w
sample_l_indexable(texture2d)(float,float,float,float) r5.xyz, r5.xzxx, t0.xyzw, s0, r3.z
mul r5.xyzw, r0.wwww, r5.xyzz
not r0.w, r3.x
or r0.z, r0.w, r0.z
and r5.xyzw, r5.xyzw, r0.zzzz
mad r1.xyz, -r1.xyzx, r1.wwww, r4.xyzx
mul r0.xzw, r0.xxxx, r1.xxyz
mad r0.xzw, r0.xxzw, cb1[53].wwww, r4.xxyz
mad r1.x, r6.y, -cb1[36].w, cb1[36].w
sample_l_indexable(texturecube)(float,float,float,float) r1.xyzw, r0.xzwx, t1.xyzw, s1, r1.x
add r0.x, -r1.w, l(1.000000)
mul r4.xyzw, r0.xxxx, r5.xyww
mul r4.xyzw, r4.xyzw, cb1[47].wwww
mad r1.xyzw, r1.xyzz, cb0[2].wwww, r4.xyzw
movc r1.xyzw, r3.xxxx, r5.xyzw, r1.xyzw
ldms_indexable(texture2dms)(float,float,float,float) r0.xzw, r2.xyzw, t2.xwyz, v1.x
ldms_indexable(texture2dms)(float,float,float,float) r2.xyzw, r2.xyww, t3.xyzw, v1.x
dp3_sat r3.z, r0.xzwx, l(0.308600, 0.609400, 0.082000, 0.000000)
add r3.z, r3.z, l(-1.000000)
movc r3.x, r3.x, cb1[57].y, cb1[57].x
mad r3.x, r3.x, r3.z, l(1.000000)
mul r1.xyzw, r1.xyzw, r3.xxxx
mul r3.x, r0.y, r0.y
mul r3.x, r3.x, r3.x
mul r0.y, r0.y, r3.x
max r3.x, r6.x, r6.y
add r3.x, -r6.x, r3.x
mad r0.y, r3.x, r0.y, r6.x
mul r1.xyzw, r0.yyyy, r1.xyzw
mul r1.xyzw, r6.yyyy, r1.xyzw
mul r0.y, r2.w, r6.z
mul r1.xyzw, r0.yyyy, r1.xyzw
mul r1.xyzw, r2.wwww, r1.xyzw
mul r2.xyzw, r2.wwww, r2.xyzz
and r1.xyzw, r1.xyzw, r3.yyyy
mad r0.xyzw, r2.xyzw, r0.xzww, r1.xyzw
mul o0.xyzw, r0.xyzw, cb1[38].wwww
ret 
// Approximately 111 instruction slots used
 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
