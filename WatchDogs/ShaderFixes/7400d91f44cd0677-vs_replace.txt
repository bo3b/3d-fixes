//Smoke
cbuffer Viewport : register(b0)
{
  float4x4 _ViewRotProjectionMatrix : packoffset(c0);
  float4x4 _ViewProjectionMatrix : packoffset(c4);
  float4x4 _ProjectionMatrix : packoffset(c8);
  float4x4 _InvProjectionMatrix : packoffset(c12);
  float4x4 _InvProjectionMatrixDepth : packoffset(c16);
  float4x4 _DepthTextureTransform : packoffset(c20);
  float4x3 _ViewMatrix : packoffset(c24);
  float4x3 _InvViewMatrix : packoffset(c27);
  float4x4 _PreviousViewProjectionMatrix : packoffset(c30);
  float4 _CameraDistances : packoffset(c34);
  float4 _ViewportSize : packoffset(c35);
  float4 _CameraPosition_MaxStaticReflectionMipIndex : packoffset(c36);
  float4 _CameraDirection_MaxParaboloidReflectionMipIndex : packoffset(c37);
  float4 _ViewPoint_ExposureScale : packoffset(c38);
  float4 _FogColorVector_ExposedWhitePointOverExposureScale : packoffset(c39);
  float3 _SideFogColor : packoffset(c40);
  float3 _SunFogColorDelta : packoffset(c41);
  float3 _OppositeFogColorDelta : packoffset(c42);
  float4 _FogValues0 : packoffset(c43);
  float4 _FogValues1 : packoffset(c44);
  float4 _CameraNearPlaneSize : packoffset(c45);
  float4 _UncompressDepthWeights_ShadowProjDepthMinValue : packoffset(c46);
  float4 _UncompressDepthWeightsWS_ReflectionFadeTarget : packoffset(c47);
  float4 _WorldAmbientColorParams0 : packoffset(c48);
  float4 _WorldAmbientColorParams1 : packoffset(c49);
  float4 _WorldAmbientColorParams2 : packoffset(c50);
  float4 _GlobalWorldTextureParams : packoffset(c51);
  float4 _CullingCameraPosition_OneOverAutoExposureScale : packoffset(c52);
  float4 _AmbientSkyColor_ReflectionScaleStrength : packoffset(c53);
  float4 _AmbientGroundColor_ReflectionScaleDistanceMul : packoffset(c54);
  float4 _FacettedShadowCastParams : packoffset(c55);
  float4 _FSMClipPlanes : packoffset(c56);
  float2 _ReflectionGIControl : packoffset(c57);
}

cbuffer LightProbes : register(b1)
{
  float4 _InteriorIrradianceRadianceScale : packoffset(c0);
  float4x4 _LocalToWorldMatrixWithFeatherMargin : packoffset(c1);
  float4x4 _LocalToWorldMatrixWithoutFeatherMargin : packoffset(c5);
  float4 _MiscDataToTidy : packoffset(c9);
  float4x4 _ScreenToLocalMatrix : packoffset(c10);
  float4x4 _WorldToLocalMatrix : packoffset(c14);
  float3 _InteriorAmbientLightInfo : packoffset(c18);
  float _LinearGridResCutoff : packoffset(c18.w);
  float3 _InteriorUVWBias : packoffset(c19);
  float _MaxLinearSliceIndex : packoffset(c19.w);
  float3 _InteriorUVWScale : packoffset(c20);
  float3 _RcpFeatherWidthsInBasicUVWSpace : packoffset(c21);
  float3 _VolumeCentre : packoffset(c22);
  float3 _VolumeDimensions : packoffset(c23);
  float2 _IrradianceSHInfo : packoffset(c24);
  float2 _MaxDepthBoundsInnerOuter : packoffset(c24.z);
  float2 _RadianceSHInfo : packoffset(c25);
  float2 _SkySHInfo : packoffset(c25.z);
}

cbuffer LightProbesGlobal : register(b2)
{
  float4x4 _BoxMatrix : packoffset(c0);
  float4 _LightProbesMultipliers : packoffset(c4);
  float4 _MinAmbient : packoffset(c5);
  float4 _ProbeUVToViewSpace : packoffset(c6);
  float4 _SH_B : packoffset(c7);
  float4 _SH_G : packoffset(c8);
  float4 _SH_R : packoffset(c9);
  float4x4 _ScreenToWorldMatrix : packoffset(c10);
  float4x4 _ViewProjectionMatrixWithZBias : packoffset(c14);
  float4 _VolumeCentreGlobal : packoffset(c18);
  float4 _WorldEdgeFadeParams : packoffset(c19);
  float3 _DefaultProbeAverageColor : packoffset(c20);
  float _CenterBaseZ : packoffset(c20.w);
  float3 _DefaultProbeLowerColor : packoffset(c21);
  float _DrawDistance : packoffset(c21.w);
  float3 _DefaultProbeUpperColor : packoffset(c22);
  int _ProbeMSAALevel : packoffset(c22.w);
  float2 _LocalLightsMultipliersGlobal : packoffset(c23);
  float2 _RelightingMultiplier : packoffset(c23.z);
}

cbuffer Emitter : register(b3)
{
  float4 _ParticleLightAttenuations[4] : packoffset(c0);
  float4 _ParticleLightColors[4] : packoffset(c4);
  float4 _ParticleLightDirections[4] : packoffset(c8);
  float4 _ParticleLightPositions[4] : packoffset(c12);
  float4 _ParticleSpotParams[4] : packoffset(c16);
  float4x4 _ParticleSpotProjMatrix : packoffset(c20);
  float4 _ParticleSpotShadowTextureSize : packoffset(c24);
  float4 _ParticleSpotVideoUnpack[8] : packoffset(c25);
  float4 _RainColor : packoffset(c33);
  float4x4 _ShadowOcclusionProjMatrix : packoffset(c34);
  float4 _SoftClipPlane : packoffset(c38);
  float4 _UniformFog : packoffset(c39);
  float3 _TweakedLightDirection : packoffset(c40);
  float _OneOverSoftRange : packoffset(c40.w);
  float2 _AlphaScaleOffset : packoffset(c41);
  float _ParticleZOffset : packoffset(c41.z);
  float _QuadTessellationFactor : packoffset(c41.w);
  float2 _FarSoftDistanceRange : packoffset(c42);
  int _ParticleLightCount : packoffset(c42.z);
}

cbuffer SceneParticleAttributes : register(b4)
{
  float4 _DistortionSpeedTiling : packoffset(c0);
  float4 _OpacityCompensationKeyFrames[5] : packoffset(c1);
  float _DiffuseLightingPowerExponent : packoffset(c6);
  float _DistortionStrength : packoffset(c6.y);
  float _HDRMul : packoffset(c6.z);
  float _Translucency : packoffset(c6.w);
}
SamplerState Viewport__ParaboloidReflectionTexture__SampObj___s : register(s0);
SamplerState LightProbes__FloorCeilingTexture__SampObj___s : register(s1);
SamplerState LightProbes__VolumeTextureB__SampObj___s : register(s2);
SamplerState LightProbes__VolumeTextureG__SampObj___s : register(s3);
SamplerState LightProbes__VolumeTextureR__SampObj___s : register(s4);
Texture2D<float4> Viewport__ParaboloidReflectionTexture__TexObj__ : register(t0);
Texture2D<float4> LightProbes__FloorCeilingTexture__TexObj__ : register(t1);
Texture3D<float4> LightProbes__VolumeTextureB__TexObj__ : register(t2);
Texture3D<float4> LightProbes__VolumeTextureG__TexObj__ : register(t3);
Texture3D<float4> LightProbes__VolumeTextureR__TexObj__ : register(t4);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : position0,
  float4 v1 : color1,
  float4 v2 : texcoord4,
  float4 v3 : texcoord5,
  float4 v4 : texcoord6,
  float4 v5 : texcoord7,
  out float4 o0 : TEXCOORD0,
  out float4 o1 : TEXCOORD1,
  out float4 o2 : TEXCOORD2,
  out float4 o3 : TEXCOORD3,
  out float3 o4 : TEXCOORD4,
  out float2 o5 : TEXCOORD5,
  out float4 o6 : SV_Position0)
{
  const float4 icb[] = { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} };
  float4 r0,r1,r2,r3,r4,r5,r6,r7;
  uint4 bitmask;
  r0.xyz = v3.xyz * v0.yyy;
  r0.xyz = v0.xxx * v2.xyz + r0.xyz;
  r0.xyz = v4.xyz + r0.xyz;
  r1.x = _InvViewMatrix._m30 + -r0.x;
  r1.y = _InvViewMatrix._m31 + -r0.y;
  r1.z = _InvViewMatrix._m32 + -r0.z;
  r0.w = dot(r1.xyz, r1.xyz);
  r0.w = rsqrt(r0.w);
  r1.xyz = r1.xyz * r0.www;
  r0.xyz = r1.xyz * _ParticleZOffset + r0.xyz;
  sincos(v4.w, r1.x, r2.x);
  r3.x = -r1.x;
  r1.yz = float2(-5.000000e-001,-5.000000e-001) + v0.zw;
  r3.y = r2.x;
  r2.x = dot(r1.zy, r3.xy);
  r3.z = r1.x;
  r2.y = dot(r1.zy, r3.yz);
  r1.xy = float2(5.000000e-001,5.000000e-001) + r2.xy;
  o5.xy = r1.xy * v5.zw + v5.xy;
  o0.w = v1.w * _AlphaScaleOffset.x + _AlphaScaleOffset.y;
  r0.w = 1.000000000e+000;
  r1.x = dot(r0.xyzw, _ViewProjectionMatrix._m00_m10_m20_m30);
  r1.y = dot(r0.xyzw, _ViewProjectionMatrix._m01_m11_m21_m31);
  r1.z = dot(r0.xyzw, _ViewProjectionMatrix._m02_m12_m22_m32);
  r1.w = dot(r0.xyzw, _ViewProjectionMatrix._m03_m13_m23_m33);
  
float4 stereo = StereoParams.Load(0);
float4 r21 = r1;
r1.x += stereo.x*(r1.w - stereo.y);

  r2.xyz = v1.zyx * v1.zyx;
  r3.xyz = -v4.xyz + r0.xyz;
  r2.w = dot(r3.xyz, r3.xyz);
  r2.w = sqrt(r2.w);
  r3.xyz = r3.xyz / r2.www;
  r4.xyzw = float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
  r3.w = 0.000000000e+000;
  while (true) {
  r5.x = (int)r3.w >= (int)_ParticleLightCount;
  if (r5.x != 0) break;
  r5.xyz = _ParticleLightPositions[r3.w].xyz + -v4.xyz;
  r5.w = dot(r5.xyz, r5.xyz);
  r5.w = sqrt(r5.w);
  r5.xyz = r5.xyz / r5.www;
  r6.xyz = _ParticleLightPositions[r3.w].xyz + -r0.xyz;
  r6.w = dot(r6.xyz, r6.xyz);
  r7.x = rsqrt(r6.w);
  r6.xyz = r7.xxx * r6.xyz;
  r5.w = r5.w / r2.w;
  r5.w = min(r5.w, 1.000000000e+000);
  r5.w = 1.000000000e+000 + -r5.w;
  r5.x = dot(r5.xyz, r3.xyz);
  r5.x = saturate(r5.x * 5.857999921e-001 + 5.857999921e-001);
  r5.y = 0.000000000e+000 < _ParticleLightAttenuations[r3.w].x;
  r5.z = sqrt(r6.w);
  r5.z = 1.000000000e+000 + r5.z;
  r5.z = r5.z * r5.z;
  r5.z = 1.000000e+000 / r5.z;
  r5.y = r5.y ? r5.z : r6.w;
  r5.y = saturate(r5.y * _ParticleLightAttenuations[r3.w].y + _ParticleLightAttenuations[r3.w].z);
  r5.z = dot(-r6.xyz, _ParticleLightDirections[r3.w].xyz);
  r6.x = saturate(r5.z * _ParticleSpotParams[r3.w].x + _ParticleSpotParams[r3.w].y);
  r5.z = r5.z < _ParticleLightDirections[r3.w].w;
  r5.x = r5.x * r5.y;
  r5.x = r5.x * r6.x;
  r5.x = r5.z ? 0.000000000e+000 : r5.x;
  r5.x = _ParticleLightColors[r3.w].w * r5.w + r5.x;
  r4.xyzw = icb[r3.w].xyzw * r5.xxxx + r4.xyzw;
  r3.w = (int)r3.w + 1;
  }
  o2.xyzw = r4.xyzw;
  r3.x = dot(r0.xyzw, _WorldToLocalMatrix._m00_m10_m20_m30);
  r3.y = dot(r0.xyzw, _WorldToLocalMatrix._m01_m11_m21_m31);
  r0.w = saturate(dot(r0.xyzw, _WorldToLocalMatrix._m02_m12_m22_m32));
  r3.xy = float2(5.000000e-001,5.000000e-001) + r3.xy;
  r4.xyz = float3(5.000000e-001,5.000000e-001,5.000000e-001) / _MiscDataToTidy.xyz;
  r3.xy = r4.xy + r3.xy;
  r4.xyw = float3(-1.000000e+000,-1.000000e+000,-1.000000e+000) + _MiscDataToTidy.xyz;
  r3.zw = r4.xy / _MiscDataToTidy.xy;
  r3.xy = r3.xy * r3.zw;
  r2.w = 0.000000000e+000 < _LinearGridResCutoff;
  r4.x = saturate(r0.w / _LinearGridResCutoff);
  r4.x = _MaxLinearSliceIndex * r4.x;
  r2.w = r2.w ? r4.x : 0;
  r4.x = _LinearGridResCutoff < 1.000000000e+000;
  r0.w = saturate(-_LinearGridResCutoff + r0.w);
  r4.y = 1.000000000e+000 + -_LinearGridResCutoff;
  r0.w = r0.w / r4.y;
  r0.w = log2(r0.w);
  r0.w = _MiscDataToTidy.w * r0.w;
  r0.w = exp2(r0.w);
  r4.y = -_MaxLinearSliceIndex + r4.w;
  r0.w = r4.y * r0.w;
  r0.w = (int)r0.w & (int)r4.x;
  r0.w = r2.w + r0.w;
  r2.w = r0.w / _MiscDataToTidy.z;
  r4.x = floor(r0.w);
  r4.x = r4.x / _MiscDataToTidy.z;
  r0.w = ceil(r0.w);
  r0.w = r0.w / _MiscDataToTidy.z;
  r4.y = saturate(r3.y);
  r4.y = r4.y / _MiscDataToTidy.z;
  r3.z = r4.y + r4.x;
  r4.yw = LightProbes__FloorCeilingTexture__TexObj__.SampleLevel(LightProbes__FloorCeilingTexture__SampObj___s, r3.xz, 0.000000000e+000).xy;
  r5.xy = float2(1.000000e+000,1.000000e+000) + -r4.yw;
  r3.z = r5.y * 2.500000000e-001 + r4.w;
  r3.z = min(r3.z, r5.x);
  r4.y = r4.y / _MiscDataToTidy.z;
  r4.y = r4.x + r4.y;
  r2.w = -r4.y + r2.w;
  r2.w = _MiscDataToTidy.z * r2.w;
  r2.w = saturate(r2.w / r3.z);
  r0.w = r0.w + -r4.x;
  r0.w = r2.w * r0.w + r4.x;
  r3.w = r0.w + r4.z;
  r4.xyzw = LightProbes__VolumeTextureR__TexObj__.SampleLevel(LightProbes__VolumeTextureR__SampObj___s, r3.xyw, 0.000000000e+000).xyzw;
  r5.xyzw = LightProbes__VolumeTextureG__TexObj__.SampleLevel(LightProbes__VolumeTextureG__SampObj___s, r3.xyw, 0.000000000e+000).xyzw;
  r3.xyzw = LightProbes__VolumeTextureB__TexObj__.SampleLevel(LightProbes__VolumeTextureB__SampObj___s, r3.xyw, 0.000000000e+000).xyzw;
  r0.w = -3.000000000e+001 + _DrawDistance;
  r6.xyz = -_ViewPoint_ExposureScale.xyz + r0.xyz;
  r2.w = dot(r6.xy, r6.xy);
  r2.w = sqrt(r2.w);
  r2.w = max(abs(r6.z), r2.w);
  r2.w = r2.w + -r0.w;
  r0.w = _DrawDistance + -r0.w;
  r0.w = saturate(r2.w / r0.w);
  r2.w = _VolumeDimensions.z + _VolumeCentre.z;
  r2.w = r2.w + -r0.z;
  r2.w = saturate(3.333333507e-002 * r2.w);
  r2.w = 1.000000000e+000 + -r2.w;
  r0.w = max(r0.w, r2.w);
  r6.xy = abs(r0.xy) * _WorldEdgeFadeParams.xy + float2(-1.000000e+000,-1.000000e+000);
  r6.xy = saturate(_WorldEdgeFadeParams.zw * r6.xy);
  r2.w = max(r6.y, r6.x);
  r0.w = max(r0.w, r2.w);
  r6.xyzw = _SH_R.xyzw + -r4.xyzw;
  r4.xyzw = r0.wwww * r6.xyzw + r4.xyzw;
  r6.xyzw = _SH_G.xyzw + -r5.xyzw;
  r5.xyzw = r0.wwww * r6.xyzw + r5.xyzw;
  r6.xyzw = _SH_B.xyzw + -r3.xyzw;
  r3.xyzw = r0.wwww * r6.xyzw + r3.xyzw;
  r4.xyzw = max(r4.xyzw, _MinAmbient.xxxw);
  r5.xyzw = max(r5.xyzw, _MinAmbient.yyyw);
  r3.xyzw = max(r3.xywz, _MinAmbient.zzwz);
  r4.xyz = r5.xyz + r4.xyz;
  r4.xyz = r4.xyz + r3.xyw;
  r3.x = r4.w;
  r3.y = r5.w;
  r3.xyz = r4.xyz + r3.xyz;
  o4.xyz = float3(2.500000e-001,2.500000e-001,2.500000e-001) * r3.xyz;
  r0.w = 0.000000000e+000 >= _UncompressDepthWeightsWS_ReflectionFadeTarget.w;
  r0.w = r0.w ? -1.000000000e+001 : -1.000000000e+004;
  r0.w = r0.z >= r0.w;
  r3.xyz = -_CameraPosition_MaxStaticReflectionMipIndex.xyz + r0.xyz;
  r0.x = dot(r3.xyz, r3.xyz);
  r0.y = rsqrt(r0.x);
  r0.y = r3.z * r0.y;
  r3.w = max(r3.z, 0.000000000e+000);
  r0.z = dot(r3.xyw, r3.xyw);
  r0.z = rsqrt(r0.z);
  r4.xyz = r3.xyw * r0.zzz;
  r5.xyz = Viewport__ParaboloidReflectionTexture__TexObj__.SampleLevel(Viewport__ParaboloidReflectionTexture__SampObj___s, float2(7.500000e-001,5.000000e-001), 6.000000000e+000).xyz;
  r0.z = r4.z * 2.000000000e+000 + 2.000000000e+000;
  r4.xy = r4.yx / r0.zz;
  r0.z = 5.000000000e-001 + -r4.x;
  r4.y = saturate(5.000000000e-001 + r4.y);
  r4.x = saturate(max(r0.z, 1.250000000e-001));
  r4.z = r4.x * 5.000000000e-001 + 5.000000000e-001;
  r4.xyz = Viewport__ParaboloidReflectionTexture__TexObj__.SampleLevel(Viewport__ParaboloidReflectionTexture__SampObj___s, r4.zy, 6.000000000e+000).xyz;
  r5.xyz = r5.xyz + -r4.xyz;
  r4.xyz = abs(r0.yyy) * r5.xyz + r4.xyz;
  r4.xyz = _WorldAmbientColorParams2.xyz * r4.xyz;
  r4.xyz = _WorldAmbientColorParams1.www * r4.xyz;
  r0.x = sqrt(r0.x);
  r0.xy = _WorldAmbientColorParams0.zw * r0.xx;
  r0.z = 9.999999776e-003 < abs(r3.z);
  r5.xy = float2(1.000000e+000,-1.000000e+000) * r3.zz;
  r5.xy = _WorldAmbientColorParams1.xy * r5.xy;
  r5.zw = float2(-1.442695e+000,-1.442695e+000) * r5.xy;
  r5.zw = exp2(r5.zw);
  r5.zw = float2(1.000000e+000,1.000000e+000) + -r5.zw;
  r5.xy = r5.zw / r5.xy;
  r5.xy = r5.xy * r0.xy;
  r0.xy = r0.zz ? r5.xy : r0.xy;
  r0.xy = -_WorldAmbientColorParams0.xy * r0.xy;
  r0.xy = float2(1.442695e+000,1.442695e+000) * r0.xy;
  r0.xy = exp2(r0.xy);
  r0.xy = float2(1.000000e+000,1.000000e+000) + -r0.xy;
  r0.x = max(r0.y, r0.x);
  r0.x = log2(r0.x);
  r0.x = _WorldAmbientColorParams2.w * r0.x;
  r0.x = exp2(r0.x);
  r4.w = min(r0.x, _WorldAmbientColorParams1.z);
  r0.xyzw = r0.wwww ? r4.xyzw : float4(0.000000e+000,0.000000e+000,0.000000e+000,1.000000e+000);
  r4.xyz = r0.xyz * r0.www;
  r4.w = 1.000000000e+000 + -r0.w;
  o1.xyzw = _ViewPoint_ExposureScale.wwww * r4.xyzw;
  o0.xyz = saturate(_HDRMul * r2.xyz);
  o3.x = dot(r1.xyzw, _DepthTextureTransform._m00_m10_m20_m30);
  o3.y = dot(r1.xyzw, _DepthTextureTransform._m01_m11_m21_m31);
  o3.z = dot(r1.xyzw, _DepthTextureTransform._m03_m13_m23_m33);
  r0.x = dot(_CameraDirection_MaxParaboloidReflectionMipIndex.xyz, r3.xyz);
  o3.w = _CameraDistances.w * r0.x;
o6.xyzw = r21.xyzw;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4x4 _ViewRotProjectionMatrix; // Offset:    0 Size:    64 [unused]
//   float4x4 _ViewProjectionMatrix;    // Offset:   64 Size:    64
//   float4x4 _ProjectionMatrix;        // Offset:  128 Size:    64 [unused]
//   float4x4 _InvProjectionMatrix;     // Offset:  192 Size:    64 [unused]
//   float4x4 _InvProjectionMatrixDepth;// Offset:  256 Size:    64 [unused]
//   float4x4 _DepthTextureTransform;   // Offset:  320 Size:    64
//   float4x3 _ViewMatrix;              // Offset:  384 Size:    48 [unused]
//   float4x3 _InvViewMatrix;           // Offset:  432 Size:    48
//   float4x4 _PreviousViewProjectionMatrix;// Offset:  480 Size:    64 [unused]
//   float4 _CameraDistances;           // Offset:  544 Size:    16
//   float4 _ViewportSize;              // Offset:  560 Size:    16 [unused]
//   float4 _CameraPosition_MaxStaticReflectionMipIndex;// Offset:  576 Size:    16
//   float4 _CameraDirection_MaxParaboloidReflectionMipIndex;// Offset:  592 Size:    16
//   float4 _ViewPoint_ExposureScale;   // Offset:  608 Size:    16
//   float4 _FogColorVector_ExposedWhitePointOverExposureScale;// Offset:  624 Size:    16 [unused]
//   float3 _SideFogColor;              // Offset:  640 Size:    12 [unused]
//   float3 _SunFogColorDelta;          // Offset:  656 Size:    12 [unused]
//   float3 _OppositeFogColorDelta;     // Offset:  672 Size:    12 [unused]
//   float4 _FogValues0;                // Offset:  688 Size:    16 [unused]
//   float4 _FogValues1;                // Offset:  704 Size:    16 [unused]
//   float4 _CameraNearPlaneSize;       // Offset:  720 Size:    16 [unused]
//   float4 _UncompressDepthWeights_ShadowProjDepthMinValue;// Offset:  736 Size:    16 [unused]
//   float4 _UncompressDepthWeightsWS_ReflectionFadeTarget;// Offset:  752 Size:    16
//   float4 _WorldAmbientColorParams0;  // Offset:  768 Size:    16
//   float4 _WorldAmbientColorParams1;  // Offset:  784 Size:    16
//   float4 _WorldAmbientColorParams2;  // Offset:  800 Size:    16
//   float4 _GlobalWorldTextureParams;  // Offset:  816 Size:    16 [unused]
//   float4 _CullingCameraPosition_OneOverAutoExposureScale;// Offset:  832 Size:    16 [unused]
//   float4 _AmbientSkyColor_ReflectionScaleStrength;// Offset:  848 Size:    16 [unused]
//   float4 _AmbientGroundColor_ReflectionScaleDistanceMul;// Offset:  864 Size:    16 [unused]
//   float4 _FacettedShadowCastParams;  // Offset:  880 Size:    16 [unused]
//   float4 _FSMClipPlanes;             // Offset:  896 Size:    16 [unused]
//   float2 _ReflectionGIControl;       // Offset:  912 Size:     8 [unused]
//
// }
//
// cbuffer LightProbes
// {
//
//   float4 _InteriorIrradianceRadianceScale;// Offset:    0 Size:    16 [unused]
//   float4x4 _LocalToWorldMatrixWithFeatherMargin;// Offset:   16 Size:    64 [unused]
//   float4x4 _LocalToWorldMatrixWithoutFeatherMargin;// Offset:   80 Size:    64 [unused]
//   float4 _MiscDataToTidy;            // Offset:  144 Size:    16
//   float4x4 _ScreenToLocalMatrix;     // Offset:  160 Size:    64 [unused]
//   float4x4 _WorldToLocalMatrix;      // Offset:  224 Size:    64
//   float3 _InteriorAmbientLightInfo;  // Offset:  288 Size:    12 [unused]
//   float _LinearGridResCutoff;        // Offset:  300 Size:     4
//   float3 _InteriorUVWBias;           // Offset:  304 Size:    12 [unused]
//   float _MaxLinearSliceIndex;        // Offset:  316 Size:     4
//   float3 _InteriorUVWScale;          // Offset:  320 Size:    12 [unused]
//   float3 _RcpFeatherWidthsInBasicUVWSpace;// Offset:  336 Size:    12 [unused]
//   float3 _VolumeCentre;              // Offset:  352 Size:    12
//   float3 _VolumeDimensions;          // Offset:  368 Size:    12
//   float2 _IrradianceSHInfo;          // Offset:  384 Size:     8 [unused]
//   float2 _MaxDepthBoundsInnerOuter;  // Offset:  392 Size:     8 [unused]
//   float2 _RadianceSHInfo;            // Offset:  400 Size:     8 [unused]
//   float2 _SkySHInfo;                 // Offset:  408 Size:     8 [unused]
//
// }
//
// cbuffer LightProbesGlobal
// {
//
//   float4x4 _BoxMatrix;               // Offset:    0 Size:    64 [unused]
//   float4 _LightProbesMultipliers;    // Offset:   64 Size:    16 [unused]
//   float4 _MinAmbient;                // Offset:   80 Size:    16
//   float4 _ProbeUVToViewSpace;        // Offset:   96 Size:    16 [unused]
//   float4 _SH_B;                      // Offset:  112 Size:    16
//   float4 _SH_G;                      // Offset:  128 Size:    16
//   float4 _SH_R;                      // Offset:  144 Size:    16
//   float4x4 _ScreenToWorldMatrix;     // Offset:  160 Size:    64 [unused]
//   float4x4 _ViewProjectionMatrixWithZBias;// Offset:  224 Size:    64 [unused]
//   float4 _VolumeCentreGlobal;        // Offset:  288 Size:    16 [unused]
//   float4 _WorldEdgeFadeParams;       // Offset:  304 Size:    16
//   float3 _DefaultProbeAverageColor;  // Offset:  320 Size:    12 [unused]
//   float _CenterBaseZ;                // Offset:  332 Size:     4 [unused]
//   float3 _DefaultProbeLowerColor;    // Offset:  336 Size:    12 [unused]
//   float _DrawDistance;               // Offset:  348 Size:     4
//   float3 _DefaultProbeUpperColor;    // Offset:  352 Size:    12 [unused]
//   int _ProbeMSAALevel;               // Offset:  364 Size:     4 [unused]
//   float2 _LocalLightsMultipliersGlobal;// Offset:  368 Size:     8 [unused]
//   float2 _RelightingMultiplier;      // Offset:  376 Size:     8 [unused]
//
// }
//
// cbuffer Emitter
// {
//
//   float4 _ParticleLightAttenuations[4];// Offset:    0 Size:    64
//   float4 _ParticleLightColors[4];    // Offset:   64 Size:    64
//   float4 _ParticleLightDirections[4];// Offset:  128 Size:    64
//   float4 _ParticleLightPositions[4]; // Offset:  192 Size:    64
//   float4 _ParticleSpotParams[4];     // Offset:  256 Size:    64
//   float4x4 _ParticleSpotProjMatrix;  // Offset:  320 Size:    64 [unused]
//   float4 _ParticleSpotShadowTextureSize;// Offset:  384 Size:    16 [unused]
//   float4 _ParticleSpotVideoUnpack[8];// Offset:  400 Size:   128 [unused]
//   float4 _RainColor;                 // Offset:  528 Size:    16 [unused]
//   float4x4 _ShadowOcclusionProjMatrix;// Offset:  544 Size:    64 [unused]
//   float4 _SoftClipPlane;             // Offset:  608 Size:    16 [unused]
//   float4 _UniformFog;                // Offset:  624 Size:    16 [unused]
//   float3 _TweakedLightDirection;     // Offset:  640 Size:    12 [unused]
//   float _OneOverSoftRange;           // Offset:  652 Size:     4 [unused]
//   float2 _AlphaScaleOffset;          // Offset:  656 Size:     8
//   float _ParticleZOffset;            // Offset:  664 Size:     4
//   float _QuadTessellationFactor;     // Offset:  668 Size:     4 [unused]
//   float2 _FarSoftDistanceRange;      // Offset:  672 Size:     8 [unused]
//   int _ParticleLightCount;           // Offset:  680 Size:     4
//
// }
//
// cbuffer SceneParticleAttributes
// {
//
//   float4 _DistortionSpeedTiling;     // Offset:    0 Size:    16 [unused]
//   float4 _OpacityCompensationKeyFrames[5];// Offset:   16 Size:    80 [unused]
//   float _DiffuseLightingPowerExponent;// Offset:   96 Size:     4 [unused]
//   float _DistortionStrength;         // Offset:  100 Size:     4 [unused]
//   float _HDRMul;                     // Offset:  104 Size:     4
//   float _Translucency;               // Offset:  108 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Viewport__ParaboloidReflectionTexture__SampObj__    sampler      NA          NA    0        1
// LightProbes__FloorCeilingTexture__SampObj__    sampler      NA          NA    1        1
// LightProbes__VolumeTextureB__SampObj__    sampler      NA          NA    2        1
// LightProbes__VolumeTextureG__SampObj__    sampler      NA          NA    3        1
// LightProbes__VolumeTextureR__SampObj__    sampler      NA          NA    4        1
// Viewport__ParaboloidReflectionTexture__TexObj__    texture  float4          2d    0        1
// LightProbes__FloorCeilingTexture__TexObj__    texture  float4          2d    1        1
// LightProbes__VolumeTextureB__TexObj__    texture  float4          3d    2        1
// LightProbes__VolumeTextureG__TexObj__    texture  float4          3d    3        1
// LightProbes__VolumeTextureR__TexObj__    texture  float4          3d    4        1
// Viewport                          cbuffer      NA          NA    0        1
// LightProbes                       cbuffer      NA          NA    1        1
// LightProbesGlobal                 cbuffer      NA          NA    2        1
// Emitter                           cbuffer      NA          NA    3        1
// SceneParticleAttributes           cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// position                 0   xyzw        0     NONE   float   xyzw
// color                    1   xyzw        1     NONE   float   xyzw
// texcoord                 4   xyzw        2     NONE   float   xyz 
// texcoord                 5   xyzw        3     NONE   float   xyz 
// texcoord                 6   xyzw        4     NONE   float   xyzw
// texcoord                 7   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyz         4     NONE   float   xyz 
// TEXCOORD                 5   xy          5     NONE   float   xy  
// SV_Position              0   xyzw        6      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[51], immediateIndexed
dcl_constantbuffer cb1[24], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[43], dynamicIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xyz
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyz
dcl_output o5.xy
dcl_output_siv o6.xyzw, position
dcl_temps 8
mul r0.xyz, v0.yyyy, v3.xyzx
mad r0.xyz, v0.xxxx, v2.xyzx, r0.xyzx
add r0.xyz, r0.xyzx, v4.xyzx
add r1.x, -r0.x, cb0[27].w
add r1.y, -r0.y, cb0[28].w
add r1.z, -r0.z, cb0[29].w
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mad r0.xyz, r1.xyzx, cb3[41].zzzz, r0.xyzx
sincos r1.x, r2.x, v4.w
mov r3.x, -r1.x
add r1.yz, v0.zzwz, l(0.000000, -0.500000, -0.500000, 0.000000)
mov r3.y, r2.x
dp2 r2.x, r1.zyzz, r3.xyxx
mov r3.z, r1.x
dp2 r2.y, r1.zyzz, r3.yzyy
add r1.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad o5.xy, r1.xyxx, v5.zwzz, v5.xyxx
mad o0.w, v1.w, cb3[41].x, cb3[41].y
mov r0.w, l(1.000000)
dp4 r1.x, r0.xyzw, cb0[4].xyzw
dp4 r1.y, r0.xyzw, cb0[5].xyzw
dp4 r1.z, r0.xyzw, cb0[6].xyzw
dp4 r1.w, r0.xyzw, cb0[7].xyzw
mul r2.xyz, v1.zyxz, v1.zyxz
add r3.xyz, r0.xyzx, -v4.xyzx
dp3 r2.w, r3.xyzx, r3.xyzx
sqrt r2.w, r2.w
div r3.xyz, r3.xyzx, r2.wwww
mov r4.xyzw, l(0,0,0,0)
mov r3.w, l(0)
loop 
  ige r5.x, r3.w, cb3[42].z
  breakc_nz r5.x
  add r5.xyz, -v4.xyzx, cb3[r3.w + 12].xyzx
  dp3 r5.w, r5.xyzx, r5.xyzx
  sqrt r5.w, r5.w
  div r5.xyz, r5.xyzx, r5.wwww
  add r6.xyz, -r0.xyzx, cb3[r3.w + 12].xyzx
  dp3 r6.w, r6.xyzx, r6.xyzx
  rsq r7.x, r6.w
  mul r6.xyz, r6.xyzx, r7.xxxx
  div r5.w, r5.w, r2.w
  min r5.w, r5.w, l(1.000000)
  add r5.w, -r5.w, l(1.000000)
  dp3 r5.x, r5.xyzx, r3.xyzx
  mad_sat r5.x, r5.x, l(0.585800), l(0.585800)
  lt r5.y, l(0.000000), cb3[r3.w + 0].x
  sqrt r5.z, r6.w
  add r5.z, r5.z, l(1.000000)
  mul r5.z, r5.z, r5.z
  div r5.z, l(1.000000, 1.000000, 1.000000, 1.000000), r5.z
  movc r5.y, r5.y, r5.z, r6.w
  mad_sat r5.y, r5.y, cb3[r3.w + 0].y, cb3[r3.w + 0].z
  dp3 r5.z, -r6.xyzx, cb3[r3.w + 8].xyzx
  mad_sat r6.x, r5.z, cb3[r3.w + 16].x, cb3[r3.w + 16].y
  lt r5.z, r5.z, cb3[r3.w + 8].w
  mul r5.x, r5.y, r5.x
  mul r5.x, r6.x, r5.x
  movc r5.x, r5.z, l(0), r5.x
  mad r5.x, cb3[r3.w + 4].w, r5.w, r5.x
  mad r4.xyzw, icb[r3.w + 0].xyzw, r5.xxxx, r4.xyzw
  iadd r3.w, r3.w, l(1)
endloop 
mov o2.xyzw, r4.xyzw
dp4 r3.x, r0.xyzw, cb1[14].xyzw
dp4 r3.y, r0.xyzw, cb1[15].xyzw
dp4_sat r0.w, r0.xyzw, cb1[16].xyzw
add r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
div r4.xyz, l(0.500000, 0.500000, 0.500000, 0.000000), cb1[9].xyzx
add r3.xy, r3.xyxx, r4.xyxx
add r4.xyw, cb1[9].xyxz, l(-1.000000, -1.000000, 0.000000, -1.000000)
div r3.zw, r4.xxxy, cb1[9].xxxy
mul r3.xy, r3.zwzz, r3.xyxx
lt r2.w, l(0.000000), cb1[18].w
div_sat r4.x, r0.w, cb1[18].w
mul r4.x, r4.x, cb1[19].w
and r2.w, r2.w, r4.x
lt r4.x, cb1[18].w, l(1.000000)
add_sat r0.w, r0.w, -cb1[18].w
add r4.y, -cb1[18].w, l(1.000000)
div r0.w, r0.w, r4.y
log r0.w, r0.w
mul r0.w, r0.w, cb1[9].w
exp r0.w, r0.w
add r4.y, r4.w, -cb1[19].w
mul r0.w, r0.w, r4.y
and r0.w, r0.w, r4.x
add r0.w, r0.w, r2.w
div r2.w, r0.w, cb1[9].z
round_ni r4.x, r0.w
div r4.x, r4.x, cb1[9].z
round_pi r0.w, r0.w
div r0.w, r0.w, cb1[9].z
mov_sat r4.y, r3.y
div r4.y, r4.y, cb1[9].z
add r3.z, r4.x, r4.y
sample_l_indexable(texture2d)(float,float,float,float) r4.yw, r3.xzxx, t1.zxwy, s1, l(0.000000)
add r5.xy, -r4.ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
mad r3.z, r5.y, l(0.250000), r4.w
min r3.z, r3.z, r5.x
div r4.y, r4.y, cb1[9].z
add r4.y, r4.y, r4.x
add r2.w, r2.w, -r4.y
mul r2.w, r2.w, cb1[9].z
div_sat r2.w, r2.w, r3.z
add r0.w, -r4.x, r0.w
mad r0.w, r2.w, r0.w, r4.x
add r3.w, r4.z, r0.w
sample_l_indexable(texture3d)(float,float,float,float) r4.xyzw, r3.xywx, t4.xyzw, s4, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r5.xyzw, r3.xywx, t3.xyzw, s3, l(0.000000)
sample_l_indexable(texture3d)(float,float,float,float) r3.xyzw, r3.xywx, t2.xyzw, s2, l(0.000000)
add r0.w, cb2[21].w, l(-30.000000)
add r6.xyz, r0.xyzx, -cb0[38].xyzx
dp2 r2.w, r6.xyxx, r6.xyxx
sqrt r2.w, r2.w
max r2.w, |r6.z|, r2.w
add r2.w, -r0.w, r2.w
add r0.w, -r0.w, cb2[21].w
div_sat r0.w, r2.w, r0.w
add r2.w, cb1[22].z, cb1[23].z
add r2.w, -r0.z, r2.w
mul_sat r2.w, r2.w, l(0.033333)
add r2.w, -r2.w, l(1.000000)
max r0.w, r0.w, r2.w
mad r6.xy, |r0.xyxx|, cb2[19].xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)
mul_sat r6.xy, r6.xyxx, cb2[19].zwzz
max r2.w, r6.y, r6.x
max r0.w, r0.w, r2.w
add r6.xyzw, -r4.xyzw, cb2[9].xyzw
mad r4.xyzw, r0.wwww, r6.xyzw, r4.xyzw
add r6.xyzw, -r5.xyzw, cb2[8].xyzw
mad r5.xyzw, r0.wwww, r6.xyzw, r5.xyzw
add r6.xyzw, -r3.xyzw, cb2[7].xyzw
mad r3.xyzw, r0.wwww, r6.xyzw, r3.xyzw
max r4.xyzw, r4.xyzw, cb2[5].xxxw
max r5.xyzw, r5.xyzw, cb2[5].yyyw
max r3.xyzw, r3.xywz, cb2[5].zzwz
add r4.xyz, r4.xyzx, r5.xyzx
add r4.xyz, r3.xywx, r4.xyzx
mov r3.x, r4.w
mov r3.y, r5.w
add r3.xyz, r3.xyzx, r4.xyzx
mul o4.xyz, r3.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
ge r0.w, l(0.000000), cb0[47].w
movc r0.w, r0.w, l(-10.000000), l(-10000.000000)
ge r0.w, r0.z, r0.w
add r3.xyz, r0.xyzx, -cb0[36].xyzx
dp3 r0.x, r3.xyzx, r3.xyzx
rsq r0.y, r0.x
mul r0.y, r0.y, r3.z
max r3.w, r3.z, l(0.000000)
dp3 r0.z, r3.xywx, r3.xywx
rsq r0.z, r0.z
mul r4.xyz, r0.zzzz, r3.xywx
sample_l_indexable(texture2d)(float,float,float,float) r5.xyz, l(0.750000, 0.500000, 0.000000, 0.000000), t0.xyzw, s0, l(6.000000)
mad r0.z, r4.z, l(2.000000), l(2.000000)
div r4.xy, r4.yxyy, r0.zzzz
add r0.z, -r4.x, l(0.500000)
add_sat r4.y, r4.y, l(0.500000)
max_sat r4.x, r0.z, l(0.125000)
mad r4.z, r4.x, l(0.500000), l(0.500000)
sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r4.zyzz, t0.xyzw, s0, l(6.000000)
add r5.xyz, -r4.xyzx, r5.xyzx
mad r4.xyz, |r0.yyyy|, r5.xyzx, r4.xyzx
mul r4.xyz, r4.xyzx, cb0[50].xyzx
mul r4.xyz, r4.xyzx, cb0[49].wwww
sqrt r0.x, r0.x
mul r0.xy, r0.xxxx, cb0[48].zwzz
lt r0.z, l(0.010000), |r3.z|
mul r5.xy, r3.zzzz, l(1.000000, -1.000000, 0.000000, 0.000000)
mul r5.xy, r5.xyxx, cb0[49].xyxx
mul r5.zw, r5.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
exp r5.zw, r5.zzzw
add r5.zw, -r5.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
div r5.xy, r5.zwzz, r5.xyxx
mul r5.xy, r0.xyxx, r5.xyxx
movc r0.xy, r0.zzzz, r5.xyxx, r0.xyxx
mul r0.xy, r0.xyxx, -cb0[48].xyxx
mul r0.xy, r0.xyxx, l(1.442695, 1.442695, 0.000000, 0.000000)
exp r0.xy, r0.xyxx
add r0.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
max r0.x, r0.y, r0.x
log r0.x, r0.x
mul r0.x, r0.x, cb0[50].w
exp r0.x, r0.x
min r4.w, r0.x, cb0[49].z
movc r0.xyzw, r0.wwww, r4.xyzw, l(0,0,0,1.000000)
mul r4.xyz, r0.wwww, r0.xyzx
add r4.w, -r0.w, l(1.000000)
mul o1.xyzw, r4.xyzw, cb0[38].wwww
mul_sat o0.xyz, r2.xyzx, cb4[6].zzzz
dp4 o3.x, r1.xyzw, cb0[20].xyzw
dp4 o3.y, r1.xyzw, cb0[21].xyzw
dp4 o3.z, r1.xyzw, cb0[23].xyzw
dp3 r0.x, cb0[37].xyzx, r3.xyzx
mul o3.w, r0.x, cb0[34].w
mov o6.xyzw, r1.xyzw
ret 
// Approximately 200 instruction slots used
 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
