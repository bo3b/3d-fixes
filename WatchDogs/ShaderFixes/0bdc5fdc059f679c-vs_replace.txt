//Decals - disable
cbuffer Viewport : register(b0)
{
  float4x4 _ViewRotProjectionMatrix : packoffset(c0);
  float4x4 _ViewProjectionMatrix : packoffset(c4);
  float4x4 _ProjectionMatrix : packoffset(c8);
  float4x4 _InvProjectionMatrix : packoffset(c12);
  float4x4 _InvProjectionMatrixDepth : packoffset(c16);
  float4x4 _DepthTextureTransform : packoffset(c20);
  float4x3 _ViewMatrix : packoffset(c24);
  float4x3 _InvViewMatrix : packoffset(c27);
  float4x4 _PreviousViewProjectionMatrix : packoffset(c30);
  float4 _CameraDistances : packoffset(c34);
  float4 _ViewportSize : packoffset(c35);
  float4 _CameraPosition_MaxStaticReflectionMipIndex : packoffset(c36);
  float4 _CameraDirection_MaxParaboloidReflectionMipIndex : packoffset(c37);
  float4 _ViewPoint_ExposureScale : packoffset(c38);
  float4 _FogColorVector_ExposedWhitePointOverExposureScale : packoffset(c39);
  float3 _SideFogColor : packoffset(c40);
  float3 _SunFogColorDelta : packoffset(c41);
  float3 _OppositeFogColorDelta : packoffset(c42);
  float4 _FogValues0 : packoffset(c43);
  float4 _FogValues1 : packoffset(c44);
  float4 _CameraNearPlaneSize : packoffset(c45);
  float4 _UncompressDepthWeights_ShadowProjDepthMinValue : packoffset(c46);
  float4 _UncompressDepthWeightsWS_ReflectionFadeTarget : packoffset(c47);
  float4 _WorldAmbientColorParams0 : packoffset(c48);
  float4 _WorldAmbientColorParams1 : packoffset(c49);
  float4 _WorldAmbientColorParams2 : packoffset(c50);
  float4 _GlobalWorldTextureParams : packoffset(c51);
  float4 _CullingCameraPosition_OneOverAutoExposureScale : packoffset(c52);
  float4 _AmbientSkyColor_ReflectionScaleStrength : packoffset(c53);
  float4 _AmbientGroundColor_ReflectionScaleDistanceMul : packoffset(c54);
  float4 _FacettedShadowCastParams : packoffset(c55);
  float4 _FSMClipPlanes : packoffset(c56);
  float2 _ReflectionGIControl : packoffset(c57);
}

cbuffer MaterialDriverWaterDecal : register(b1)
{
  float4 _MaterialPickingID : packoffset(c0);
  float4 _NormalTexture1Size : packoffset(c1);
  float4 _NormalUVTiling1 : packoffset(c2);
  float4 _OpacityTexture1Size : packoffset(c3);
  float4 _OpacityUVTiling1 : packoffset(c4);
  float4 _RaindropSplashesTextureSize : packoffset(c5);
  float4 _SpecularPower : packoffset(c6);
  float4 _SpecularTexture1Size : packoffset(c7);
  float4 _SpecularUVTiling1 : packoffset(c8);
  float2 _FresnelMinimum : packoffset(c9);
  float _FresnelPower : packoffset(c9.z);
  float _Reflectance : packoffset(c9.w);
  float2 _NormalIntensity : packoffset(c10);
  int _RaindropRippleType : packoffset(c10.z);
  bool _AlwaysVisible : packoffset(c10.w);
  float2 _ReflectionIntensity : packoffset(c11);
  bool _UseBaseSurfaceNormal : packoffset(c11.z);
}

cbuffer InstancingProjDecal : register(b2)
{
  float4 _DecalTangentSpaces[12] : packoffset(c0);
  float4 _DecalTexVariations[12] : packoffset(c12);
  float4x3 _InstanceSpaceToTexSpaceMatrices[12] : packoffset(c24);
  float4x3 _UncompressedBoxToDecalSpaceMatrices[12] : packoffset(c60);
}

Texture2D<float4> StereoParams : register(t125);

void main(
  int4 v0 : position0,
  float4 v1 : texcoord4,
  float4 v2 : texcoord5,
  float4 v3 : texcoord6,
  int4 v4 : texcoord7,
  out float4 o0 : TEXCOORD0,
  out float4 o1 : TEXCOORD1,
  out float4 o2 : TEXCOORD2,
  out float4 o3 : TEXCOORD3,
  out float4 o4 : TEXCOORD4,
  out float3 o5 : TEXCOORD5,
  out float3 o6 : TEXCOORD6,
  out float3 o7 : TEXCOORD7,
  out float3 o8 : TEXCOORD8,
  out float2 o9 : TEXCOORD9,
  out float4 o10 : SV_Position0)
{
  float4 r0,r1,r2,r3,r4,r5,r6;
  uint4 bitmask;
  r0.xyzw = v0.xyzw;
  r1.x = (uint)r0.w;
  o0.xyzw = _DecalTexVariations[r1.x].xyzw;
  r1.xyzw = _InvViewMatrix._m01_m11_m21_m31 * v2.zzzz;
  r1.xyzw = v1.zzzz * _InvViewMatrix._m00_m10_m20_m30 + r1.xyzw;
  r1.xyzw = v3.zzzz * _InvViewMatrix._m02_m12_m22_m32 + r1.xyzw;
  r2.x = v1.w;
  r2.y = v3.w;
  r2.z = v2.w;
  r3.xyzw = v4.xyzw;
  r2.xyw = r3.xzy + r2.xyz;
  r3.x = r3.w * 9.765923023e-004 + 3.200000000e+001;
  r3.yzw = v2.zxy * r2.www;
  r3.yzw = r2.xxx * v1.zxy + r3.yzw;
  r3.yzw = r2.yyy * v3.zxy + r3.yzw;
  r1.w = -r3.y + r1.w;
  r4.xyzw = _InvViewMatrix._m01_m11_m21_m31 * v2.xxxx;
  r4.xyzw = v1.xxxx * _InvViewMatrix._m00_m10_m20_m30 + r4.xyzw;
  r4.xyzw = v3.xxxx * _InvViewMatrix._m02_m12_m22_m32 + r4.xyzw;
  r4.w = r4.w + -r3.z;
  r5.xyzw = _InvViewMatrix._m01_m11_m21_m31 * v2.yyyy;
  r5.xyzw = v1.yyyy * _InvViewMatrix._m00_m10_m20_m30 + r5.xyzw;
  r5.xyzw = v3.yyyy * _InvViewMatrix._m02_m12_m22_m32 + r5.xyzw;
  r5.w = r5.w + -r3.w;
  r3.y = (int)v0.w * 3;
  r6.xyzw = _InstanceSpaceToTexSpaceMatrices[v0.w]._m10_m10_m10_m10 * r5.xyzw;
  r5.xyzw = _InstanceSpaceToTexSpaceMatrices[v0.w]._m11_m11_m11_m11 * r5.xyzw;
  r5.xyzw = _InstanceSpaceToTexSpaceMatrices[v0.w]._m01_m01_m01_m01 * r4.xyzw + r5.xyzw;
  r4.xyzw = _InstanceSpaceToTexSpaceMatrices[v0.w]._m00_m00_m00_m00 * r4.xyzw + r6.xyzw;
  r4.xyzw = _InstanceSpaceToTexSpaceMatrices[v0.w]._m20_m20_m20_m20 * r1.xyzw + r4.xyzw;
  r1.xyzw = _InstanceSpaceToTexSpaceMatrices[v0.w]._m21_m21_m21_m21 * r1.xyzw + r5.xyzw;
  o1.w = _InstanceSpaceToTexSpaceMatrices[v0.w]._m30 + r4.w;
  o1.xyz = r4.xyz;
  o2.w = _InstanceSpaceToTexSpaceMatrices[v0.w]._m31 + r1.w;
  o2.xyz = r1.xyz;
  r1.x = saturate(v3.z);
  o3.w = _NormalIntensity.y * r1.x;
  o3.x = v1.z;
  o3.y = v2.z;
  o3.z = v3.z;
  r0.w = 1.000000000e+000;
  r1.x = dot(r0.xyzw, _UncompressedBoxToDecalSpaceMatrices[v0.w]._m00_m10_m20_m30);
  r1.y = dot(r0.xyzw, _UncompressedBoxToDecalSpaceMatrices[v0.w]._m01_m11_m21_m31);
  r1.z = dot(r0.xyzw, _UncompressedBoxToDecalSpaceMatrices[v0.w]._m02_m12_m22_m32);
  r0.xyz = r1.xyz * r3.xxx;
  r1.w = r2.y;
  r1.xyz = v3.xyz;
  r0.w = 1.000000000e+000;
  r1.z = dot(r0.xyzw, r1.xyzw);
  r3.w = r2.x;
  r3.xyz = v1.xyz;
  r1.x = dot(r0.xyzw, r3.xyzw);
  r2.xyz = v2.xyz;
  r1.y = dot(r0.xyzw, r2.xyzw);
  r0.xyz = -_CameraPosition_MaxStaticReflectionMipIndex.xyz + r1.xyz;
  r0.x = dot(r0.xyz, r0.xyz);
  r0.x = -1.000000000e+002 + r0.x;
  r0.x = saturate(3.999999911e-002 * r0.x);
  r0.x = 1.000000000e+000 + -r0.x;
  r1.w = r0.x * -5.000000000e-001 + r1.z;
  o4.xyz = r1.xyw;
  r0.x = 2.000000030e-001 + abs(v3.z);
  r0.x = min(r0.x, 1.000000000e+000);
  o4.w = r0.x + r0.x;
  r0.xyz = -_CameraPosition_MaxStaticReflectionMipIndex.yzx + r1.ywx;
  r2.x = r1.x;
  r3.x = _ViewRotProjectionMatrix._m20 * r0.y + _ViewRotProjectionMatrix._m30;
  r3.y = _ViewRotProjectionMatrix._m21 * r0.y + _ViewRotProjectionMatrix._m31;
  r3.z = _ViewRotProjectionMatrix._m22 * r0.y + _ViewRotProjectionMatrix._m32;
  r3.w = _ViewRotProjectionMatrix._m23 * r0.y + _ViewRotProjectionMatrix._m33;
  r4.xy = _ViewRotProjectionMatrix._m00_m10 * r0.zx;
  r5.x = r4.y;
  r5.yz = _ViewRotProjectionMatrix._m11_m01 * r0.xz;
  r4.y = r5.z;
  r0.yw = _ViewRotProjectionMatrix._m12_m02 * r0.xz;
  r0.xz = _ViewRotProjectionMatrix._m13_m03 * r0.xz;
  r5.zw = r0.yx;
  r4.zw = r0.wz;
  r0.xyzw = r5.xyzw + r3.xyzw;
  r0.xyzw = r4.xyzw + r0.xyzw;
  o5.x = dot(r0.xyzw, _DepthTextureTransform._m00_m10_m20_m30);
  o5.y = dot(r0.xyzw, _DepthTextureTransform._m01_m11_m21_m31);
  o5.z = dot(r0.xyzw, _DepthTextureTransform._m03_m13_m23_m33);
  r1.xz = _CameraNearPlaneSize.xy * r0.xy;
  r1.xz = float2(5.000000e-001,5.000000e-001) * r1.xz;
  o6.xy = r1.xz / -_CameraDistances.xx;
  o6.z = r0.w;
  o10.xyzw = r0.xyzw;
  
o10=0;
  
  r0.x = v0.w;
  o7.x = dot(_DecalTangentSpaces[r0.x].zw, v1.xy);
  o7.y = dot(_DecalTangentSpaces[r0.x].zw, v2.xy);
  o7.z = dot(_DecalTangentSpaces[r0.x].zw, v3.xy);
  o8.x = dot(_DecalTangentSpaces[r0.x].xy, v1.xy);
  o8.y = dot(_DecalTangentSpaces[r0.x].xy, v2.xy);
  o8.z = dot(_DecalTangentSpaces[r0.x].xy, v3.xy);
  r0.x = abs(v1.z) < abs(v2.z);
  r0.x = r0.x ? 1.000000 : 0;
  r0.y = abs(v3.z) < abs(v2.z);
  r0.x = r0.x ? r0.y : 0;
  r0.x = 0.000000e+000 != r0.x;
  r2.y = r0.x ? r1.w : r1.y;
  r0.x = abs(v2.z) < abs(v1.z);
  r0.x = r0.x ? 1.000000 : 0;
  r0.y = abs(v3.z) < abs(v1.z);
  r0.x = r0.x ? r0.y : 0;
  r0.x = 0.000000e+000 != r0.x;
  r0.xy = r0.xx ? r1.yw : r2.xy;
  r0.z = _ViewportSize.x * 5.000000000e-001;
  o9.xy = r0.xy * r0.zz;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20789
//
//
// Buffer Definitions: 
//
// cbuffer Viewport
// {
//
//   float4x4 _ViewRotProjectionMatrix; // Offset:    0 Size:    64
//   float4x4 _ViewProjectionMatrix;    // Offset:   64 Size:    64 [unused]
//   float4x4 _ProjectionMatrix;        // Offset:  128 Size:    64 [unused]
//   float4x4 _InvProjectionMatrix;     // Offset:  192 Size:    64 [unused]
//   float4x4 _InvProjectionMatrixDepth;// Offset:  256 Size:    64 [unused]
//   float4x4 _DepthTextureTransform;   // Offset:  320 Size:    64
//   float4x3 _ViewMatrix;              // Offset:  384 Size:    48 [unused]
//   float4x3 _InvViewMatrix;           // Offset:  432 Size:    48
//   float4x4 _PreviousViewProjectionMatrix;// Offset:  480 Size:    64 [unused]
//   float4 _CameraDistances;           // Offset:  544 Size:    16
//   float4 _ViewportSize;              // Offset:  560 Size:    16
//   float4 _CameraPosition_MaxStaticReflectionMipIndex;// Offset:  576 Size:    16
//   float4 _CameraDirection_MaxParaboloidReflectionMipIndex;// Offset:  592 Size:    16 [unused]
//   float4 _ViewPoint_ExposureScale;   // Offset:  608 Size:    16 [unused]
//   float4 _FogColorVector_ExposedWhitePointOverExposureScale;// Offset:  624 Size:    16 [unused]
//   float3 _SideFogColor;              // Offset:  640 Size:    12 [unused]
//   float3 _SunFogColorDelta;          // Offset:  656 Size:    12 [unused]
//   float3 _OppositeFogColorDelta;     // Offset:  672 Size:    12 [unused]
//   float4 _FogValues0;                // Offset:  688 Size:    16 [unused]
//   float4 _FogValues1;                // Offset:  704 Size:    16 [unused]
//   float4 _CameraNearPlaneSize;       // Offset:  720 Size:    16
//   float4 _UncompressDepthWeights_ShadowProjDepthMinValue;// Offset:  736 Size:    16 [unused]
//   float4 _UncompressDepthWeightsWS_ReflectionFadeTarget;// Offset:  752 Size:    16 [unused]
//   float4 _WorldAmbientColorParams0;  // Offset:  768 Size:    16 [unused]
//   float4 _WorldAmbientColorParams1;  // Offset:  784 Size:    16 [unused]
//   float4 _WorldAmbientColorParams2;  // Offset:  800 Size:    16 [unused]
//   float4 _GlobalWorldTextureParams;  // Offset:  816 Size:    16 [unused]
//   float4 _CullingCameraPosition_OneOverAutoExposureScale;// Offset:  832 Size:    16 [unused]
//   float4 _AmbientSkyColor_ReflectionScaleStrength;// Offset:  848 Size:    16 [unused]
//   float4 _AmbientGroundColor_ReflectionScaleDistanceMul;// Offset:  864 Size:    16 [unused]
//   float4 _FacettedShadowCastParams;  // Offset:  880 Size:    16 [unused]
//   float4 _FSMClipPlanes;             // Offset:  896 Size:    16 [unused]
//   float2 _ReflectionGIControl;       // Offset:  912 Size:     8 [unused]
//
// }
//
// cbuffer MaterialDriverWaterDecal
// {
//
//   float4 _MaterialPickingID;         // Offset:    0 Size:    16 [unused]
//   float4 _NormalTexture1Size;        // Offset:   16 Size:    16 [unused]
//   float4 _NormalUVTiling1;           // Offset:   32 Size:    16 [unused]
//   float4 _OpacityTexture1Size;       // Offset:   48 Size:    16 [unused]
//   float4 _OpacityUVTiling1;          // Offset:   64 Size:    16 [unused]
//   float4 _RaindropSplashesTextureSize;// Offset:   80 Size:    16 [unused]
//   float4 _SpecularPower;             // Offset:   96 Size:    16 [unused]
//   float4 _SpecularTexture1Size;      // Offset:  112 Size:    16 [unused]
//   float4 _SpecularUVTiling1;         // Offset:  128 Size:    16 [unused]
//   float2 _FresnelMinimum;            // Offset:  144 Size:     8 [unused]
//   float _FresnelPower;               // Offset:  152 Size:     4 [unused]
//   float _Reflectance;                // Offset:  156 Size:     4 [unused]
//   float2 _NormalIntensity;           // Offset:  160 Size:     8
//   int _RaindropRippleType;           // Offset:  168 Size:     4 [unused]
//   bool _AlwaysVisible;               // Offset:  172 Size:     4 [unused]
//   float2 _ReflectionIntensity;       // Offset:  176 Size:     8 [unused]
//   bool _UseBaseSurfaceNormal;        // Offset:  184 Size:     4 [unused]
//
// }
//
// cbuffer InstancingProjDecal
// {
//
//   float4 _DecalTangentSpaces[12];    // Offset:    0 Size:   192
//   float4 _DecalTexVariations[12];    // Offset:  192 Size:   192
//   float4x3 _InstanceSpaceToTexSpaceMatrices[12];// Offset:  384 Size:   576
//   float4x3 _UncompressedBoxToDecalSpaceMatrices[12];// Offset:  960 Size:   576
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Viewport                          cbuffer      NA          NA    0        1
// MaterialDriverWaterDecal          cbuffer      NA          NA    1        1
// InstancingProjDecal               cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// position                 0   xyzw        0     NONE     int   xyzw
// texcoord                 4   xyzw        1     NONE   float   xyzw
// texcoord                 5   xyzw        2     NONE   float   xyzw
// texcoord                 6   xyzw        3     NONE   float   xyzw
// texcoord                 7   xyzw        4     NONE     int   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyz         7     NONE   float   xyz 
// TEXCOORD                 8   xyz         8     NONE   float   xyz 
// TEXCOORD                 9   xy          9     NONE   float   xy  
// SV_Position              0   xyzw       10      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[46], immediateIndexed
dcl_constantbuffer cb1[11], immediateIndexed
dcl_constantbuffer cb2[96], dynamicIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyzw
dcl_input v3.xyzw
dcl_input v4.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyz
dcl_output o6.xyz
dcl_output o7.xyz
dcl_output o8.xyz
dcl_output o9.xy
dcl_output_siv o10.xyzw, position
dcl_temps 7
itof r0.xyzw, v0.xyzw
ftou r1.x, r0.w
mov o0.xyzw, cb2[r1.x + 12].xyzw
mul r1.xyzw, v2.zzzz, cb0[28].xyzw
mad r1.xyzw, v1.zzzz, cb0[27].xyzw, r1.xyzw
mad r1.xyzw, v3.zzzz, cb0[29].xyzw, r1.xyzw
mov r2.x, v1.w
mov r2.y, v3.w
mov r2.z, v2.w
itof r3.xyzw, v4.xyzw
add r2.xyw, r2.xyxz, r3.xzxy
mad r3.x, r3.w, l(0.000977), l(32.000000)
mul r3.yzw, r2.wwww, v2.zzxy
mad r3.yzw, r2.xxxx, v1.zzxy, r3.yyzw
mad r3.yzw, r2.yyyy, v3.zzxy, r3.yyzw
add r1.w, r1.w, -r3.y
mul r4.xyzw, v2.xxxx, cb0[28].xyzw
mad r4.xyzw, v1.xxxx, cb0[27].xyzw, r4.xyzw
mad r4.xyzw, v3.xxxx, cb0[29].xyzw, r4.xyzw
add r4.w, -r3.z, r4.w
mul r5.xyzw, v2.yyyy, cb0[28].xyzw
mad r5.xyzw, v1.yyyy, cb0[27].xyzw, r5.xyzw
mad r5.xyzw, v3.yyyy, cb0[29].xyzw, r5.xyzw
add r5.w, -r3.w, r5.w
imul null, r3.y, v0.w, l(3)
mul r6.xyzw, r5.xyzw, cb2[r3.y + 24].yyyy
mul r5.xyzw, r5.xyzw, cb2[r3.y + 25].yyyy
mad r5.xyzw, cb2[r3.y + 25].xxxx, r4.xyzw, r5.xyzw
mad r4.xyzw, cb2[r3.y + 24].xxxx, r4.xyzw, r6.xyzw
mad r4.xyzw, cb2[r3.y + 24].zzzz, r1.xyzw, r4.xyzw
mad r1.xyzw, cb2[r3.y + 25].zzzz, r1.xyzw, r5.xyzw
add o1.w, r4.w, cb2[r3.y + 24].w
mov o1.xyz, r4.xyzx
add o2.w, r1.w, cb2[r3.y + 25].w
mov o2.xyz, r1.xyzx
mov_sat r1.x, v3.z
mul o3.w, r1.x, cb1[10].y
mov o3.x, v1.z
mov o3.y, v2.z
mov o3.z, v3.z
mov r0.w, l(1.000000)
dp4 r1.x, r0.xyzw, cb2[r3.y + 60].xyzw
dp4 r1.y, r0.xyzw, cb2[r3.y + 61].xyzw
dp4 r1.z, r0.xyzw, cb2[r3.y + 62].xyzw
mul r0.xyz, r3.xxxx, r1.xyzx
mov r1.w, r2.y
mov r1.xyz, v3.xyzx
mov r0.w, l(1.000000)
dp4 r1.z, r0.xyzw, r1.xyzw
mov r3.w, r2.x
mov r3.xyz, v1.xyzx
dp4 r1.x, r0.xyzw, r3.xyzw
mov r2.xyz, v2.xyzx
dp4 r1.y, r0.xyzw, r2.xyzw
add r0.xyz, r1.xyzx, -cb0[36].xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
add r0.x, r0.x, l(-100.000000)
mul_sat r0.x, r0.x, l(0.040000)
add r0.x, -r0.x, l(1.000000)
mad r1.w, r0.x, l(-0.500000), r1.z
mov o4.xyz, r1.xywx
add r0.x, |v3.z|, l(0.200000)
min r0.x, r0.x, l(1.000000)
add o4.w, r0.x, r0.x
add r0.xyz, r1.ywxy, -cb0[36].yzxy
mov r2.x, r1.x
mad r3.x, cb0[0].z, r0.y, cb0[0].w
mad r3.y, cb0[1].z, r0.y, cb0[1].w
mad r3.z, cb0[2].z, r0.y, cb0[2].w
mad r3.w, cb0[3].z, r0.y, cb0[3].w
mul r4.xy, r0.zxzz, cb0[0].xyxx
mov r5.x, r4.y
mul r5.yz, r0.xxzx, cb0[1].yyxy
mov r4.y, r5.z
mul r0.yw, r0.xxxz, cb0[2].yyyx
mul r0.xz, r0.xxzx, cb0[3].yyxy
mov r5.zw, r0.yyyx
mov r4.zw, r0.wwwz
add r0.xyzw, r3.xyzw, r5.xyzw
add r0.xyzw, r0.xyzw, r4.xyzw
dp4 o5.x, r0.xyzw, cb0[20].xyzw
dp4 o5.y, r0.xyzw, cb0[21].xyzw
dp4 o5.z, r0.xyzw, cb0[23].xyzw
mul r1.xz, r0.xxyx, cb0[45].xxyx
mul r1.xz, r1.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000)
div o6.xy, r1.xzxx, -cb0[34].xxxx
mov o6.z, r0.w
mov o10.xyzw, r0.xyzw
mov r0.x, v0.w
dp2 o7.x, cb2[r0.x + 0].zwzz, v1.xyxx
dp2 o7.y, cb2[r0.x + 0].zwzz, v2.xyxx
dp2 o7.z, cb2[r0.x + 0].zwzz, v3.xyxx
dp2 o8.x, cb2[r0.x + 0].xyxx, v1.xyxx
dp2 o8.y, cb2[r0.x + 0].xyxx, v2.xyxx
dp2 o8.z, cb2[r0.x + 0].xyxx, v3.xyxx
lt r0.x, |v1.z|, |v2.z|
and r0.x, r0.x, l(0x3f800000)
lt r0.y, |v3.z|, |v2.z|
and r0.x, r0.x, r0.y
ne r0.x, l(0.000000, 0.000000, 0.000000, 0.000000), r0.x
movc r2.y, r0.x, r1.w, r1.y
lt r0.x, |v2.z|, |v1.z|
and r0.x, r0.x, l(0x3f800000)
lt r0.y, |v3.z|, |v1.z|
and r0.x, r0.x, r0.y
ne r0.x, l(0.000000, 0.000000, 0.000000, 0.000000), r0.x
movc r0.xy, r0.xxxx, r1.ywyy, r2.xyxx
mul r0.z, l(0.500000), cb0[35].x
mul o9.xy, r0.zzzz, r0.xyxx
ret 
// Approximately 110 instruction slots used
 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
