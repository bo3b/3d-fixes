// SLI FOG Correction

cbuffer viewConstants : register(b2)
{
  float1 time : packoffset(c0);
  float3 vc_pad0_ : packoffset(c0.y);
  float4 screenSize : packoffset(c1);
  float3 debugNonFiniteColor : packoffset(c2);
  float1 vc_pad2_ : packoffset(c2.w);
  float4x4 viewMatrix : packoffset(c3);
  float4x4 projMatrix : packoffset(c7);
  float4x4 viewProjMatrix : packoffset(c11);
  float4x4 crViewProjMatrix : packoffset(c15);
  float4 projectionKxKyKzKw : packoffset(c19);
  float3 cameraPos : packoffset(c20);
  float1 vc_pad8_ : packoffset(c20.w);
  float3 transparentStartAndSlopeAndClamp : packoffset(c21);
  float1 vc_pad9_ : packoffset(c21.w);
  float4 transparentCurve : packoffset(c22);
  float4 exposureMultipliers : packoffset(c23);
  float4 fogParams : packoffset(c24);
  float4 fogForwardScatteringParamsGradientScaleFogEnable : packoffset(c25);
  float4 fogForwardScatteringColorPresence : packoffset(c26);
  float4 fogCoefficients : packoffset(c27);
  float4 fogColorCoefficients : packoffset(c28);
  float4 fogColor : packoffset(c29);
  float4 fogStartDistance : packoffset(c30);
  float4 fogHeightFogCoefficients : packoffset(c31);
  float4 fogMiscParam : packoffset(c32);
  float2 fogEnabledMode : packoffset(c33);
  float2 vc_pad10_ : packoffset(c33.z);
}

cbuffer externalConstants : register(b1)
{
  float3 external_g_keyColor : packoffset(c0);
  float1 vc_pad0 : packoffset(c0.w);
}
SamplerState sampler0_s : register(s0);
SamplerState sampler1_s : register(s1);
SamplerState sampler2_s : register(s2);
Texture2D<float4> texture_depthBufferTexture : register(t1);
Texture2D<float4> texture_NormalTexture1 : register(t2);
Texture2D<float4> texture_BaseTexture1 : register(t3);

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main(
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  float4 v3 : TEXCOORD2,
  float4 v4 : TEXCOORD3,
  float4 v5 : TEXCOORD4,
  float4 v6 : TEXCOORD5,
  float4 v7 : TEXCOORD6,
  float4 v8 : TEXCOORD7,
  float4 v9 : TEXCOORD8,
  float4 v10 : TEXCOORD9,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2;
  uint4 bitmask;
  r0.xyz = texture_NormalTexture1.Sample(sampler1_s, v9.xy).xyw;
  r0.xyz = r0.xzy * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r0.xyz = -v6.xyz + r0.xyz;
  r0.xyz = v10.xxx * r0.xyz + v6.xyz;
  r1.x = dot(r0.xyz, v7.xyz);
  r1.x = r1.x * -5.000000000e-001 + 5.000000000e-001;
  r1.x = r1.x * r1.x;
  r1.xyz = external_g_keyColor.xyz * r1.xxx;
  r0.w = 1.000000000e+000;
  r1.w = dot(v1.xyzw, r0.xyzw);
  r2.x = max(r1.w, 0.000000000e+000);
  r1.w = dot(v2.xyzw, r0.xyzw);
  r0.x = dot(v3.xyzw, r0.xyzw);
  r2.z = max(r0.x, 0.000000000e+000);
  r2.y = max(r1.w, 0.000000000e+000);
  r0.xyz = r1.xyz * v6.www + r2.xyz;
  r0.xyz = v5.xyz * r0.xyz;
  r1.xyzw = texture_BaseTexture1.Sample(sampler2_s, v8.xy).xyzw;
  r0.xyz = r1.xyz * r0.xyz;
  r0.w = saturate(r1.w * v8.w + -v8.z);
  r0.w = log2(r0.w);
  r0.w = v7.w * r0.w;
  r0.w = exp2(r0.w);
  r0.w = v5.w * r0.w;
  r1.xy = screenSize.zw * v0.xy;
  r1.x = texture_depthBufferTexture.Sample(sampler0_s, r1.xy).x;
  r1.x = -v9.w + r1.x;
  r1.x = saturate(v9.z * r1.x);
  r0.w = r1.x * r0.w;
  r0.xyz = r0.xyz * r0.www;
  r1.xyz = v4.xyz * r0.www;
  o0.w = r0.w;
  r0.w = 1.000000000e+000 + -v4.w;
  // Normal colours
  o0.xyz = (r0.xyz * r0.www + r1.xyz);
  
  // SLI FIX
  float4 iniParams = IniParams.Load(0);
  if (iniParams.z == 1.0)
  {
	o0.xyz = (r0.xyz * r0.www + r1.xyz) * 0.09;
	o0.w = 0.0;
  }  
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20546
//
//
// Buffer Definitions: 
//
// cbuffer viewConstants
// {
//
//   float1 time;                       // Offset:    0 Size:     4 [unused]
//   float3 vc_pad0_;                   // Offset:    4 Size:    12 [unused]
//   float4 screenSize;                 // Offset:   16 Size:    16
//   float3 debugNonFiniteColor;        // Offset:   32 Size:    12 [unused]
//   float1 vc_pad2_;                   // Offset:   44 Size:     4 [unused]
//   float4x4 viewMatrix;               // Offset:   48 Size:    64 [unused]
//   float4x4 projMatrix;               // Offset:  112 Size:    64 [unused]
//   float4x4 viewProjMatrix;           // Offset:  176 Size:    64 [unused]
//   float4x4 crViewProjMatrix;         // Offset:  240 Size:    64 [unused]
//   float4 projectionKxKyKzKw;         // Offset:  304 Size:    16 [unused]
//   float3 cameraPos;                  // Offset:  320 Size:    12 [unused]
//   float1 vc_pad8_;                   // Offset:  332 Size:     4 [unused]
//   float3 transparentStartAndSlopeAndClamp;// Offset:  336 Size:    12 [unused]
//   float1 vc_pad9_;                   // Offset:  348 Size:     4 [unused]
//   float4 transparentCurve;           // Offset:  352 Size:    16 [unused]
//   float4 exposureMultipliers;        // Offset:  368 Size:    16 [unused]
//   float4 fogParams;                  // Offset:  384 Size:    16 [unused]
//   float4 fogForwardScatteringParamsGradientScaleFogEnable;// Offset:  400 Size:    16 [unused]
//   float4 fogForwardScatteringColorPresence;// Offset:  416 Size:    16 [unused]
//   float4 fogCoefficients;            // Offset:  432 Size:    16 [unused]
//   float4 fogColorCoefficients;       // Offset:  448 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  464 Size:    16 [unused]
//   float4 fogStartDistance;           // Offset:  480 Size:    16 [unused]
//   float4 fogHeightFogCoefficients;   // Offset:  496 Size:    16 [unused]
//   float4 fogMiscParam;               // Offset:  512 Size:    16 [unused]
//   float2 fogEnabledMode;             // Offset:  528 Size:     8 [unused]
//   float2 vc_pad10_;                  // Offset:  536 Size:     8 [unused]
//
// }
//
// cbuffer externalConstants
// {
//
//   float3 external_g_keyColor;        // Offset:    0 Size:    12
//   float1 vc_pad0;                    // Offset:   12 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// sampler0                          sampler      NA          NA    0        1
// sampler1                          sampler      NA          NA    1        1
// sampler2                          sampler      NA          NA    2        1
// texture_depthBufferTexture        texture  float4          2d    1        1
// texture_NormalTexture1            texture  float4          2d    2        1
// texture_BaseTexture1              texture  float4          2d    3        1
// externalConstants                 cbuffer      NA          NA    1        1
// viewConstants                     cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
// TEXCOORD                 9   xyzw       10     NONE   float   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_constantbuffer cb1[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyzw
dcl_input_ps linear v7.xyzw
dcl_input_ps linear v8.xyzw
dcl_input_ps linear v9.xyzw
dcl_input_ps linear v10.x
dcl_output o0.xyzw
dcl_temps 3
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v9.xyxx, t2.xywz, s1
mad r0.xyz, r0.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
add r0.xyz, r0.xyzx, -v6.xyzx
mad r0.xyz, v10.xxxx, r0.xyzx, v6.xyzx
dp3 r1.x, r0.xyzx, v7.xyzx
mad r1.x, r1.x, l(-0.500000), l(0.500000)
mul r1.x, r1.x, r1.x
mul r1.xyz, r1.xxxx, cb1[0].xyzx
mov r0.w, l(1.000000)
dp4 r1.w, v1.xyzw, r0.xyzw
max r2.x, r1.w, l(0.000000)
dp4 r1.w, v2.xyzw, r0.xyzw
dp4 r0.x, v3.xyzw, r0.xyzw
max r2.z, r0.x, l(0.000000)
max r2.y, r1.w, l(0.000000)
mad r0.xyz, r1.xyzx, v6.wwww, r2.xyzx
mul r0.xyz, r0.xyzx, v5.xyzx
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v8.xyxx, t3.xyzw, s2
mul r0.xyz, r0.xyzx, r1.xyzx
mad_sat r0.w, r1.w, v8.w, -v8.z
log r0.w, r0.w
mul r0.w, r0.w, v7.w
exp r0.w, r0.w
mul r0.w, r0.w, v5.w
mul r1.xy, v0.xyxx, cb2[1].zwzz
sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t1.xyzw, s0
add r1.x, r1.x, -v9.w
mul_sat r1.x, r1.x, v9.z
mul r0.w, r0.w, r1.x
mul r0.xyz, r0.wwww, r0.xyzx
mul r1.xyz, r0.wwww, v4.xyzx
mov o0.w, r0.w
add r0.w, -v4.w, l(1.000000)
mad o0.xyz, r0.xyzx, r0.wwww, r1.xyzx
ret 
// Approximately 35 instruction slots used
 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
