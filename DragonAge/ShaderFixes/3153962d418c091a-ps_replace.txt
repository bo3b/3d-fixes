
cbuffer _Globals : register(b0)
{
  float2 g_invScreenSize : packoffset(c0);
  float4x4 g_invViewProjMatrix : packoffset(c1);
  float g_subRolloff : packoffset(c5);
  float4 g_exposureMultipliers : packoffset(c6);
}
Texture2DMS<float4,2> g_depthTexture : register(t0);
Texture2DMS<float4,2> g_gbufferTexture0 : register(t1);
Texture2DMS<float4,2> g_gbufferTexture1 : register(t2);
Texture2DMS<float4,2> g_gbufferTexture2 : register(t3);
Texture2DMS<float4,2> g_gbufferTexture4 : register(t4);
Texture2D<float> g_msaaClassifyTexture : register(t5);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  float4 v3 : TEXCOORD2,
  float4 v4 : TEXCOORD3,
  out float4 o0 : SV_Target0)
{
  const float4 icb[] = { { 0.250000, 0, 0, 0},
                              { -0.250000, 0, 0, 0} };
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14;
  uint4 bitmask;

//Work out Inverse
//...Variables
float4 a1, a2, a3, a4;
float4 b1, b2, b3, b4;
float det;
//...Original Matrix
a1 = g_invViewProjMatrix._m00_m10_m20_m30;
a2 = g_invViewProjMatrix._m01_m11_m21_m31;
a3 = g_invViewProjMatrix._m02_m12_m22_m32;
a4 = g_invViewProjMatrix._m03_m13_m23_m33;
//...Determinant
det  = a1.x*(a2.y*(a3.z*a4.w - a3.w*a4.z) + a2.z*(a3.w*a4.y - a3.y*a4.w) + a2.w*(a3.y*a4.z - a3.z*a4.y));
det += a1.y*(a2.x*(a3.w*a4.z - a3.z*a4.w) + a2.z*(a3.x*a4.w - a3.w*a4.z) + a2.w*(a3.z*a4.x - a3.x*a4.z));
det += a1.z*(a2.x*(a3.y*a4.w - a3.w*a4.y) + a2.y*(a3.w*a4.x - a3.x*a4.w) + a2.w*(a3.x*a4.y - a3.y*a4.x));
det += a1.w*(a2.x*(a3.z*a4.y - a3.y*a4.z) + a2.y*(a3.x*a4.z - a3.z*a4.x) + a2.z*(a3.y*a4.x - a3.x*a4.y));
//...Inverse Matrix Elements
b1.x = a2.y*(a3.z*a4.w - a3.w*a4.z) + a2.z*(a3.w*a4.y - a3.y*a4.w) + a2.w*(a3.y*a4.z - a3.z*a4.y);
b1.y = a1.y*(a3.w*a4.z - a3.z*a4.w) + a1.z*(a3.y*a4.w - a3.w*a4.y) + a1.w*(a3.z*a4.y - a3.y*a4.z);
b1.z = a1.y*(a2.z*a4.w - a2.w*a4.z) + a1.z*(a2.w*a4.y - a2.y*a4.w) + a1.w*(a2.y*a4.z - a2.z*a4.y);
b1.w = a1.y*(a2.w*a3.z - a2.z*a3.w) + a1.z*(a2.y*a3.w - a2.w*a3.y) + a1.w*(a2.z*a3.y - a2.y*a3.z);
b2.x = a2.x*(a3.w*a4.z - a3.z*a4.w) + a2.z*(a3.x*a4.w - a3.w*a4.x) + a2.w*(a3.z*a4.x - a3.x*a4.z);
b2.y = a1.x*(a3.z*a4.w - a3.w*a4.z) + a1.z*(a3.w*a4.x - a3.x*a4.w) + a1.w*(a3.x*a4.z - a3.z*a4.x);
b2.z = a1.x*(a2.w*a4.z - a2.z*a4.w) + a1.z*(a2.x*a4.w - a2.w*a4.x) + a1.w*(a2.z*a4.x - a2.x*a4.z);
b2.w = a1.x*(a2.z*a3.w - a2.w*a3.z) + a1.z*(a2.w*a3.x - a2.x*a3.w) + a1.w*(a2.x*a3.z - a2.z*a3.x);
b3.x = a2.x*(a3.y*a4.w - a3.w*a4.y) + a2.y*(a3.w*a4.x - a3.x*a4.w) + a2.w*(a3.x*a4.y - a3.y*a4.x);
b3.y = a1.x*(a3.w*a4.y - a3.y*a4.w) + a1.y*(a3.x*a4.w - a3.w*a4.x) + a1.w*(a3.y*a4.x - a3.x*a4.y);
b3.z = a1.x*(a2.y*a4.w - a2.w*a4.y) + a1.y*(a2.w*a4.x - a2.x*a4.w) + a1.w*(a2.x*a4.y - a2.y*a4.x);
b3.w = a1.x*(a2.w*a3.y - a2.y*a3.w) + a1.y*(a2.x*a3.w - a2.w*a3.x) + a1.w*(a2.y*a3.x - a2.x*a3.y);
b4.x = a2.x*(a3.z*a4.y - a3.y*a4.z) + a2.y*(a3.x*a4.z - a3.z*a4.x) + a2.z*(a3.y*a4.x - a3.x*a4.y);
b4.y = a1.x*(a3.y*a4.z - a3.z*a4.y) + a1.y*(a3.z*a4.x - a3.x*a4.z) + a1.z*(a3.x*a4.y - a3.y*a4.x);
b4.z = a1.x*(a2.z*a4.y - a2.y*a4.z) + a1.y*(a2.x*a4.z - a2.z*a4.x) + a1.z*(a2.y*a4.x - a2.x*a4.y);
b4.w = a1.x*(a2.y*a3.z - a2.z*a3.y) + a1.y*(a2.z*a3.x - a2.x*a3.z) + a1.z*(a2.x*a3.y - a2.y*a3.x);
b1.xyzw /= det;
b2.xyzw /= det;
b3.xyzw /= det;
b4.xyzw /= det;
//End Inverse


  r0.xy = (int2)v0.xy;
  r0.zw = float2(0.000000e+000,0.000000e+000);
  r1.x = g_msaaClassifyTexture.Load(r0.xyw).x;
  r1.x = 0.000000000e+000 < r1.x;
  r1.xy = r1.xx ? float2(2.000000e+000,5.000000e-001) : float2(1.000000e+000,1.000000e+000);
  r2.w = 1.000000000e+000;
  r3.y = 0.000000000e+000;
  r4.xyz = float3(0.000000e+000,0.000000e+000,0.000000e+000);
  r1.z = 0.000000000e+000;
  while (true) {
    r1.w = (int)r1.z >= (int)r1.x;
    if (r1.w != 0) break;
    r3.zw = icb[r1.z].xx * g_invScreenSize.xy;
    r3.zw = v0.xy * g_invScreenSize.xy + r3.zw;
    r5.xyzw = g_gbufferTexture0.Load(r0.xyw,r1.z).xyzw;
    r6.xyzw = g_gbufferTexture1.Load(r0.xyw,r1.z).xyzw;
    r1.w = g_gbufferTexture2.Load(r0.xyw,r1.z).w;
    r2.z = g_depthTexture.Load(r0.xyw,r1.z).x;
    r1.w = 2.550000000e+002 * r1.w;
    r1.w = round(r1.w);
    r1.w = (int)r1.w;
    r4.w = r1.w == 4;
    if (r4.w != 0) {
      r7.xyzw = g_gbufferTexture4.Load(r0.xyz,r1.z).xyzw;
      r8.xyzw = r5.xyzw * float4(4.000000e+000,4.000000e+000,4.000000e+000,4.000000e+000) + float4(-2.000000e+000,-2.000000e+000,-2.000000e+000,-2.000000e+000);
      r9.x = dot(r8.xy, r8.xy);
      r9.zw = -r9.xx * float2(2.500000e-001,5.000000e-001) + float2(1.000000e+000,1.000000e+000);
      r9.z = max(r9.z, 0.000000000e+000);
      r9.z = sqrt(r9.z);
      r9.xy = r9.zz * r8.xy;
      r8.x = dot(r9.xyw, r9.xyw);
      r8.x = rsqrt(r8.x);
      r9.xyz = r9.xyw * r8.xxx;
      r8.x = dot(r8.zw, r8.zw);
      r10.zw = -r8.xx * float2(2.500000e-001,5.000000e-001) + float2(1.000000e+000,1.000000e+000);
      r8.x = max(r10.z, 0.000000000e+000);
      r8.x = sqrt(r8.x);
      r10.xy = r8.zw * r8.xx;
      r8.x = dot(r10.xyw, r10.xyw);
      r8.x = rsqrt(r8.x);
      r8.xyz = r10.xyw * r8.xxx;
      r7.x = dot(r7.xy, float2(6.528000e+004,2.550000e+002));
      r7.x = round(r7.x);
      r7.y = 3.125000000e-002 * r7.x;
      r7.y = trunc(r7.y);
      r10.z = r7.x * 3.125000000e-002 + -r7.y;
      r7.x = 1.562500000e-002 * r7.y;
      r10.x = trunc(r7.x);
      r10.y = r7.y * 1.562500000e-002 + -r10.x;
      r10.xyz = float3(3.225806e-002,1.015873e+000,1.032258e+000) * r10.xyz;
      r7.xy = float2(2.550000e+002,2.550000e+002) * r7.zw;
      r7.xy = round(r7.xy);
      r7.zw = float2(6.250000e-002,6.250000e-002) * r7.xy;
      r11.xy = trunc(r7.zw);
      r11.zw = r7.xy * float2(6.250000e-002,6.250000e-002) + -r11.xy;
      r7.xw = float2(1.066667e+000,6.666667e-002) * r11.wy;
      r7.yz = r11.xz * float2(8.000001e-001,1.280000e+001) + float2(1.000000e+000,1.000000e+000);
      r7.yz = exp2(r7.yz);
      r7.yz = r7.yz * float2(1.443000e+000,1.443000e+000) + float2(1.443000e+000,1.443000e+000);
      r11.xyzw = r6.xyzw * r6.xyzw;
      r12.xyz = r11.www;
    } else {
      r5.xyz = r5.xyz * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
      r8.w = dot(r5.xyz, r5.xyz);
      r8.w = rsqrt(r8.w);
      r9.xyz = r8.www * r5.xyz;
      r6.xyzw = r6.xyzw * r6.xyzw;
      r5.x = r1.w == 5;
      if (r5.x != 0) {
        r11.xyz = r6.xyz * r6.www;
        r12.xyz = r6.xyz;
      } else {
        r1.w = r1.w == 1;
        if (r1.w != 0) {
          r12.xyz = r6.www * r6.xyz;
        } else {
          r12.xyz = r6.www;
        }
        r11.xyz = r6.xyz;
      }
      r1.w = 0.000000000e+000 < r12.x;
      r1.w = r1.w ? r5.w : 0;
      r1.w = r1.w * 1.200000000e+001 + 1.000000000e+000;
      r1.w = exp2(r1.w);
      r3.x = r1.w * 1.442999959e+000 + 1.442999959e+000;
      r8.xyz = float3(0.000000e+000,0.000000e+000,0.000000e+000);
      r7.yz = r3.xy;
      r7.xw = float2(0.000000e+000,0.000000e+000);
      r10.xyz = float3(0.000000e+000,0.000000e+000,0.000000e+000);
    }
    r3.xz = r3.zw * float2(2.000000e+000,2.000000e+000) + float2(-1.000000e+000,-1.000000e+000);
    r2.xy = float2(1.000000e+000,-1.000000e+000) * r3.xz;
    r5.x = dot(r2.xyzw, g_invViewProjMatrix._m00_m10_m20_m30);
    r5.y = dot(r2.xyzw, g_invViewProjMatrix._m01_m11_m21_m31);
    r5.z = dot(r2.xyzw, g_invViewProjMatrix._m02_m12_m22_m32);
    r1.w = dot(r2.xyzw, g_invViewProjMatrix._m03_m13_m23_m33);
    r1.w = 1.000000e+000 / r1.w;


float4 r28, r26, r27;
r26.xyz = r5.xyz * r1.www;
r26.w = 1.0;
r28.x = dot(r26.xyzw, b1.xyzw);
r28.y = dot(r26.xyzw, b2.xyzw);
r28.z = dot(r26.xyzw, b3.xyzw);
r28.w = dot(r26.xyzw, b4.xyzw);
float4 stereo = StereoParams.Load(0);
r28.x -= stereo.x * (r28.w - stereo.y); 
r26.x = dot(r28.xyzw, a1.xyzw);
r26.y = dot(r28.xyzw, a2.xyzw);
r26.z = dot(r28.xyzw, a3.xyzw);
r26.w = dot(r28.xyzw, a4.xyzw);
r5.xyz = r26.xyz / r1.www;

    r2.xyz = r5.xyz * r1.www;


    r3.xzw = r5.xyz * r1.www + -v1.xyz;
    r3.x = dot(r3.xzw, v4.xyz);
    r3.x = v4.w * r3.x;
    r3.x = max(r3.x, -5.000000000e-001);
    r3.x = min(r3.x, 5.000000000e-001);
    r3.xzw = r3.xxx * v4.xyz + v1.xyz;
    r5.w = dot(r2.xyz, r2.xyz);
    r5.w = rsqrt(r5.w);
    r2.xyz = r5.www * r2.xyz;
    r3.xzw = -r5.xyz * r1.www + r3.xzw;
    r1.w = dot(r3.xzw, r3.xzw);
    r5.x = rsqrt(r1.w);
    r5.yzw = r5.xxx * r3.xzw;
    r1.w = v3.w + r1.w;
    r1.w = 1.000000e+000 / r1.w;
    r1.w = v1.w + r1.w;
    r1.w = max(r1.w, 0.000000000e+000);
    r5.y = dot(r9.xyz, r5.yzw);
    r5.z = saturate(r5.y);
    r6.xyz = v2.xyz * r5.zzz;
    r6.xyz = r6.xyz * r1.www;
    if (r4.w != 0) {
      r7.x = saturate(r7.x);
      r5.y = r7.x * 5.000000000e-001 + r5.y;
      r5.z = r7.x * 5.000000000e-001 + 1.000000000e+000;
      r5.y = saturate(r5.y / r5.z);
      r5.yzw = v2.xyz * r5.yyy;
      r5.yzw = r5.yzw * r1.www;
      r13.xyz = -r9.xyz * r7.www + r8.xyz;
      r1.w = dot(r13.xyz, r13.xyz);
      r1.w = rsqrt(r1.w);
      r13.xyz = r13.xyz * r1.www;
      r14.xyz = r3.xzw * r5.xxx + -r2.xyz;
      r1.w = dot(r14.xyz, r14.xyz);
      r1.w = rsqrt(r1.w);
      r14.xyz = r14.xyz * r1.www;
      r1.w = dot(r8.xyz, r14.xyz);
      r1.w = -r1.w * r1.w + 1.000000000e+000;
      r1.w = max(r1.w, 0.000000000e+000);
      r1.w = sqrt(r1.w);
      r1.w = log2(r1.w);
      r1.w = r7.y * r1.w;
      r1.w = exp2(r1.w);
      r6.w = dot(r13.xyz, r14.xyz);
      r6.w = -r6.w * r6.w + 1.000000000e+000;
      r6.w = max(r6.w, 0.000000000e+000);
      r6.w = sqrt(r6.w);
      r6.w = log2(r6.w);
      r6.w = r7.z * r6.w;
      r6.w = exp2(r6.w);
      r7.xzw = r6.www * r10.xyz;
      r7.xzw = r1.www * r12.xxx + r7.xzw;
      r7.xzw = r7.xzw * r6.xyz;
      r7.xzw = v2.www * r7.xzw;
      r7.xzw = float3(1.500000e-001,1.500000e-001,1.500000e-001) * r7.xzw;
      r6.xyz = r5.yzw;
    } else {
      r2.xyz = r3.xzw * r5.xxx + -r2.xyz;
      r1.w = dot(r2.xyz, r2.xyz);
      r1.w = rsqrt(r1.w);
      r2.xyz = r2.xyz * r1.www;
      r1.w = saturate(dot(r9.xyz, r2.xyz));
      r2.x = r7.y * 8.662509918e-002 + 8.750000000e-001;
      r1.w = r1.w * r7.y + -r7.y;
      r1.w = exp2(r1.w);
      r1.w = r2.x * r1.w;
      r2.xyz = r6.xyz * r1.www;
      r7.xzw = v2.www * r2.xyz;
    }
    if (r4.w == 0) {
      r7.xzw = r7.xzw * r12.xyz;
    }
    r2.xyz = r6.xyz * r11.xyz + r7.xzw;
    r4.xyz = r4.xyz + r2.xyz;
    r1.z = (int)r1.z + 1;
  }
  o0.xyz = r4.xyz * r1.yyy;
  o0.w = 0.000000000e+000;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ HLSL errors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
E:\Program Files (x86)\Origin Games\Dragon Age Inquisition\wrapper1349(44,15-49): warning X3206: 'Load': implicit truncation of vector type
E:\Program Files (x86)\Origin Games\Dragon Age Inquisition\wrapper1349(45,15-49): warning X3206: 'Load': implicit truncation of vector type
E:\Program Files (x86)\Origin Games\Dragon Age Inquisition\wrapper1349(46,12-46): warning X3206: 'Load': implicit truncation of vector type
E:\Program Files (x86)\Origin Games\Dragon Age Inquisition\wrapper1349(47,12-43): warning X3206: 'Load': implicit truncation of vector type
E:\Program Files (x86)\Origin Games\Dragon Age Inquisition\wrapper1349(53,17-51): warning X3206: 'Load': implicit truncation of vector type
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
