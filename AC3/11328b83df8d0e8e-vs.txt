//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4x4 g_WorldViewProj;          // Offset:    0 Size:    64
//   float4 g_FogColor;                 // Offset:  256 Size:    16 [unused]
//   float4 g_FogParams;                // Offset:  272 Size:    16 [unused]
//   float4 g_FogWeatherParams;         // Offset: 1440 Size:    16 [unused]
//   float4 g_FogSunBackColor;          // Offset:  496 Size:    16 [unused]
//   float4 g_WrinkleArray[11];         // Offset: 1024 Size:   176
//   float4 g_BoneMatrixArray[126];     // Offset: 1920 Size:  2016
//   float4 g_SkinConstants;            // Offset: 1248 Size:    16
//   float4x4 g_World;                  // Offset:  128 Size:    64
//   float4 g_ClipPlane;                // Offset:  288 Size:    16
//   float4 g_EyePosition;              // Offset:  192 Size:    16
//   float4 g_DeconstructionEnabledDX11;// Offset: 1472 Size:    16
//   float2 g_DeconstructionRanges;     // Offset: 1856 Size:     8
//   bool g_DeconstructionEnabledOther; // Offset: 3936 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// $Globals                          cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// NORMAL                   0   xyzw        1     NONE    uint   xyz 
// TANGENT                  0   xyzw        2     NONE    uint   xyz 
// BINORMAL                 0   xyzw        3     NONE    uint   xyz 
// TEXCOORD                 0   xy          4     NONE   float   xy  
// BLENDINDICES             0   xyzw        5     NONE    uint   xyzw
// BLENDWEIGHT              0   xyzw        6     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
vs_4_0
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[246], dynamicIndexed
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xyz
dcl_input v3.xyz
dcl_input v4.xy
dcl_input v5.xyzw
dcl_input v6.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_temps 8
ne r0.x, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[92].x
add r0.y, -cb0[116].x, cb0[116].y
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
mov r1.w, l(1.000000)
mul r2.xyz, v0.xyzx, cb0[78].xxxx
mov r2.w, l(1.000000)
imul null, r3.xyzw, v5.xyzw, l(3, 3, 3, 3)
dp4 r4.x, r2.xyzw, cb0[r3.y + 120].xyzw
imad r5.xyzw, v5.xxyy, l(3, 3, 3, 3), l(1, 2, 1, 2)
dp4 r4.y, r2.xyzw, cb0[r5.z + 120].xyzw
dp4 r4.z, r2.xyzw, cb0[r5.w + 120].xyzw
mul r4.xyz, r4.xyzx, v6.yyyy
dp4 r6.x, r2.xyzw, cb0[r3.x + 120].xyzw
dp4 r6.y, r2.xyzw, cb0[r5.x + 120].xyzw
dp4 r6.z, r2.xyzw, cb0[r5.y + 120].xyzw
mad r4.xyz, r6.xyzx, v6.xxxx, r4.xyzx
dp4 r6.x, r2.xyzw, cb0[r3.z + 120].xyzw
imad r7.xyzw, v5.zzww, l(3, 3, 3, 3), l(1, 2, 1, 2)
dp4 r6.y, r2.xyzw, cb0[r7.x + 120].xyzw
dp4 r6.z, r2.xyzw, cb0[r7.y + 120].xyzw
mad r4.xyz, r6.xyzx, v6.zzzz, r4.xyzx
dp4 r6.x, r2.xyzw, cb0[r3.w + 120].xyzw
dp4 r6.y, r2.xyzw, cb0[r7.z + 120].xyzw
dp4 r6.z, r2.xyzw, cb0[r7.w + 120].xyzw
mad r1.xyz, r6.xyzx, v6.wwww, r4.xyzx
add r2.xyzw, r1.xyzw, -cb0[12].xyzw
dp4 r0.z, r2.xyzw, r2.xyzw
sqrt r0.z, r0.z
add r0.z, r0.z, -cb0[116].x
mul_sat r0.y, r0.y, r0.z
mad r0.z, r0.y, l(-2.000000), l(3.000000)
mul r0.y, r0.y, r0.y
mul r0.y, r0.y, r0.z
mul r2.xy, v4.xyxx, l(16.000000, 16.000000, 0.000000, 0.000000)
mov r2.zw, l(0,0,0,0)
add r4.xyz, -r1.xyzx, r2.xywx
mov o2.xyzw, r2.xyzw
mad r0.yzw, r0.yyyy, r4.xxyz, r1.xxyz
movc r0.xyz, r0.xxxx, r0.yzwy, r1.xyzx
mov r0.w, l(1.000000)
dp4 r1.x, r0.xyzw, cb0[0].xyzw
dp4 r1.y, r0.xyzw, cb0[1].xyzw
dp4 r1.z, r0.xyzw, cb0[2].xyzw
dp4 r1.w, r0.xyzw, cb0[3].xyzw
mov o0.xyzw, r1.xyzw
mov o1.xyzw, r1.xyzw
itof r1.xyzw, v5.xyzw
mul r1.xyzw, r1.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
round_ni r1.xyzw, r1.xyzw
ftoi r1.xyzw, r1.xyzw
imad r2.xyzw, l(-4, -4, -4, -4), r1.xyzw, v5.xyzw
dp4 r4.x, cb0[r1.x + 64].xyzw, icb[r2.x + 0].xyzw
dp4 r4.y, cb0[r1.y + 64].xyzw, icb[r2.y + 0].xyzw
dp4 r4.z, cb0[r1.z + 64].xyzw, icb[r2.z + 0].xyzw
dp4 r4.w, cb0[r1.w + 64].xyzw, icb[r2.w + 0].xyzw
dp4 o3.w, r4.xyzw, v6.xyzw
utof r1.xyz, v1.xyzx
add r1.xyz, r1.xyzx, l(-127.000000, -127.000000, -127.000000, 0.000000)
mul r1.xyz, r1.xyzx, l(0.007874, 0.007874, 0.007874, 0.000000)
dp3 r2.x, r1.xyzx, cb0[r3.y + 120].xyzx
dp3 r2.y, r1.xyzx, cb0[r5.z + 120].xyzx
dp3 r2.z, r1.xyzx, cb0[r5.w + 120].xyzx
mul r2.xyz, r2.xyzx, v6.yyyy
dp3 r4.x, r1.xyzx, cb0[r3.x + 120].xyzx
dp3 r4.y, r1.xyzx, cb0[r5.x + 120].xyzx
dp3 r4.z, r1.xyzx, cb0[r5.y + 120].xyzx
mad r2.xyz, r4.xyzx, v6.xxxx, r2.xyzx
dp3 r4.x, r1.xyzx, cb0[r3.z + 120].xyzx
dp3 r4.y, r1.xyzx, cb0[r7.x + 120].xyzx
dp3 r4.z, r1.xyzx, cb0[r7.y + 120].xyzx
mad r2.xyz, r4.xyzx, v6.zzzz, r2.xyzx
dp3 r4.x, r1.xyzx, cb0[r3.w + 120].xyzx
dp3 r4.y, r1.xyzx, cb0[r7.z + 120].xyzx
dp3 r4.z, r1.xyzx, cb0[r7.w + 120].xyzx
mad r1.xyz, r4.xyzx, v6.wwww, r2.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
mov o3.xyz, r1.xyzx
dp4 r1.w, r0.xyzw, cb0[11].xyzw
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
dp4 r2.x, r0.xyzw, cb0[8].xyzw
dp4 r2.y, r0.xyzw, cb0[9].xyzw
dp4 r2.z, r0.xyzw, cb0[10].xyzw
mul r0.xyz, r1.wwww, r2.xyzx
dp3 r0.w, r0.xyzx, cb0[18].xyzx
mov o4.xyz, r0.xyzx
add o4.w, r0.w, -cb0[18].w
utof r0.xyz, v2.xyzx
add r0.xyz, r0.xyzx, l(-127.000000, -127.000000, -127.000000, 0.000000)
mul r0.xyz, r0.xyzx, l(0.007874, 0.007874, 0.007874, 0.000000)
dp3 r2.x, r0.xyzx, cb0[r3.y + 120].xyzx
dp3 r2.y, r0.xyzx, cb0[r5.z + 120].xyzx
dp3 r2.z, r0.xyzx, cb0[r5.w + 120].xyzx
mul r2.xyz, r2.xyzx, v6.yyyy
dp3 r4.x, r0.xyzx, cb0[r3.x + 120].xyzx
dp3 r4.y, r0.xyzx, cb0[r5.x + 120].xyzx
dp3 r4.z, r0.xyzx, cb0[r5.y + 120].xyzx
mad r2.xyz, r4.xyzx, v6.xxxx, r2.xyzx
dp3 r4.x, r0.xyzx, cb0[r3.z + 120].xyzx
dp3 r4.y, r0.xyzx, cb0[r7.x + 120].xyzx
dp3 r4.z, r0.xyzx, cb0[r7.y + 120].xyzx
mad r2.xyz, r4.xyzx, v6.zzzz, r2.xyzx
dp3 r4.x, r0.xyzx, cb0[r3.w + 120].xyzx
dp3 r4.y, r0.xyzx, cb0[r7.z + 120].xyzx
dp3 r4.z, r0.xyzx, cb0[r7.w + 120].xyzx
mad r0.xyz, r4.xyzx, v6.wwww, r2.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 o5.x, r0.xyzx, cb0[8].xyzx
dp3 o5.y, r0.xyzx, cb0[9].xyzx
dp3 o5.z, r0.xyzx, cb0[10].xyzx
mov o5.w, l(0)
utof r0.xyz, v3.xyzx
add r0.xyz, r0.xyzx, l(-127.000000, -127.000000, -127.000000, 0.000000)
mul r0.xyz, r0.xyzx, l(0.007874, 0.007874, 0.007874, 0.000000)
dp3 r2.x, r0.xyzx, cb0[r3.y + 120].xyzx
dp3 r2.y, r0.xyzx, cb0[r5.z + 120].xyzx
dp3 r2.z, r0.xyzx, cb0[r5.w + 120].xyzx
mul r2.xyz, r2.xyzx, v6.yyyy
dp3 r4.x, r0.xyzx, cb0[r3.x + 120].xyzx
dp3 r4.y, r0.xyzx, cb0[r5.x + 120].xyzx
dp3 r4.z, r0.xyzx, cb0[r5.y + 120].xyzx
mad r2.xyz, r4.xyzx, v6.xxxx, r2.xyzx
dp3 r3.x, r0.xyzx, cb0[r3.z + 120].xyzx
dp3 r4.x, r0.xyzx, cb0[r3.w + 120].xyzx
dp3 r3.y, r0.xyzx, cb0[r7.x + 120].xyzx
dp3 r3.z, r0.xyzx, cb0[r7.y + 120].xyzx
mad r2.xyz, r3.xyzx, v6.zzzz, r2.xyzx
dp3 r4.y, r0.xyzx, cb0[r7.z + 120].xyzx
dp3 r4.z, r0.xyzx, cb0[r7.w + 120].xyzx
mad r0.xyz, r4.xyzx, v6.wwww, r2.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 o6.x, r0.xyzx, cb0[8].xyzx
dp3 o6.y, r0.xyzx, cb0[9].xyzx
dp3 o6.z, r0.xyzx, cb0[10].xyzx
mov o6.w, l(0)
dp3 o7.x, r1.xyzx, cb0[8].xyzx
dp3 o7.y, r1.xyzx, cb0[9].xyzx
dp3 o7.z, r1.xyzx, cb0[10].xyzx
mov o7.w, l(0)
ret 
// Approximately 145 instruction slots used
 