
cbuffer _Globals : register(b0)
{
  float4 g_ViewportScaleOffset : packoffset(c84);

  struct
  {
    float4 m_PositionFar;
    float4 m_ColorFade;
  } g_DeferredOmniLight : packoffset(c128);


  struct
  {
    float3 m_Direction;
    float3 m_Color;
  } g_DeferredDirectLight : packoffset(c130);


  struct
  {
    float4 m_PositionFar;
    float4 m_ColorFade;
    float3 m_Direction;
    float4 m_ConeAngles;
  } g_DeferredSpotLight : packoffset(c132);

  float4 g_DeferredProjWorldToLight[4] : packoffset(c136);
  float4 g_DeferredProjShadowParams : packoffset(c140);
  float4 g_DeferredBackgroundColor : packoffset(c141);
  float4 g_VPOSToUVs_Resolve : packoffset(c146);
  float4 g_ReverseProjectionParams : packoffset(c100);
  float2 g_ReverseProjectionParams2 : packoffset(c101);
  float4x4 g_ViewToWorld : packoffset(c102);
  float4x4 g_WorldToView : packoffset(c106);
  float4 g_EyePosition : packoffset(c12);
  float4 g_DepthParams : packoffset(c110);
  float4 g_LinearFogColor : packoffset(c16);
  float4 g_LinearFogParams : packoffset(c17);
  float4x4 g_WorldViewProj : packoffset(c0);
  float4 g_EyeXAxis : packoffset(c8);
  float4 g_EyeYAxis : packoffset(c9);
  float4 g_EyeZAxis : packoffset(c10);
  float4 g_EyeWorldPosition_Resolve : packoffset(c11);

  struct
  {
    float4 m_CloudUVScaleOffset;
    float4 m_CloudShadowsParams;
    float4 m_ShadowMapSize;
    float4 m_OffsetsY;
    float4 m_OffsetsX;
    float4 m_ScalesY;
    float4 m_ScalesX;
    float4 m_OffsetsZ;
    float4 m_ScalesZ;
    float4 m_OffsetsW;
    float4 m_ScalesW;
    float4 m_NoiseScale;
    float4 m_NearFar;
    float4 m_FadeParams;
    float4 m_CascadesRangesMax;
    float4 m_ShadowContrast;
    float4x4 m_WorldToLightProj;
  } g_Shadows : packoffset(c64);


  struct
  {
    float4 m_UseHQFiltering;
  } g_ShadowPerfOptions : packoffset(c63);

  float4 g_WorldLightmapParameters : packoffset(c87);
  float4 g_WorldLightmapUVParameters : packoffset(c88);
  float4 g_WorldLightmapColor : packoffset(c89);
  float4 g_WorldAOParameters : packoffset(c90);
  float4 g_WorldAORangeParameters : packoffset(c91);
  float4 g_WeatherExposedParams : packoffset(c92);
  float4 g_WinterParams : packoffset(c93);
  float4 g_SnowSparklesParams : packoffset(c94);
  float4 g_DebugValue : packoffset(c147) = float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);

  struct
  {
    float2 m_VPOS;
    float3 m_ShadowResult;
    float3 m_WorldPosition;
    float3 m_WorldNormal;
    float3 m_WorldEyeVector;
    float3 m_NormalizedWorldEyeVector;
    float m_SpecularPower;
  } c : packoffset(c148);

}
SamplerState g_CloudShadowSampler_s : register(s14);
SamplerComparisonState g_ShadowSampler_s : register(s15);
Texture2DMS<float,4> g_TextureDepthDX11_MSAA : register(t2);
Texture2D<float4> g_CloudShadowSampler : register(t14);
Texture2D<float4> g_ShadowTexture : register(t15);

Texture2D<float4> StereoParams : register(t125);
Texture2D<float4> InjectedDepthTexture : register(t126);

void main(
  float4 injectedScreenPos : SV_Position,
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  float3 v2 : TEXCOORD1,
  float3 v3 : TEXCOORD2,
  uint v4 : SV_SAMPLEINDEX0,
  out float4 o0 : SV_Target0)
{
  float4 zpos4 = InjectedDepthTexture.Load((int3) injectedScreenPos.xyz);
  float zpos = zpos4.x - 1;
  float wpos = 1.0 / zpos;
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15;
  uint4 bitmask;
  r0.xy = v1.xy / v1.ww;
  r0.zw = r0.xy * g_ViewportScaleOffset.xy + g_ViewportScaleOffset.zw;
  g_TextureDepthDX11_MSAA.GetDimensions(r1.x, r1.y, bitmask.x);
  r0.zw = r1.xy * r0.zw;
  r1.xy = (int2)r0.zw;
  r1.zw = float2(0.000000e+000,0.000000e+000);
  r0.z = g_TextureDepthDX11_MSAA.Load(r1.xyz,v4.x).x;
  r0.z = g_ReverseProjectionParams.z + r0.z;
  r1.z = g_ReverseProjectionParams.w / r0.z;
  r0.xy = g_ReverseProjectionParams2.xy + r0.xy;
  r0.xy = g_ReverseProjectionParams.xy * r0.xy;
  r1.xy = r0.xy * r1.zz;
  r1.w = 1.000000000e+000;

//Stereo Shift
float4 stereoParams = StereoParams.Load(0);
r1.x +=  stereoParams.x * (-r1.z - stereoParams.y) * g_ReverseProjectionParams.x;


  r0.x = dot(r1.xyzw, g_ViewToWorld._m00_m10_m20_m30);
  r0.y = dot(r1.xyzw, g_ViewToWorld._m01_m11_m21_m31);
  r0.z = dot(r1.xyzw, g_ViewToWorld._m02_m12_m22_m32);
  r0.w = 1.000000000e+000;
  r1.y = dot(r0.xyzw, g_Shadows.m_WorldToLightProj._m00_m10_m20_m30);
  r1.z = dot(r0.xyzw, g_Shadows.m_WorldToLightProj._m01_m11_m21_m31);
  r1.w = dot(r0.xyzw, g_Shadows.m_WorldToLightProj._m02_m12_m22_m32);
  r2.xyz = r1.yzw * g_Shadows.m_ScalesX.xyz + g_Shadows.m_OffsetsX.xyz;
  r3.xyz = r1.yzw * g_Shadows.m_ScalesY.xyz + g_Shadows.m_OffsetsY.xyz;
  r4.xyz = r1.yzw * g_Shadows.m_ScalesZ.xyz + g_Shadows.m_OffsetsZ.xyz;
  r1.xyz = r1.yzw * g_Shadows.m_ScalesW.xyz + g_Shadows.m_OffsetsW.xyz;
  r5.x = abs(r2.x) < g_Shadows.m_CascadesRangesMax.x;
  r5.y = abs(r2.y) < g_Shadows.m_CascadesRangesMax.x;
  r0.w = r5.y ? r5.x : 0;
  r5.x = abs(r3.x) < g_Shadows.m_CascadesRangesMax.y;
  r5.y = abs(r3.y) < g_Shadows.m_CascadesRangesMax.y;
  r1.w = r5.y ? r5.x : 0;
  r5.x = abs(r4.x) < g_Shadows.m_CascadesRangesMax.z;
  r5.y = abs(r4.y) < g_Shadows.m_CascadesRangesMax.z;
  r2.w = r5.y ? r5.x : 0;
  r5.x = abs(r1.x) < g_Shadows.m_CascadesRangesMax.w;
  r5.y = abs(r1.y) < g_Shadows.m_CascadesRangesMax.w;
  r3.w = r5.y ? r5.x : 0;
  r5.x = r1.w ? r3.x : r2.x;
  r5.y = r1.w ? r3.y : r2.y;
  r5.z = r1.w ? r3.z : r2.z;
  r5.x = r2.w ? r4.x : r5.x;
  r5.y = r2.w ? r4.y : r5.y;
  r5.z = r2.w ? r4.z : r5.z;
  r1.x = r3.w ? r1.x : r5.x;
  r1.y = r3.w ? r1.y : r5.y;
  r1.z = r3.w ? r1.z : r5.z;
  r4.w = r1.w ? g_Shadows.m_OffsetsY.w : g_Shadows.m_OffsetsX.w;
  r4.w = r2.w ? g_Shadows.m_OffsetsZ.w : r4.w;
  r4.w = r3.w ? g_Shadows.m_OffsetsW.w : r4.w;
  r5.xyzw = g_Shadows.m_CascadesRangesMax.yyzz + -abs(-r1.xyxy);
  r5.x = r1.w ? r5.x : 10;
  r5.y = r1.w ? r5.y : 10;
  r5.x = r2.w ? r5.z : r5.x;
  r5.y = r2.w ? r5.w : r5.y;
  r5.zw = g_Shadows.m_CascadesRangesMax.ww + -abs(-r1.xy);
  r5.x = r3.w ? r5.z : r5.x;
  r5.y = r3.w ? r5.w : r5.y;
  r5.xy = saturate(-r5.xy * float2(1.000000e+001,1.000000e+001) + float2(1.000000e+000,1.000000e+000));
  r5.x = max(r5.y, r5.x);
  r0.w = (int)r0.w & (int)r1.w;
  r0.w = (int)r0.w & 0x3f800000;
  r5.y = (int)r1.w & 0x3f800000;
  r0.w = r2.w ? r5.y : r0.w;
  r5.y = (int)r2.w & 0x3f800000;
  r0.w = r3.w ? r5.y : r0.w;
  r5.y = r5.x * r0.w;
  r6.yzw = float3(5.000000e-001,5.000000e-001,5.000000e-001) + r1.xyz;
  r6.x = r6.y * g_Shadows.m_ScalesX.w + r4.w;
  r7.xyzw = r6.zzxx / g_Shadows.m_ShadowMapSize.yyxx;
  r7.xyzw = float4(-3.500000e+000,-3.500000e+000,-3.500000e+000,-3.500000e+000) + r7.xyzw;
  r8.x = floor(r7.w);
  r8.y = floor(r7.y);
  r7.xyzw = -r8.yyxx + r7.xyzw;
  r9.xyzw = float4(8.000000e+000,8.000000e+000,4.000000e+000,2.000000e+000) + r8.xyxy;
  r1.xy = g_Shadows.m_ShadowMapSize.xy * r9.zw;
  r1.x = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r1.xy, r6.w).x;
  r10.xyzw = float4(2.000000e+000,4.000000e+000,6.000000e+000,4.000000e+000) + r8.xyxy;
  r10.xyzw = g_Shadows.m_ShadowMapSize.xyxy * r10.xyzw;
  r1.y = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r10.xy, r6.w).x;
  r1.y = 4.000000000e+000 * r1.y;
  r1.x = r1.x * 4.000000000e+000 + r1.y;
  r8.zw = float2(4.000000e+000,4.000000e+000) + r8.xy;
  r1.yz = g_Shadows.m_ShadowMapSize.xy * r8.zw;
  r1.y = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r1.yz, r6.w).x;
  r1.x = r1.y * 4.000000000e+000 + r1.x;
  r1.y = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r10.zw, r6.w).x;
  r1.x = r1.y * 4.000000000e+000 + r1.x;
  r10.xyzw = float4(4.000000e+000,6.000000e+000,5.000000e-001,0.000000e+000) + r8.xyxw;
  r10.xyzw = g_Shadows.m_ShadowMapSize.xyxy * r10.xyzw;
  r1.y = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r10.xy, r6.w).x;
  r1.x = r1.y * 4.000000000e+000 + r1.x;
  r1.y = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r10.zw, r6.w).x;
  r6.xyz = float3(1.000000e+000,1.000000e+000,2.000000e+000) + -r7.wyw;
  r1.y = dot(r1.yy, r6.xx);
  r1.x = r1.x + r1.y;
  r1.yz = float2(7.500000e+000,0.000000e+000) + r8.xw;
  r1.yz = g_Shadows.m_ShadowMapSize.xy * r1.yz;
  r1.y = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r1.yz, r6.w).x;
  r1.y = dot(r1.yy, r7.ww);
  r1.x = r1.x + r1.y;
  r10.zw = float2(4.000000e+000,5.000000e-001) + r8.xy;
  r1.yz = g_Shadows.m_ShadowMapSize.xy * r10.zw;
  r1.y = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r1.yz, r6.w).x;
  r1.y = r1.y + r1.y;
  r1.x = r1.y * r6.y + r1.x;
  r11.zw = float2(4.000000e+000,7.500000e+000) + r8.xy;
  r1.yz = g_Shadows.m_ShadowMapSize.xy * r11.zw;
  r1.y = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r1.yz, r6.w).x;
  r1.y = dot(r1.yy, r7.yy);
  r1.x = r1.x + r1.y;
  r1.yz = r6.xz + -r7.yy;
  r5.zw = saturate(r1.yz);
  r8.zw = r5.zw * r5.zz;
  r1.y = 1.000000000e+000 + -abs(-r1.y);
  r1.y = max(r1.y, 0.000000000e+000);
  r1.z = -r1.y * 5.000000000e-001 + r5.w;
  r1.y = r1.z * r1.y + r8.w;
  r5.zw = min(r6.yx, r7.wy);
  r9.zw = -r5.zw * float2(5.000000e-001,5.000000e-001) + r6.yx;
  r5.zw = r9.zw * r5.zw;
  r5.zw = r6.yy * r6.xx + r5.zw;
  r1.z = r7.w + r7.y;
  r1.z = saturate(-1.000000000e+000 + r1.z);
  r1.z = r1.z * r1.z;
  r9.zw = -r1.zz * float2(5.000000e-001,5.000000e-001) + float2(1.000000e+000,2.000000e+000);
  r1.z = r8.z * 5.000000000e-001 + r5.z;
  r1.z = max(r1.z, 9.999999825e-014);
  r4.w = r5.z / r1.z;
  r4.w = r8.x + r4.w;
  r10.y = 1.500000000e+000 + r4.w;
  r10.yz = g_Shadows.m_ShadowMapSize.xy * r10.yw;
  r4.w = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r10.yz, r6.w).x;
  r1.x = r4.w * r1.z + r1.x;
  r1.z = r8.z * 5.000000000e-001 + r1.y;
  r1.z = max(r1.z, 9.999999825e-014);
  r1.y = r1.y / r1.z;
  r1.y = r8.x + r1.y;
  r12.y = 5.000000000e-001 + r1.y;
  r13.xyzw = float4(1.500000e+000,2.500000e+000,2.500000e+000,5.500000e+000) + r8.yxyx;
  r12.z = r13.x;
  r8.zw = g_Shadows.m_ShadowMapSize.xy * r12.yz;
  r1.y = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r8.zw, r6.w).x;
  r1.x = r1.y * r1.z + r1.x;
  r1.y = r9.z + r5.w;
  r1.y = max(r1.y, 9.999999825e-014);
  r1.z = r9.z / r1.y;
  r1.z = r8.x + r1.z;
  r14.y = 5.000000000e-001 + r1.z;
  r14.z = r13.z;
  r5.zw = g_Shadows.m_ShadowMapSize.xy * r14.yz;
  r1.z = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r5.zw, r6.w).x;
  r1.x = r1.z * r1.y + r1.x;
  r1.y = 1.000000e+000 / r9.w;
  r1.y = r8.y + r1.y;
  r13.x = 1.500000000e+000 + r1.y;
  r1.yz = g_Shadows.m_ShadowMapSize.xy * r13.yx;
  r1.y = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r1.yz, r6.w).x;
  r1.x = r1.y * r9.w + r1.x;
  r15.xyz = float3(1.000000e+000,2.000000e+000,1.000000e+000) + -r6.xxy;
  r1.yz = r15.xy + -r7.yy;
  r5.zw = saturate(r1.yz);
  r8.zw = r5.zw * r5.zz;
  r1.y = 1.000000000e+000 + -abs(-r1.y);
  r1.y = max(r1.y, 0.000000000e+000);
  r1.z = -r1.y * 5.000000000e-001 + r5.w;
  r1.y = r1.z * r1.y + r8.w;
  r1.z = min(r6.y, r6.x);
  r5.zw = r15.xz * r6.yx;
  r9.zw = -r1.zz * float2(5.000000e-001,5.000000e-001) + r6.yx;
  r9.zw = r9.zw * r1.zz + r5.zw;
  r10.yz = min(r7.yw, r15.xz);
  r12.yw = -r10.yz * float2(5.000000e-001,5.000000e-001) + r15.xz;
  r5.zw = r12.yw * r10.yz + r5.zw;
  r7.xyzw = r6.xxyy + r7.xyzw;
  r7.xyzw = saturate(float4(-1.000000e+000,-1.000000e+000,-1.000000e+000,-1.000000e+000) + r7.xyzw);
  r7.xyzw = r7.xyzw * r7.xyzw;
  r7.xyzw = -r7.xyzw * float4(5.000000e-001,5.000000e-001,5.000000e-001,5.000000e-001) + float4(1.000000e+000,2.000000e+000,1.000000e+000,2.000000e+000);
  r1.z = r8.z * 5.000000000e-001 + r9.z;
  r1.z = max(r1.z, 9.999999825e-014);
  r4.w = r9.z / r1.z;
  r4.w = 1.500000000e+000 + r4.w;
  r10.x = r9.x + -r4.w;
  r10.xy = g_Shadows.m_ShadowMapSize.xy * r10.xw;
  r4.w = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r10.xy, r6.w).x;
  r1.x = r4.w * r1.z + r1.x;
  r1.z = r8.z * 5.000000000e-001 + r1.y;
  r1.z = max(r1.z, 9.999999825e-014);
  r1.y = r1.y / r1.z;
  r1.y = 5.000000000e-001 + r1.y;
  r12.x = r9.x + -r1.y;
  r8.zw = g_Shadows.m_ShadowMapSize.xy * r12.xz;
  r1.y = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r8.zw, r6.w).x;
  r1.x = r1.y * r1.z + r1.x;
  r1.y = r7.x + r5.z;
  r1.y = max(r1.y, 9.999999825e-014);
  r1.z = r7.x / r1.y;
  r1.z = 5.000000000e-001 + r1.z;
  r14.x = r9.x + -r1.z;
  r8.zw = g_Shadows.m_ShadowMapSize.xy * r14.xz;
  r1.z = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r8.zw, r6.w).x;
  r1.x = r1.z * r1.y + r1.x;
  r1.yz = float2(1.000000e+000,1.000000e+000) / r7.yw;
  r1.y = r8.y + r1.y;
  r13.x = 1.500000000e+000 + r1.y;
  r8.zw = g_Shadows.m_ShadowMapSize.xy * r13.wx;
  r1.y = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r8.zw, r6.w).x;
  r1.x = r1.y * r7.y + r1.x;
  r7.xy = r6.xz + -r6.yy;
  r8.zw = saturate(r7.xy);
  r10.xy = r8.zw * r8.zz;
  r1.y = 1.000000000e+000 + -abs(-r7.x);
  r1.y = max(r1.y, 0.000000000e+000);
  r4.w = -r1.y * 5.000000000e-001 + r8.w;
  r1.y = r4.w * r1.y + r10.y;
  r4.w = r10.x * 5.000000000e-001 + r5.w;
  r4.w = max(r4.w, 9.999999825e-014);
  r5.z = r5.w / r4.w;
  r5.z = r8.x + r5.z;
  r11.y = 1.500000000e+000 + r5.z;
  r5.zw = g_Shadows.m_ShadowMapSize.xy * r11.yw;
  r5.z = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r5.zw, r6.w).x;
  r1.x = r5.z * r4.w + r1.x;
  r4.w = r10.x * 5.000000000e-001 + r1.y;
  r4.w = max(r4.w, 9.999999825e-014);
  r1.y = r1.y / r4.w;
  r1.y = r8.x + r1.y;
  r10.z = 5.000000000e-001 + r1.y;
  r10.yw = float2(6.500000e+000,5.500000e+000) + r8.yy;
  r5.zw = g_Shadows.m_ShadowMapSize.xy * r10.zy;
  r1.y = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r5.zw, r6.w).x;
  r1.x = r1.y * r4.w + r1.x;
  r1.y = r9.w + r7.z;
  r1.y = max(r1.y, 9.999999825e-014);
  r4.w = r7.z / r1.y;
  r4.w = r8.x + r4.w;
  r10.x = 5.000000000e-001 + r4.w;
  r5.zw = g_Shadows.m_ShadowMapSize.xy * r10.xw;
  r4.w = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r5.zw, r6.w).x;
  r1.x = r4.w * r1.y + r1.x;
  r1.y = 1.500000000e+000 + r1.z;
  r13.z = r9.y + -r1.y;
  r1.yz = g_Shadows.m_ShadowMapSize.xy * r13.yz;
  r1.y = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r1.yz, r6.w).x;
  r1.x = r1.y * r7.w + r1.x;
  r1.yz = r15.xy + -r6.yy;
  r5.zw = saturate(r1.yz);
  r7.xy = r5.zw * r5.zz;
  r1.y = 1.000000000e+000 + -abs(-r1.y);
  r1.y = max(r1.y, 0.000000000e+000);
  r1.z = -r1.y * 5.000000000e-001 + r5.w;
  r1.y = r1.z * r1.y + r7.y;
  r5.zw = min(r6.xy, r15.zx);
  r7.yz = -r5.zw * float2(5.000000e-001,5.000000e-001) + r15.zx;
  r5.zw = r7.yz * r5.zw;
  r5.zw = r15.zz * r15.xx + r5.zw;
  r1.z = r6.x + r6.y;
  r1.z = saturate(-1.000000000e+000 + r1.z);
  r1.z = r1.z * r1.z;
  r6.xy = -r1.zz * float2(5.000000e-001,5.000000e-001) + float2(1.000000e+000,2.000000e+000);
  r1.z = r7.x * 5.000000000e-001 + r5.z;
  r1.z = max(r1.z, 9.999999825e-014);
  r4.w = r5.z / r1.z;
  r4.w = 1.500000000e+000 + r4.w;
  r11.x = r9.x + -r4.w;
  r7.yz = g_Shadows.m_ShadowMapSize.xy * r11.xw;
  r4.w = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r7.yz, r6.w).x;
  r1.x = r4.w * r1.z + r1.x;
  r1.z = r7.x * 5.000000000e-001 + r1.y;
  r1.z = max(r1.z, 9.999999825e-014);
  r1.y = r1.y / r1.z;
  r1.y = 5.000000000e-001 + r1.y;
  r10.x = r9.x + -r1.y;
  r7.xy = g_Shadows.m_ShadowMapSize.xy * r10.xy;
  r1.y = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r7.xy, r6.w).x;
  r1.x = r1.y * r1.z + r1.x;
  r1.y = r6.x + r5.w;
  r1.y = max(r1.y, 9.999999825e-014);
  r1.z = r6.x / r1.y;
  r1.z = 5.000000000e-001 + r1.z;
  r10.z = r9.x + -r1.z;
  r5.zw = g_Shadows.m_ShadowMapSize.xy * r10.zw;
  r1.z = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r5.zw, r6.w).x;
  r1.x = r1.z * r1.y + r1.x;
  r1.y = 1.000000e+000 / r6.y;
  r1.y = 1.500000000e+000 + r1.y;
  r13.z = r9.y + -r1.y;
  r1.yz = g_Shadows.m_ShadowMapSize.xy * r13.wz;
  r1.y = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r1.yz, r6.w).x;
  r1.x = r1.y * r6.y + r1.x;
  r1.x = g_Shadows.m_ShadowContrast.x * r1.x;
  r1.y = g_Shadows.m_ShadowContrast.x + -1.000000000e+000;
  r1.y = 5.000000000e-001 * r1.y;
  r1.x = saturate(r1.x * 2.439024299e-002 + -r1.y);
  r1.y = 0.000000000e+000 < r5.y;
  if (r1.y != 0) {
  r2.x = r2.w ? r3.x : r2.x;
  r2.y = r2.w ? r3.y : r2.y;
  r2.z = r2.w ? r3.z : r2.z;
  r2.x = r3.w ? r4.x : r2.x;
  r2.y = r3.w ? r4.y : r2.y;
  r2.z = r3.w ? r4.z : r2.z;
  r1.y = r2.w ? g_Shadows.m_OffsetsY.w : g_Shadows.m_OffsetsX.w;
  r1.y = r3.w ? g_Shadows.m_OffsetsZ.w : r1.y;
  r4.yzw = float3(5.000000e-001,5.000000e-001,5.000000e-001) + r2.xyz;
  r4.x = r4.y * g_Shadows.m_ScalesX.w + r1.y;
  r6.xyzw = r4.zzxx / g_Shadows.m_ShadowMapSize.yyxx;
  r6.xyzw = float4(-3.500000e+000,-3.500000e+000,-3.500000e+000,-3.500000e+000) + r6.xyzw;
  r7.x = floor(r6.w);
  r7.y = floor(r6.y);
  r6.xyzw = -r7.yyxx + r6.xyzw;
  r8.xyzw = float4(8.000000e+000,8.000000e+000,4.000000e+000,2.000000e+000) + r7.xyxy;
  r1.yz = g_Shadows.m_ShadowMapSize.xy * r8.zw;
  r1.y = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r1.yz, r4.w).x;
  r9.xyzw = float4(2.000000e+000,4.000000e+000,6.000000e+000,4.000000e+000) + r7.xyxy;
  r9.xyzw = g_Shadows.m_ShadowMapSize.xyxy * r9.xyzw;
  r1.z = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r9.xy, r4.w).x;
  r1.z = 4.000000000e+000 * r1.z;
  r1.y = r1.y * 4.000000000e+000 + r1.z;
  r7.zw = float2(4.000000e+000,4.000000e+000) + r7.xy;
  r2.xy = g_Shadows.m_ShadowMapSize.xy * r7.zw;
  r1.z = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r2.xy, r4.w).x;
  r1.y = r1.z * 4.000000000e+000 + r1.y;
  r1.z = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r9.zw, r4.w).x;
  r1.y = r1.z * 4.000000000e+000 + r1.y;
  r9.xyzw = float4(4.000000e+000,6.000000e+000,5.000000e-001,0.000000e+000) + r7.xyxw;
  r9.xyzw = g_Shadows.m_ShadowMapSize.xyxy * r9.xyzw;
  r1.z = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r9.xy, r4.w).x;
  r1.y = r1.z * 4.000000000e+000 + r1.y;
  r1.z = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r9.zw, r4.w).x;
  r2.xyz = float3(1.000000e+000,1.000000e+000,2.000000e+000) + -r6.wyw;
  r1.z = dot(r1.zz, r2.xx);
  r1.y = r1.y + r1.z;
  r3.xy = float2(7.500000e+000,0.000000e+000) + r7.xw;
  r3.xy = g_Shadows.m_ShadowMapSize.xy * r3.xy;
  r1.z = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r3.xy, r4.w).x;
  r1.z = dot(r1.zz, r6.ww);
  r1.y = r1.y + r1.z;
  r9.zw = float2(4.000000e+000,5.000000e-001) + r7.xy;
  r3.xy = g_Shadows.m_ShadowMapSize.xy * r9.zw;
  r1.z = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r3.xy, r4.w).x;
  r1.z = r1.z + r1.z;
  r1.y = r1.z * r2.y + r1.y;
  r10.zw = float2(4.000000e+000,7.500000e+000) + r7.xy;
  r3.xy = g_Shadows.m_ShadowMapSize.xy * r10.zw;
  r1.z = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r3.xy, r4.w).x;
  r1.z = dot(r1.zz, r6.yy);
  r1.y = r1.y + r1.z;
  r3.xy = r2.xz + -r6.yy;
  r3.yz = saturate(r3.xy);
  r4.xy = r3.yz * r3.yy;
  r1.z = 1.000000000e+000 + -abs(-r3.x);
  r1.z = max(r1.z, 0.000000000e+000);
  r3.x = -r1.z * 5.000000000e-001 + r3.z;
  r1.z = r3.x * r1.z + r4.y;
  r3.xy = min(r2.yx, r6.wy);
  r4.yz = -r3.xy * float2(5.000000e-001,5.000000e-001) + r2.yx;
  r3.xy = r4.yz * r3.xy;
  r3.xy = r2.yy * r2.xx + r3.xy;
  r3.z = r6.w + r6.y;
  r3.z = saturate(-1.000000000e+000 + r3.z);
  r3.z = r3.z * r3.z;
  r4.yz = -r3.zz * float2(5.000000e-001,5.000000e-001) + float2(1.000000e+000,2.000000e+000);
  r3.z = r4.x * 5.000000000e-001 + r3.x;
  r3.z = max(r3.z, 9.999999825e-014);
  r3.x = r3.x / r3.z;
  r3.x = r7.x + r3.x;
  r9.y = 1.500000000e+000 + r3.x;
  r5.zw = g_Shadows.m_ShadowMapSize.xy * r9.yw;
  r3.x = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r5.zw, r4.w).x;
  r1.y = r3.x * r3.z + r1.y;
  r3.x = r4.x * 5.000000000e-001 + r1.z;
  r3.x = max(r3.x, 9.999999825e-014);
  r1.z = r1.z / r3.x;
  r1.z = r7.x + r1.z;
  r11.y = 5.000000000e-001 + r1.z;
  r12.xyzw = float4(1.500000e+000,2.500000e+000,2.500000e+000,5.500000e+000) + r7.yxyx;
  r11.z = r12.x;
  r5.zw = g_Shadows.m_ShadowMapSize.xy * r11.yz;
  r1.z = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r5.zw, r4.w).x;
  r1.y = r1.z * r3.x + r1.y;
  r1.z = r4.y + r3.y;
  r1.z = max(r1.z, 9.999999825e-014);
  r3.x = r4.y / r1.z;
  r3.x = r7.x + r3.x;
  r3.y = 5.000000000e-001 + r3.x;
  r3.z = r12.z;
  r4.xy = g_Shadows.m_ShadowMapSize.xy * r3.yz;
  r3.y = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r4.xy, r4.w).x;
  r1.y = r3.y * r1.z + r1.y;
  r1.z = 1.000000e+000 / r4.z;
  r1.z = r7.y + r1.z;
  r12.x = 1.500000000e+000 + r1.z;
  r4.xy = g_Shadows.m_ShadowMapSize.xy * r12.yx;
  r1.z = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r4.xy, r4.w).x;
  r1.y = r1.z * r4.z + r1.y;
  r4.xyz = float3(1.000000e+000,2.000000e+000,1.000000e+000) + -r2.xxy;
  r5.zw = r4.xy + -r6.yy;
  r7.zw = saturate(r5.zw);
  r8.zw = r7.zw * r7.zz;
  r1.z = 1.000000000e+000 + -abs(-r5.z);
  r1.z = max(r1.z, 0.000000000e+000);
  r3.y = -r1.z * 5.000000000e-001 + r7.w;
  r1.z = r3.y * r1.z + r8.w;
  r3.y = min(r2.y, r2.x);
  r5.zw = r4.xz * r2.yx;
  r7.zw = -r3.yy * float2(5.000000e-001,5.000000e-001) + r2.yx;
  r7.zw = r7.zw * r3.yy + r5.zw;
  r9.yz = min(r4.xz, r6.yw);
  r11.yw = -r9.yz * float2(5.000000e-001,5.000000e-001) + r4.xz;
  r5.zw = r11.yw * r9.yz + r5.zw;
  r6.xyzw = r2.xxyy + r6.xyzw;
  r6.xyzw = saturate(float4(-1.000000e+000,-1.000000e+000,-1.000000e+000,-1.000000e+000) + r6.xyzw);
  r6.xyzw = r6.xyzw * r6.xyzw;
  r6.xyzw = -r6.xyzw * float4(5.000000e-001,5.000000e-001,5.000000e-001,5.000000e-001) + float4(1.000000e+000,2.000000e+000,1.000000e+000,2.000000e+000);
  r3.y = r8.z * 5.000000000e-001 + r7.z;
  r3.y = max(r3.y, 9.999999825e-014);
  r7.z = r7.z / r3.y;
  r7.z = 1.500000000e+000 + r7.z;
  r9.x = r8.x + -r7.z;
  r9.xy = g_Shadows.m_ShadowMapSize.xy * r9.xw;
  r7.z = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r9.xy, r4.w).x;
  r1.y = r7.z * r3.y + r1.y;
  r3.y = r8.z * 5.000000000e-001 + r1.z;
  r3.y = max(r3.y, 9.999999825e-014);
  r1.z = r1.z / r3.y;
  r1.z = 5.000000000e-001 + r1.z;
  r11.x = r8.x + -r1.z;
  r8.zw = g_Shadows.m_ShadowMapSize.xy * r11.xz;
  r1.z = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r8.zw, r4.w).x;
  r1.y = r1.z * r3.y + r1.y;
  r1.z = r6.x + r5.z;
  r1.z = max(r1.z, 9.999999825e-014);
  r3.y = r6.x / r1.z;
  r3.y = 5.000000000e-001 + r3.y;
  r3.x = r8.x + -r3.y;
  r3.xy = g_Shadows.m_ShadowMapSize.xy * r3.xz;
  r3.x = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r3.xy, r4.w).x;
  r1.y = r3.x * r1.z + r1.y;
  r3.xy = float2(1.000000e+000,1.000000e+000) / r6.yw;
  r1.z = r7.y + r3.x;
  r12.x = 1.500000000e+000 + r1.z;
  r3.xz = g_Shadows.m_ShadowMapSize.xy * r12.wx;
  r1.z = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r3.xz, r4.w).x;
  r1.y = r1.z * r6.y + r1.y;
  r3.xz = r2.xz + -r2.yy;
  r6.xy = saturate(r3.xz);
  r8.zw = r6.xy * r6.xx;
  r1.z = 1.000000000e+000 + -abs(-r3.x);
  r1.z = max(r1.z, 0.000000000e+000);
  r2.z = -r1.z * 5.000000000e-001 + r6.y;
  r1.z = r2.z * r1.z + r8.w;
  r2.z = r8.z * 5.000000000e-001 + r5.w;
  r2.z = max(r2.z, 9.999999825e-014);
  r3.x = r5.w / r2.z;
  r3.x = r7.x + r3.x;
  r10.y = 1.500000000e+000 + r3.x;
  r3.xz = g_Shadows.m_ShadowMapSize.xy * r10.yw;
  r3.x = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r3.xz, r4.w).x;
  r1.y = r3.x * r2.z + r1.y;
  r2.z = r8.z * 5.000000000e-001 + r1.z;
  r2.z = max(r2.z, 9.999999825e-014);
  r1.z = r1.z / r2.z;
  r1.z = r7.x + r1.z;
  r9.z = 5.000000000e-001 + r1.z;
  r9.yw = float2(6.500000e+000,5.500000e+000) + r7.yy;
  r3.xz = g_Shadows.m_ShadowMapSize.xy * r9.zy;
  r1.z = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r3.xz, r4.w).x;
  r1.y = r1.z * r2.z + r1.y;
  r1.z = r7.w + r6.z;
  r1.z = max(r1.z, 9.999999825e-014);
  r2.z = r6.z / r1.z;
  r2.z = r7.x + r2.z;
  r9.x = 5.000000000e-001 + r2.z;
  r3.xz = g_Shadows.m_ShadowMapSize.xy * r9.xw;
  r2.z = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r3.xz, r4.w).x;
  r1.y = r2.z * r1.z + r1.y;
  r1.z = 1.500000000e+000 + r3.y;
  r12.z = r8.y + -r1.z;
  r3.xy = g_Shadows.m_ShadowMapSize.xy * r12.yz;
  r1.z = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r3.xy, r4.w).x;
  r1.y = r1.z * r6.w + r1.y;
  r3.xy = r4.xy + -r2.yy;
  r3.yz = saturate(r3.xy);
  r5.zw = r3.yz * r3.yy;
  r1.z = 1.000000000e+000 + -abs(-r3.x);
  r1.z = max(r1.z, 0.000000000e+000);
  r2.z = -r1.z * 5.000000000e-001 + r3.z;
  r1.z = r2.z * r1.z + r5.w;
  r3.xy = min(r2.xy, r4.zx);
  r6.xy = -r3.xy * float2(5.000000e-001,5.000000e-001) + r4.zx;
  r3.xy = r6.xy * r3.xy;
  r3.xy = r4.zz * r4.xx + r3.xy;
  r2.x = r2.x + r2.y;
  r2.x = saturate(-1.000000000e+000 + r2.x);
  r2.x = r2.x * r2.x;
  r2.xy = -r2.xx * float2(5.000000e-001,5.000000e-001) + float2(1.000000e+000,2.000000e+000);
  r2.z = r5.z * 5.000000000e-001 + r3.x;
  r2.z = max(r2.z, 9.999999825e-014);
  r3.x = r3.x / r2.z;
  r3.x = 1.500000000e+000 + r3.x;
  r10.x = r8.x + -r3.x;
  r3.xz = g_Shadows.m_ShadowMapSize.xy * r10.xw;
  r3.x = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r3.xz, r4.w).x;
  r1.y = r3.x * r2.z + r1.y;
  r2.z = r5.z * 5.000000000e-001 + r1.z;
  r2.z = max(r2.z, 9.999999825e-014);
  r1.z = r1.z / r2.z;
  r1.z = 5.000000000e-001 + r1.z;
  r9.x = r8.x + -r1.z;
  r3.xz = g_Shadows.m_ShadowMapSize.xy * r9.xy;
  r1.z = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r3.xz, r4.w).x;
  r1.y = r1.z * r2.z + r1.y;
  r1.z = r3.y + r2.x;
  r1.z = max(r1.z, 9.999999825e-014);
  r2.x = r2.x / r1.z;
  r2.x = 5.000000000e-001 + r2.x;
  r9.z = r8.x + -r2.x;
  r2.xz = g_Shadows.m_ShadowMapSize.xy * r9.zw;
  r2.x = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r2.xz, r4.w).x;
  r1.y = r2.x * r1.z + r1.y;
  r1.z = 1.000000e+000 / r2.y;
  r1.z = 1.500000000e+000 + r1.z;
  r12.z = r8.y + -r1.z;
  r2.xz = g_Shadows.m_ShadowMapSize.xy * r12.wz;
  r1.z = g_ShadowTexture.SampleCmpLevelZero(g_ShadowSampler_s, r2.xz, r4.w).x;
  r1.y = r1.z * r2.y + r1.y;
  r1.y = 2.439024299e-002 * r1.y;
  r0.w = -r5.x * r0.w + 1.000000000e+000;
  r1.z = (int)r1.w & (int)g_Shadows.m_NoiseScale.y;
  r1.z = r2.w ? g_Shadows.m_NoiseScale.z : r1.z;
  r1.z = r3.w ? g_Shadows.m_NoiseScale.w : r1.z;
  r0.w = r0.w * r1.z + 1.000000000e+000;
  r1.z = g_Shadows.m_ShadowContrast.x * r0.w;
  r0.w = g_Shadows.m_ShadowContrast.x * r0.w + -1.000000000e+000;
  r0.w = 5.000000000e-001 * r0.w;
  r0.w = saturate(r1.y * r1.z + -r0.w);
  r0.w = r0.w + -r1.x;
  r1.x = r5.y * r0.w + r1.x;
  }
  r1.yzw = -g_EyePosition.xyz + r0.xyz;
  r0.z = dot(r1.yzw, r1.yzw);
  r0.z = saturate(r0.z * g_Shadows.m_FadeParams.x + g_Shadows.m_FadeParams.y);
  r0.z = saturate(r1.x + r0.z);
  r0.xy = r0.xy * g_Shadows.m_CloudUVScaleOffset.xy + g_Shadows.m_CloudUVScaleOffset.zw;
  r0.w = dot(c.m_WorldEyeVector.xyz, c.m_WorldEyeVector.xyz);
  r0.w = sqrt(r0.w);
  r0.w = r0.w * g_Shadows.m_CloudShadowsParams.w + g_Shadows.m_CloudShadowsParams.z;
  r0.x = g_CloudShadowSampler.SampleLevel(g_CloudShadowSampler_s, r0.xy, r0.w).x;
  r0.x = saturate(-g_Shadows.m_CloudShadowsParams.y + r0.x);
  r0.x = saturate(g_Shadows.m_CloudShadowsParams.x + r0.x);
  o0.xyz = r0.zzz * r0.xxx;
  o0.w = 1.000000000e+000;
  return;
}
