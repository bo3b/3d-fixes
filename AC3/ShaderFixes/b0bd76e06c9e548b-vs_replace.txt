
cbuffer _Globals : register(b0)
{
  float4x4 g_WorldViewProj : packoffset(c0);
  float4 g_FogColor : packoffset(c16);
  float4 g_FogParams : packoffset(c17);
  float4 g_FogWeatherParams : packoffset(c90);
  float4 g_FogSunBackColor : packoffset(c31);
  float4x4 g_World : packoffset(c8);
  float4 g_ClipPlane : packoffset(c18);
  float4 g_EyePosition : packoffset(c12);
  float g_AlphaTestValue : packoffset(c113);
  float4 g_SnowParams : packoffset(c91);
  float4 g_DeconstructionEnabledDX11 : packoffset(c92);
  float2 g_DeconstructionRanges : packoffset(c116);
  float4 g_NumBarycentricCoefs : packoffset(c70);

  struct
  {
    float3 m_WorldPosition;
    float3 m_WorldEyeVector;
    float3 m_NormalizedWorldEyeVector;
    float3 m_Albedo;
    float m_Alpha;
    float3 m_WorldNormal;
    float3 m_VertexWorldNormal;
    float3 m_TangentSpaceNormal;
    float m_SpecIntensity;
    float m_SpecGlossiness;
    float3 m_Emissive;
    float m_WeatherExposed;
  } c : packoffset(c117);

  bool g_DeconstructionEnabledOther : packoffset(c125.y);
}
SamplerState s_TessellatedPositionsTexture_s : register(s0);
SamplerState s_TessellatedNormalsTexture_s : register(s1);
SamplerState s_TessellatedTangentsTexture_s : register(s2);
SamplerState s_TessellatedUVsTexture_s : register(s3);
Texture2D<float4> s_TessellatedPositionsTexture : register(t0);
Texture2D<float4> s_TessellatedNormalsTexture : register(t1);
Texture2D<float4> s_TessellatedTangentsTexture : register(t2);
Texture2D<float4> s_TessellatedUVsTexture : register(t3);

Texture2D<float4> StereoParams : register(t125);
Texture2D<float4> InjectedDepthTexture : register(t126);

void main(
  float v0 : POSITION0,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1,
  out float4 o3 : COLOR0,
  out float4 o4 : TEXCOORD2,
  out float4 o5 : TEXCOORD3,
  out float4 o6 : TEXCOORD4,
  out float4 o7 : TEXCOORD5)
{
  float4 r0,r1,r2,r3,r4;
  uint4 bitmask;
  r0.x = g_DeconstructionRanges.y + -g_DeconstructionRanges.x;
  r0.x = 1.000000e+000 / r0.x;
  r1.w = 1.000000000e+000;
  r0.y = 5.000000000e-001 + v0.x;
  r2.x = r0.y / g_NumBarycentricCoefs.x;
  r2.y = 5.000000000e-001;
  r3.xyzw = s_TessellatedPositionsTexture.SampleLevel(s_TessellatedPositionsTexture_s, r2.xy, 0.000000000e+000).xyzw;
  r1.xyz = r3.xyz;
  r4.xyzw = -g_EyePosition.xyzw + r1.xyzw;
  r0.y = dot(r4.xyzw, r4.xyzw);
  r0.y = sqrt(r0.y);
  r0.y = -g_DeconstructionRanges.x + r0.y;
  r0.x = saturate(r0.y * r0.x);
  r0.y = r0.x * -2.000000000e+000 + 3.000000000e+000;
  r0.x = r0.x * r0.x;
  r0.x = r0.y * r0.x;
  r4.xyzw = s_TessellatedUVsTexture.SampleLevel(s_TessellatedUVsTexture_s, r2.xy, 0.000000000e+000).xyzw;
  r4.z = 0.000000000e+000;
  r0.yzw = r4.xyz + -r3.xyz;
  r0.xyz = r0.xxx * r0.yzw + r1.xyz;
  r0.w = 0.000000e+000 != g_DeconstructionEnabledDX11.x;
  r0.x = r0.w ? r0.x : r1.x;
  r0.y = r0.w ? r0.y : r1.y;
  r0.z = r0.w ? r0.z : r1.z;
  r0.w = 1.000000000e+000;
  r1.x = dot(r0.xyzw, g_WorldViewProj._m00_m10_m20_m30);
  r1.y = dot(r0.xyzw, g_WorldViewProj._m01_m11_m21_m31);
  r1.z = dot(r0.xyzw, g_WorldViewProj._m02_m12_m22_m32);
  r1.w = dot(r0.xyzw, g_WorldViewProj._m03_m13_m23_m33);


//Mike_ar69 - Stereo Shift
float4 r21;
float4 stereoParams = StereoParams.Load(0);
r21.xyzw = r1.xyzw;
r1.x += stereoParams.x * (r1.w - stereoParams.y);
o0.xyzw = r21.xyzw;


  o1.xyzw = r1.xyzw;
  r1.x = dot(r0.xyzw, g_World._m00_m10_m20_m30);
  r1.y = dot(r0.xyzw, g_World._m01_m11_m21_m31);
  r1.z = dot(r0.xyzw, g_World._m02_m12_m22_m32);
  o2.xy = r1.xy;
  o2.zw = float2(0.000000e+000,0.000000e+000);
  o3.xzw = float3(0.000000e+000,0.000000e+000,0.000000e+000);
  r0.xyzw = s_TessellatedTangentsTexture.SampleLevel(s_TessellatedTangentsTexture_s, r2.xy, 0.000000000e+000).xyzw;
  r2.xyzw = s_TessellatedNormalsTexture.SampleLevel(s_TessellatedNormalsTexture_s, r2.xy, 0.000000000e+000).xyzw;
  o3.y = 8.000000000e+000 * r0.w;
  r0.w = dot(r1.xyz, g_ClipPlane.xyz);
  o4.xyz = r1.xyz;
  o4.w = -g_ClipPlane.w + r0.w;
  o5.w = 0.000000000e+000;
  o5.x = dot(r0.xyz, g_World._m00_m10_m20);
  o5.y = dot(r0.xyz, g_World._m01_m11_m21);
  o5.z = dot(r0.xyz, g_World._m02_m12_m22);
  r1.xyz = r2.zxy * r0.yzx;
  r0.xyz = r2.yzx * r0.zxy + -r1.xyz;
  r0.w = 0.000000000e+000 < r2.w;
  r1.x = r2.w < 0.000000000e+000;
  r0.w = ((int)r1.x ? -1 : 0) + ((int)r0.w ? 1 : 0);
  r0.w = r0.w;
  r0.xyz = r0.xyz * r0.www;
  o6.x = dot(r0.xyz, g_World._m00_m10_m20);
  o6.y = dot(r0.xyz, g_World._m01_m11_m21);
  o6.z = dot(r0.xyz, g_World._m02_m12_m22);
  o6.w = 0.000000000e+000;
  o7.x = dot(r2.xyz, g_World._m00_m10_m20);
  o7.y = dot(r2.xyz, g_World._m01_m11_m21);
  o7.z = dot(r2.xyz, g_World._m02_m12_m22);
  o7.w = 0.000000000e+000;
  return;
}
