
cbuffer _Globals : register(b0)
{
  float4x4 g_WorldViewProj : packoffset(c0);
  float4 g_FogColor : packoffset(c16);
  float4 g_FogParams : packoffset(c17);
  float4 g_FogWeatherParams : packoffset(c90);
  float4 g_FogSunBackColor : packoffset(c31);
  float Scale_27 : packoffset(c105);
  float Distance_28 : packoffset(c106);
  float Push_29 : packoffset(c107);
  float4 CharacterPosition_30 : packoffset(c108);
  float NoiseSpeed_31 : packoffset(c109);
  float IsInvert_32 : packoffset(c110);
  float ExplodeMin_33 : packoffset(c111);
  float4 scalexyz_34 : packoffset(c112);
  float g_CurrentTime : packoffset(c20);
  float4x4 g_World : packoffset(c8);
  float4 g_ClipPlane : packoffset(c18);
  float4 g_EyePosition : packoffset(c12);
  float4 g_DeconstructionEnabledDX11 : packoffset(c92);
  float2 g_DeconstructionRanges : packoffset(c116);
  bool g_DeconstructionEnabledOther : packoffset(c117);
}

Texture2D<float4> StereoParams : register(t125);
Texture2D<float4> InjectedDepthTexture : register(t126);

void main(
  int4 v0 : POSITION0,
  uint4 v1 : NORMAL0,
  uint4 v2 : TANGENT0,
  float4 v3 : COLOR0,
  float2 v4 : TEXCOORD0,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1,
  out float4 o3 : COLOR0)
{
  float4 r0,r1,r2,r3,r4;
  uint4 bitmask;
  r0.xyzw = v3.xyzw + v3.xyzw;
  r0.xyzw = g_CurrentTime * NoiseSpeed_31 + r0.xyzw;
  r0.xyzw = r0.xyzw * float4(9.750000e-001,7.750000e-001,3.750000e-001,5.750000e-001) + float4(5.000000e-001,5.000000e-001,5.000000e-001,5.000000e-001);
  r0.xyzw = frac(r0.xyzw);
  r0.xyzw = r0.xyzw * float4(2.000000e+000,2.000000e+000,2.000000e+000,2.000000e+000) + float4(-1.000000e+000,-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r1.xyzw = abs(r0.xyzw) * abs(r0.xyzw);
  r0.xyzw = -abs(-r0.xyzw) * float4(2.000000e+000,2.000000e+000,2.000000e+000,2.000000e+000) + float4(3.000000e+000,3.000000e+000,3.000000e+000,3.000000e+000);
  r0.xyzw = r1.xyzw * r0.xyzw + float4(-5.000000e-001,-5.000000e-001,-5.000000e-001,-5.000000e-001);
  r0.w = dot(r0.xyzw, r0.xyzw);
  r0.w = sqrt(r0.w);
  r0.w = log2(r0.w);
  r0.w = 7.000000000e+000 * r0.w;
  r0.w = exp2(r0.w);
  r0.w = r0.w + r0.w;
  r0.w = sin(r0.w);
  r0.w = 2.000000000e+002 * r0.w;
  r1.xyz = v1.xyz;
  r1.xyz = float3(-1.270000e+002,-1.270000e+002,-1.270000e+002) + r1.xyz;
  r1.xyz = Push_29 * r1.xyz;
  r1.w = g_DeconstructionRanges.y + -g_DeconstructionRanges.x;
  r1.w = 1.000000e+000 / r1.w;
  r2.w = 1.000000000e+000;
  r3.xyz = (int3)v0.xyz * (int3)v0.www;
  r3.xyz = r3.xyz;
  r2.xyz = float3(3.051758e-005,3.051758e-005,3.051758e-005) * r3.xyz;
  r4.xyzw = -g_EyePosition.xyzw + r2.xyzw;
  r2.w = dot(r4.xyzw, r4.xyzw);
  r2.w = sqrt(r2.w);
  r2.w = -g_DeconstructionRanges.x + r2.w;
  r1.w = saturate(r2.w * r1.w);
  r2.w = r1.w * -2.000000000e+000 + 3.000000000e+000;
  r1.w = r1.w * r1.w;
  r1.w = r2.w * r1.w;
  r4.xy = float2(1.600000e+001,1.600000e+001) * v4.xy;
  r4.zw = float2(0.000000e+000,0.000000e+000);
  r3.xyz = -r3.xyz * float3(3.051758e-005,3.051758e-005,3.051758e-005) + r4.xyw;
  o2.xyzw = r4.xyzw;
  r3.xyz = r1.www * r3.xyz + r2.xyz;
  r1.w = 0.000000e+000 != g_DeconstructionEnabledDX11.x;
  r2.x = r1.w ? r3.x : r2.x;
  r2.y = r1.w ? r3.y : r2.y;
  r2.z = r1.w ? r3.z : r2.z;
  r2.xyz = Scale_27 * r2.xyz;
  r1.xyz = r1.xyz * float3(7.874016e-003,7.874016e-003,7.874016e-003) + r2.xyz;
  r3.xyz = r0.xyz * r0.www + r1.xyz;
  r0.xyz = r0.xyz * float3(0.000000e+000,0.000000e+000,3.000000e-001) + r1.xyz;
  r3.xyz = r3.xyz + -r0.xyz;
  r0.w = v3.y + v3.x;
  r0.w = v3.z + r0.w;
  r0.w = 1.000000015e-001 * r0.w;
  r0.xyz = r0.www * r3.xyz + r0.xyz;
  r3.xyz = r0.xyz + -r1.xyz;
  r1.xyz = ExplodeMin_33 * r3.xyz + r1.xyz;
  r0.xyz = -r1.xyz + r0.xyz;
  r2.w = 1.000000000e+000;
  r3.x = dot(r2.xyzw, g_World._m00_m10_m20_m30);
  r3.y = dot(r2.xyzw, g_World._m01_m11_m21_m31);
  r3.z = dot(r2.xyzw, g_World._m02_m12_m22_m32);
  r2.xyz = CharacterPosition_30.xyz + -r3.xyz;
  r0.w = dot(r2.xyz, r2.xyz);
  r0.w = sqrt(r0.w);
  r0.w = Distance_28 / r0.w;
  r0.w = r0.w * Distance_28 + -2.000000000e+000;
  r0.w = saturate(8.333333582e-002 * r0.w);
  r1.w = r0.w * -2.000000000e+000 + 1.000000000e+000;
  r0.w = IsInvert_32 * r1.w + r0.w;
  r0.xyz = r0.www * r0.xyz + r1.xyz;
  o3.w = r0.w;
  r0.xyz = scalexyz_34.xyz * r0.xyz;
  r0.w = 1.000000000e+000;
  r1.x = dot(r0.xyzw, g_WorldViewProj._m00_m10_m20_m30);
  r1.y = dot(r0.xyzw, g_WorldViewProj._m01_m11_m21_m31);
  r1.z = dot(r0.xyzw, g_WorldViewProj._m02_m12_m22_m32);
  r1.w = dot(r0.xyzw, g_WorldViewProj._m03_m13_m23_m33);


//Mike_ar69 - Stereo Shift
float4 r21;
float4 stereoParams = StereoParams.Load(0);
r21.xyzw = r1.xyzw;
r1.x += stereoParams.x * (r1.w - stereoParams.y);
o0.xyzw = r21.xyzw;


  o1.xyzw = r1.xyzw;
  o3.xyz = v3.xyz;
  return;
}
