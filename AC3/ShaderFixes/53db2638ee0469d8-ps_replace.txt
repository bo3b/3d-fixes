//Water splashes on boat  ??
cbuffer _Globals : register(b0)
{
  float4 g_ZParams : packoffset(c121);
  float4 g_LerpStart : packoffset(c122);
  float4 g_LerpMask : packoffset(c123);
  float g_FadeFactor : packoffset(c124);
  float4 g_FogColor : packoffset(c16);
  float4 g_FogParams : packoffset(c17);
  float4 g_FogWeatherParams : packoffset(c90);
  float4 g_FogSunBackColor : packoffset(c31);
  float GlowIntensity_1 : packoffset(c128);
  float4 ColorMultiply_2 : packoffset(c129);
  float4 g_TileOffset : packoffset(c96);
  float4 g_UnusedPredicated1 : packoffset(c97);
  float4 g_UnusedPredicated2 : packoffset(c98);
  float4 g_UnusedPredicated3 : packoffset(c99);
  float4 g_VPosToUV : packoffset(c0);
  float4 g_ReverseProjectionParams : packoffset(c100);
  float2 g_ReverseProjectionParams2 : packoffset(c101);
  float4x4 g_ViewToWorld : packoffset(c102);
  float4x4 g_WorldToView : packoffset(c106);

  struct
  {
    float m_Alpha;
    float2 m_VPOS;
    float2 m_ScreenPosition;
  } c : packoffset(c130);

}
SamplerState DiffuseMapTextureObject_0_s : register(s0);
SamplerState g_ZTextureSampler_s : register(s8);
Texture2D<float4> DiffuseMapTextureObject_0 : register(t0);
Texture2D<float4> g_ZTextureSampler : register(t8);

Texture2D<float4> StereoParams : register(t125);
Texture2D<float4> InjectedDepthTexture : register(t126);

void main(
  float4 injectedScreenPos : SV_Position,
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  float4 v3 : COLOR0,
  uint v4 : SV_IsFrontFace0,
  out float4 o0 : SV_Target0)
{
  float4 zpos4 = InjectedDepthTexture.Load((int3) injectedScreenPos.xyz);
  float zpos = zpos4.x - 1;
  float wpos = 1.0 / zpos;
  float4 r0,r1;
  uint4 bitmask;
  r0.xyzw = DiffuseMapTextureObject_0.Sample(DiffuseMapTextureObject_0_s, v2.xy).xyzw;
  r1.x = -v1.x + r0.w;
  r1.x = r1.x < 0.000000000e+000;
  if (r1.x != 0) discard;
  r1.xyzw = ColorMultiply_2.xyzw * v3.xyzw;
  r0.xyzw = r0.xyzw * r1.xyzw + -g_LerpStart.xyzw;
  r1.xy = g_VPosToUV.xy * v0.xy;
  r1.xyzw = g_ZTextureSampler.Sample(g_ZTextureSampler_s, r1.xy).xyzw;
  r1.x = -v1.w + r1.x;
  r1.x = saturate(g_ZParams.z * r1.x);
  r1.xyzw = saturate(r1.xxxx * g_FadeFactor + g_LerpMask.xyzw);
  o0.xyzw = r1.xyzw * r0.xyzw + g_LerpStart.xyzw;
  return;
}