//Diffuse light on ship sails???
cbuffer cb0 : register(b0)
{
  float4 cb0[131];
}


cbuffer _Globals : register(b0)
{
  float4 g_SSAOZConstants : packoffset(c128);
  float4 g_SSAOControl : packoffset(c130);
  float4 g_SSAOFadeParams : packoffset(c133);
  float4 g_SSAOScreenRadiusClampPS : packoffset(c131);
  float4 g_SSAORandomNormalTexScalePS : packoffset(c132);
  float4 g_SSAOScreenRadiusClampVS : packoffset(c105);
  float4 g_SSAORandomNormalTexScaleVS : packoffset(c106);
  float4 g_pixelToTexelOffset : packoffset(c150);
  float4 g_vTexDimsInRepeatBlocks : packoffset(c140);
  float3 g_vTexDims : packoffset(c141);
}
SamplerState DepthTexture_s : register(s0);
SamplerState RandomNormalSampler_s : register(s1);
SamplerState DepthTextureLowRes_s : register(s2);
SamplerState AOSampler_s : register(s3);
Texture2D<float4> DepthTexture : register(t0);
Texture2D<float4> RandomNormalSampler : register(t1);
Texture2D<float4> DepthTextureLowRes : register(t2);
Texture2D<float4> AOSampler : register(t3);

Texture2D<float4> StereoParams : register(t125);
Texture2D<float4> InjectedDepthTexture : register(t126);

void main(
  float4 injectedScreenPos : SV_Position,
  float4 v0 : SV_Position0,
  float2 v1 : TEXCOORD0,
  float2 w1 : TEXCOORD1,
  float4 v2 : TEXCOORD2,
  float4 v3 : TEXCOORD3,
  out float4 o0 : SV_Target0)
{
  float4 zpos4 = InjectedDepthTexture.Load((int3) injectedScreenPos.xyz);
  float zpos = zpos4.x - 1;
  float wpos = 1.0 / zpos;
  float4 r0,r1,r2;
  uint4 bitmask;

  r0.xyzw = DepthTextureLowRes.Sample(DepthTextureLowRes_s, v2.xy).xyzw;
  r1.xyzw = DepthTextureLowRes.Sample(DepthTextureLowRes_s, v2.zw).xyzw;
  r0.y = r1.x;
  r1.xyzw = DepthTextureLowRes.Sample(DepthTextureLowRes_s, v3.xy).xyzw;
  r0.z = r1.x;
  r1.xyzw = DepthTextureLowRes.Sample(DepthTextureLowRes_s, v3.zw).xyzw;
  r0.w = r1.x;
  r1.xyzw = DepthTexture.Sample(DepthTexture_s, v1.xy).xyzw;
// r1.xyzw = DepthTexture.Sample(DepthTexture_s, injectedScreenPos.xy).xyzw;
  r1.x = cb0[128].x + r1.x;
  r1.x = cb0[128].y / r1.x;

// float2 r23;
// float4 stereoParams = StereoParams.Load(0);
// r23.xy = injectedScreenPos.xy;
// r23.x += stereoParams.x * (r1.x - stereoParams.y);
  
  r0.xyzw = -r1.xxxx + r0.xyzw;
  r1.x = 5.000000000e+001 / r1.x;
  r0.xyzw = saturate(-abs(-r0.xyzw) * r1.xxxx + float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
  r1.xyzw = RandomNormalSampler.Sample(RandomNormalSampler_s, w1.xy).xyzw;  //Need to adjust this?cb0[106].xy
// r1.xyzw = RandomNormalSampler.Sample(RandomNormalSampler_s, r23.xy * cb0[106].xy ).xyzw;
  r0.xyzw = r1.xyzw * r0.xyzw;
  r2.x = dot(r0.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
  r2.x = 0.000000000e+000 >= r2.x;
  r2.x = r2.x ? 0x3f800000 : 0;
  r0.xyzw = r1.xyzw * r2.xxxx + r0.xyzw;
  r1.x = dot(r0.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
  r0.xyzw = r0.xyzw / r1.xxxx;

  // r10.yz = float2(0.000000e+000,0.000000e+000);
  // r10.xw = cb0[105].zw;
  
  // r22.zw = r20.xy * cb0[105].xy + r10.zw;
  // r22.xy = r20.xy * cb0[105].xy + cb0[105].zw;
  
  // r23.xy = r20.xy * cb0[105].xy + r10.xy;
  // r10.xy = cb0[105].xy * r20.xy;
  // r23.zw = r10.xy;

  
  r1.xyzw = AOSampler.Sample(AOSampler_s, v2.xy).xyzw;
  r2.xyzw = AOSampler.Sample(AOSampler_s, v2.zw).xyzw;
  r1.y = r2.x;
  r2.xyzw = AOSampler.Sample(AOSampler_s, v3.xy).xyzw;
  r1.z = r2.x;
  r2.xyzw = AOSampler.Sample(AOSampler_s, v3.zw).xyzw;
  r1.w = r2.x;
  
  r0.x = dot(r1.xyzw, r0.xyzw); // DISABLE: dot(r0.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000)); //
  r0.x = log2(r0.x);
  r0.x = cb0[130].y * r0.x;
  r0.x = exp2(r0.x);
  r0.x = -1.000000000e+000 + r0.x;
  o0.xyz = cb0[130].xxx * r0.xxx + float3(1.000000e+000,1.000000e+000,1.000000e+000);
  o0.w = 1.000000000e+000;
  return;
}