
cbuffer _Globals : register(b0)
{
  float4x4 g_WorldViewProj : packoffset(c0);
  float4 g_FogColor : packoffset(c16);
  float4 g_FogParams : packoffset(c17);
  float4 g_FogWeatherParams : packoffset(c90);
  float4 g_FogSunBackColor : packoffset(c31);
  float Niose3dSpeed_6 : packoffset(c105);
  float Niose3dFrequency_7 : packoffset(c106);
  float4 Niose3dAmplitude_8 : packoffset(c107);
  float g_CurrentTime : packoffset(c20);
  float4x4 g_World : packoffset(c8);
  float4 g_ClipPlane : packoffset(c18);
  float4 g_EyePosition : packoffset(c12);
  float4 g_DeconstructionEnabledDX11 : packoffset(c92);
  float2 g_DeconstructionRanges : packoffset(c116);
  bool g_DeconstructionEnabledOther : packoffset(c117);
}

Texture2D<float4> StereoParams : register(t125);
Texture2D<float4> InjectedDepthTexture : register(t126);

void main(
  int4 v0 : POSITION0,
  uint4 v1 : NORMAL0,
  uint4 v2 : TANGENT0,
  float4 v3 : COLOR0,
  float2 v4 : TEXCOORD0,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0)
{
  float4 r0,r1,r2;
  uint4 bitmask;
  r0.w = 1.000000000e+000;
  r1.xyz = (int3)v0.xyz * (int3)v0.www;
  r1.xyz = r1.xyz;
  r0.xyz = float3(3.051758e-005,3.051758e-005,3.051758e-005) * r1.xyz;
  r1.xyzw = -g_EyePosition.xyzw + r0.xyzw;
  r0.w = dot(r1.xyzw, r1.xyzw);
  r0.w = sqrt(r0.w);
  r0.w = -g_DeconstructionRanges.x + r0.w;
  r1.x = g_DeconstructionRanges.y + -g_DeconstructionRanges.x;
  r1.x = 1.000000e+000 / r1.x;
  r0.w = saturate(r1.x * r0.w);
  r1.x = r0.w * -2.000000000e+000 + 3.000000000e+000;
  r0.w = r0.w * r0.w;
  r0.w = r1.x * r0.w;
  r1.xyz = r0.www * -r0.xyz + r0.xyz;
  r0.w = 0.000000e+000 != g_DeconstructionEnabledDX11.x;
  r0.x = r0.w ? r1.x : r0.x;
  r0.y = r0.w ? r1.y : r0.y;
  r0.z = r0.w ? r1.z : r0.z;
  r0.w = 1.000000000e+000;
  r1.x = dot(r0.xyzw, g_World._m00_m10_m20_m30);
  r1.y = dot(r0.xyzw, g_World._m01_m11_m21_m31);
  r1.z = dot(r0.xyzw, g_World._m02_m12_m22_m32);
  r0.w = Niose3dSpeed_6 * g_CurrentTime;
  r1.xyz = r1.xyz * Niose3dFrequency_7 + r0.www;
  r1.xyz = r1.xyz * float3(9.750000e-001,7.750000e-001,3.750000e-001) + float3(5.000000e-001,5.000000e-001,5.000000e-001);
  r1.xyz = frac(r1.xyz);
  r1.xyz = r1.xyz * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r2.xyz = abs(r1.xyz) * abs(r1.xyz);
  r1.xyz = -abs(-r1.xyz) * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(3.000000e+000,3.000000e+000,3.000000e+000);
  r1.xyz = r2.xyz * r1.xyz + float3(-5.000000e-001,-5.000000e-001,-5.000000e-001);
  r0.w = dot(float3(1.000000e+000,1.000000e+000,1.000000e+000), r1.xyz);
  r0.w = Niose3dAmplitude_8.w * r0.w;
  r0.w = max(r0.w, -9.999999776e-003);
  r0.w = v3.w * r0.w;
  r1.xyz = v1.xyz;
  r1.xyz = float3(-1.270000e+002,-1.270000e+002,-1.270000e+002) + r1.xyz;
  r1.xyz = float3(7.874016e-003,7.874016e-003,7.874016e-003) * r1.xyz;
  r0.xyz = r1.xyz * r0.www + r0.xyz;
  r0.w = 1.000000000e+000;
  r1.x = dot(r0.xyzw, g_WorldViewProj._m00_m10_m20_m30);
  r1.y = dot(r0.xyzw, g_WorldViewProj._m01_m11_m21_m31);
  r1.z = dot(r0.xyzw, g_WorldViewProj._m02_m12_m22_m32);
  r1.w = dot(r0.xyzw, g_WorldViewProj._m03_m13_m23_m33);


//Mike_ar69 - Stereo Shift
float4 r21;
float4 stereoParams = StereoParams.Load(0);
r21.xyzw = r1.xyzw;
r1.x += stereoParams.x * (r1.w - stereoParams.y);
o0.xyzw = r21.xyzw;


  o1.xyzw = r1.xyzw;
  return;
}
