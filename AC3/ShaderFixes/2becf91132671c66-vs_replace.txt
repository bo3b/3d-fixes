
cbuffer _Globals : register(b0)
{
  float4x4 g_WorldViewProj : packoffset(c0);
  float4 g_FogColor : packoffset(c16);
  float4 g_FogParams : packoffset(c17);
  float4 g_FogWeatherParams : packoffset(c90);
  float4 g_FogSunBackColor : packoffset(c31);
  float4 NoisexAmpyFreqzSpeedwIsSpherify_59 : packoffset(c105);
  float NormalPush_60 : packoffset(c106);
  float4 VertexHidexDistanceyFallofzChaos_61 : packoffset(c107);
  float4 AlphaSpherexyzScalarwRadius_62 : packoffset(c108);
  float4 AlphaSpherexyzPositionwIsAlphaSphere_63 : packoffset(c109);
  float4 RimxFactorwIsRim_64 : packoffset(c110);
  float g_EntityVisualScaleFactor : packoffset(c14);
  float g_CurrentTime : packoffset(c20);
  float4 g_EyeDirection : packoffset(c15);
  float4 g_WorldEntityPosition : packoffset(c13);
  float4x4 g_World : packoffset(c8);
  float4 g_ClipPlane : packoffset(c18);
  float4 g_EyePosition : packoffset(c12);
  float4 g_DeconstructionEnabledDX11 : packoffset(c92);
  float2 g_DeconstructionRanges : packoffset(c116);
  bool g_DeconstructionEnabledOther : packoffset(c117);
}

Texture2D<float4> StereoParams : register(t125);
Texture2D<float4> InjectedDepthTexture : register(t126);

void main(
  int4 v0 : POSITION0,
  uint4 v1 : NORMAL0,
  uint4 v2 : TANGENT0,
  float4 v3 : COLOR0,
  float2 v4 : TEXCOORD0,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0,
  out float4 o2 : COLOR0,
  out float4 o3 : TEXCOORD1,
  out float4 o4 : TEXCOORD2,
  out float4 o5 : TEXCOORD3,
  out float4 o6 : TEXCOORD4)
{
  float4 r0,r1,r2,r3,r4,r5,r6;
  uint4 bitmask;
  r0.w = 1.000000000e+000;
  r1.xyz = (int3)v0.xyz * (int3)v0.www;
  r1.xyz = r1.xyz;
  r0.xyz = float3(3.051758e-005,3.051758e-005,3.051758e-005) * r1.xyz;
  r1.xyzw = -g_EyePosition.xyzw + r0.xyzw;
  r0.w = dot(r1.xyzw, r1.xyzw);
  r0.w = sqrt(r0.w);
  r0.w = -g_DeconstructionRanges.x + r0.w;
  r1.x = g_DeconstructionRanges.y + -g_DeconstructionRanges.x;
  r1.x = 1.000000e+000 / r1.x;
  r0.w = saturate(r1.x * r0.w);
  r1.x = r0.w * -2.000000000e+000 + 3.000000000e+000;
  r0.w = r0.w * r0.w;
  r0.w = r1.x * r0.w;
  r1.xyz = r0.www * -r0.xyz + r0.xyz;
  r0.w = 0.000000e+000 != g_DeconstructionEnabledDX11.x;
  r0.x = r0.w ? r1.x : r0.x;
  r0.y = r0.w ? r1.y : r0.y;
  r0.z = r0.w ? r1.z : r0.z;
  r1.xyz = g_EyePosition.xyz + -r0.xyz;
  r0.w = dot(r1.xyz, r1.xyz);
  r0.w = sqrt(r0.w);
  r0.w = sqrt(r0.w);
  r1.x = NormalPush_60 * r0.w;
  r0.w = 2.000000095e-003 * r0.w;
  r1.yzw = v1.xyz;
  r1.yzw = float3(-1.270000e+002,-1.270000e+002,-1.270000e+002) + r1.yzw;
  r1.yzw = float3(7.874016e-003,7.874016e-003,7.874016e-003) * r1.yzw;
  r2.x = dot(r1.yzw, r1.yzw);
  r2.x = rsqrt(r2.x);
  r2.xyz = r2.xxx * r1.yzw;
  r2.xyz = -r2.xyz * float3(1.000000e-003,1.000000e-003,1.000000e-003) + r0.xyz;
  r2.w = 1.000000000e+000;
  r3.xyzw = g_EntityVisualScaleFactor * r2.xyzw;
  r0.x = dot(r3.xyzw, r3.xyzw);
  r0.x = sqrt(r0.x);
  r0.xy = float2(-1.000000e-006,1.000000e-006) + r0.xx;
  r0.z = NoisexAmpyFreqzSpeedwIsSpherify_59.y * NoisexAmpyFreqzSpeedwIsSpherify_59.y;
  r4.xyzw = float4(1.000000e+000,5.000000e-001,5.000000e-001,5.000000e-001) + -v3.wxyz;
  r4.yzw = r4.yzw * r0.zzz;
  r5.xyz = float3(3.000000e-001,3.000000e-001,3.000000e-001) * r4.yzw;
  r5.w = 0.000000000e+000;
  r5.xyzw = g_CurrentTime * NoisexAmpyFreqzSpeedwIsSpherify_59.zzzz + r5.xyzw;
  r5.xyzw = r5.xyzw * float4(9.750000e-001,7.750000e-001,3.750000e-001,5.750000e-001) + float4(5.000000e-001,5.000000e-001,5.000000e-001,5.000000e-001);
  r5.xyzw = frac(r5.xyzw);
  r5.xyzw = r5.xyzw * float4(2.000000e+000,2.000000e+000,2.000000e+000,2.000000e+000) + float4(-1.000000e+000,-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r6.xyzw = abs(r5.xyzw) * abs(r5.xyzw);
  r5.xyzw = -abs(-r5.xyzw) * float4(2.000000e+000,2.000000e+000,2.000000e+000,2.000000e+000) + float4(3.000000e+000,3.000000e+000,3.000000e+000,3.000000e+000);
  r5.xyzw = r6.xyzw * r5.xyzw + float4(-5.000000e-001,-5.000000e-001,-5.000000e-001,-5.000000e-001);
  r5.xyzw = NoisexAmpyFreqzSpeedwIsSpherify_59.xxxx * r5.xyzw;
  r3.xyzw = r5.xyzw * float4(5.000000e-002,5.000000e-002,5.000000e-002,5.000000e-002) + r3.xyzw;
  r0.z = dot(r3.xyzw, r3.xyzw);
  r0.z = rsqrt(r0.z);
  r5.xyzw = r3.xyzw * r0.zzzz;
  r6.xyzw = r5.xyzw * r0.xxxx;
  r5.xyzw = r5.xyzw * r0.yyyy;
  r6.xyzw = max(r3.xyzw, r6.xyzw);
  r5.xyzw = min(r5.xyzw, r6.xyzw);
  r5.xyzw = r5.xyzw + -r3.xyzw;
  r5.xyzw = NoisexAmpyFreqzSpeedwIsSpherify_59.wwww * r5.xyzw + r3.xyzw;
  r0.xyz = g_EntityVisualScaleFactor * r2.xyz + -r3.xyz;
  r0.x = dot(r0.xyz, r0.xyz);
  r0.x = sqrt(r0.x);
  r0.x = -VertexHidexDistanceyFallofzChaos_61.x + r0.x;
  r0.yzw = r1.yzw * r0.www;
  r2.xyz = r0.yzw * r1.xxx + r5.xyz;
  r2.w = 1.000000000e+000;
  r3.x = dot(r2.xyzw, g_WorldViewProj._m00_m10_m20_m30);
  r3.y = dot(r2.xyzw, g_WorldViewProj._m01_m11_m21_m31);
  r3.z = dot(r2.xyzw, g_WorldViewProj._m02_m12_m22_m32);
  r3.w = dot(r2.xyzw, g_WorldViewProj._m03_m13_m23_m33);


//Mike_ar69 - Stereo Shift
float4 r21;
float4 stereoParams = StereoParams.Load(0);
r21.xyzw = r3.xyzw;
r3.x += stereoParams.x * (r3.w - stereoParams.y);
o0.xyzw = r21.xyzw;


  o1.xyzw = r3.xyzw;
  r0.y = dot(r5.xyzw, r5.xyzw);
  r0.y = rsqrt(r0.y);
  r0.yzw = r5.xyz * r0.yyy;
  r1.x = dot(g_EyeDirection.xyzw, g_EyeDirection.xyzw);
  r1.x = rsqrt(r1.x);
  r3.xyz = g_EyeDirection.xyz * r1.xxx;
  r0.y = dot(r3.xyz, r0.yzw);
  r0.y = log2(abs(r0.y));
  r0.y = RimxFactorwIsRim_64.x * r0.y;
  r0.y = exp2(r0.y);
  r0.y = 1.000000000e+000 + -r0.y;
  r0.y = max(r0.y, 0.000000000e+000);
  r0.y = -1.000000000e+000 + r0.y;
  r0.y = RimxFactorwIsRim_64.w * r0.y + 1.000000000e+000;
  r3.x = dot(r2.xyzw, g_World._m00_m10_m20_m30);
  r3.y = dot(r2.xyzw, g_World._m01_m11_m21_m31);
  r3.z = dot(r2.xyzw, g_World._m02_m12_m22_m32);
  r2.xyz = -g_WorldEntityPosition.xyz + r3.xyz;
  r4.yzw = AlphaSpherexyzPositionwIsAlphaSphere_63.xyz + -g_WorldEntityPosition.xyz;
  r2.xyz = -r4.yzw + r2.xyz;
  r2.xyz = AlphaSpherexyzScalarwRadius_62.xyz * r2.xyz;
  r0.z = dot(r2.xyz, r2.xyz);
  r0.z = sqrt(r0.z);
  r0.z = r4.x * 5.000000000e-001 + r0.z;
  r0.z = saturate(r0.z / AlphaSpherexyzScalarwRadius_62.w);
  r0.z = 1.000000000e+000 + -r0.z;
  r0.z = 9.000000000e+002 * r0.z;
  r0.z = min(r0.z, 1.000000000e+000);
  r0.z = -1.000000000e+000 + r0.z;
  r0.z = AlphaSpherexyzPositionwIsAlphaSphere_63.w * r0.z + 1.000000000e+000;
  r0.y = r0.y * r0.z;
  r0.z = VertexHidexDistanceyFallofzChaos_61.y * v3.w + -VertexHidexDistanceyFallofzChaos_61.y;
  r0.z = VertexHidexDistanceyFallofzChaos_61.z * r0.z + VertexHidexDistanceyFallofzChaos_61.y;
  r0.z = max(r0.z, 9.999999776e-003);
  r0.z = min(r0.z, 9.999000000e+003);
  r0.x = r0.x / r0.z;
  r0.x = 1.000000000e+000 + -r0.x;
  o2.w = min(r0.x, r0.y);
  o2.xyz = r1.yzw;
  r0.x = dot(r3.xyz, g_ClipPlane.xyz);
  o3.xyz = r3.xyz;
  o3.w = -g_ClipPlane.w + r0.x;
  o4.w = 0.000000000e+000;
  r0.xyz = v2.xyz;
  r0.xyz = float3(-1.270000e+002,-1.270000e+002,-1.270000e+002) + r0.xyz;
  r0.xyz = float3(7.874016e-003,7.874016e-003,7.874016e-003) * r0.xyz;
  o4.x = dot(r0.xyz, g_World._m00_m10_m20);
  o4.y = dot(r0.xyz, g_World._m01_m11_m21);
  o4.z = dot(r0.xyz, g_World._m02_m12_m22);
  r2.xyz = r1.wyz * r0.yzx;
  r0.xyz = r1.zwy * r0.zxy + -r2.xyz;
  r0.w = (int)0 < (int)v0.w;
  r1.x = (int)v0.w < (int)0;
  r0.w = ((int)r1.x ? -1 : 0) + ((int)r0.w ? 1 : 0);
  r0.w = r0.w;
  r0.xyz = r0.xyz * r0.www;
  o5.x = dot(r0.xyz, g_World._m00_m10_m20);
  o5.y = dot(r0.xyz, g_World._m01_m11_m21);
  o5.z = dot(r0.xyz, g_World._m02_m12_m22);
  o5.w = 0.000000000e+000;
  o6.x = dot(r1.yzw, g_World._m00_m10_m20);
  o6.y = dot(r1.yzw, g_World._m01_m11_m21);
  o6.z = dot(r1.yzw, g_World._m02_m12_m22);
  o6.w = 0.000000000e+000;
  return;
}
