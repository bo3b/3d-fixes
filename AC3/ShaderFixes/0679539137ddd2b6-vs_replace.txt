//Horizon water
cbuffer _Globals : register(b0)
{
  float4x4 g_WorldViewProj : packoffset(c0);
  float4 g_FogColor : packoffset(c16);
  float4 g_FogParams : packoffset(c17);
  float4 g_FogWeatherParams : packoffset(c90);
  float4 g_FogSunBackColor : packoffset(c31);
  float NormalMapScale_44 : packoffset(c105);
  float Bumpiness_45 : packoffset(c106);
  float4 OceanWavesShift_46 : packoffset(c107);
  float DistanceFogEnd_47 : packoffset(c108);
  float DistanceFogStart_48 : packoffset(c109);
  float BumpinessFlattenEnd_49 : packoffset(c110);
  float BumpinessFlattenStart_50 : packoffset(c111);
  float WaveFoamScale_51 : packoffset(c112);
  float4x4 g_ViewToWorldVS : packoffset(c79);
  float4 gOceanViewOffset : packoffset(c77);
  float4x4 g_World : packoffset(c8);
  float4 g_ClipPlane : packoffset(c18);
  float4 g_EyePosition : packoffset(c12);
  float4 g_DisplacementMapParamsVS : packoffset(c118);
  float4 g_DeconstructionEnabledDX11 : packoffset(c92);
  float2 g_DeconstructionRanges : packoffset(c116);
  bool g_DeconstructionEnabledOther : packoffset(c119);
}
SamplerState g_DisplacementMapSamplerVS_s : register(s0);
SamplerState g_DisplacementMapSamplerVS2_s : register(s1);
SamplerState g_DisplacementMapSamplerVS3_s : register(s2);
SamplerState g_DisplacementMapSamplerVS4_s : register(s3);
Texture2D<float4> g_DisplacementMapSamplerVS : register(t0);
Texture2D<float4> g_DisplacementMapSamplerVS2 : register(t1);
Texture2D<float4> g_DisplacementMapSamplerVS3 : register(t2);
Texture2D<float4> g_DisplacementMapSamplerVS4 : register(t3);

Texture2D<float4> StereoParams : register(t125);
Texture2D<float4> InjectedDepthTexture : register(t126);

void main(
  float2 v0 : POSITION0,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1,
  out float4 o3 : COLOR0,
  out float4 o4 : COLOR1,
  out float4 o5 : TEXCOORD2,
  out float4 o6 : TEXCOORD3,
  out float4 o7 : TEXCOORD4)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask;
  r0.xy = v0.xy;
  r0.zw = float2(0.000000e+000,1.000000e+000);
  r0.xyzw = -g_EyePosition.xyzw + r0.xyzw;
  r0.x = dot(r0.xyzw, r0.xyzw);
  r0.x = sqrt(r0.x);
  r0.x = -g_DeconstructionRanges.x + r0.x;
  r0.y = g_DeconstructionRanges.y + -g_DeconstructionRanges.x;
  r0.y = 1.000000e+000 / r0.y;
  r0.x = saturate(r0.x * r0.y);
  r0.y = r0.x * -2.000000000e+000 + 3.000000000e+000;
  r0.x = r0.x * r0.x;
  r0.x = r0.y * r0.x;
  r0.xy = r0.xx * -v0.xy + v0.xy;
  r0.z = 0.000000e+000 != g_DeconstructionEnabledDX11.x;
  r0.x = r0.z ? r0.x : v0.x;
  r0.y = r0.z ? r0.y : v0.y;
  r1.xyzw = g_DisplacementMapSamplerVS2.SampleLevel(g_DisplacementMapSamplerVS2_s, r0.xy, 0.000000000e+000).xyzw;
  r0.zw = r1.xy + r1.zw;
  r1.xy = float2(1.280000e+002,1.280000e+002) * r0.zw;
  r1.z = 0.000000000e+000;
  r1.xyz = gOceanViewOffset.xyz + r1.xyz;
  r2.xyzw = g_DisplacementMapSamplerVS.SampleLevel(g_DisplacementMapSamplerVS_s, r0.xy, 0.000000000e+000).xyzw;
  r3.xyz = r2.xyz + r1.xyz;
  r0.zw = OceanWavesShift_46.xy + r1.xy;
  o3.z = saturate(r2.w);
  r3.w = 1.000000000e+000;
  r1.x = dot(r3.xyzw, g_WorldViewProj._m00_m10_m20_m30);
  r1.y = dot(r3.xyzw, g_WorldViewProj._m01_m11_m21_m31);
  r1.z = dot(r3.xyzw, g_WorldViewProj._m02_m12_m22_m32);
  r1.w = dot(r3.xyzw, g_WorldViewProj._m03_m13_m23_m33);
  
 //Mike_ar69 - Stereo Shift
float4 r21;
float4 stereoParams = StereoParams.Load(0);
r21.xyzw = r1.xyzw;
r1.x += stereoParams.x; // * (r1.w - stereoParams.y);

  o0.xyzw = r21.xyzw;
  o1.xyzw = r1.xyzw;
  o2.xy = NormalMapScale_44 * r0.zw;
  o2.zw = WaveFoamScale_51 * r0.zw;
  r1.x = dot(r3.xyzw, g_World._m00_m10_m20_m30);
  r1.y = dot(r3.xyzw, g_World._m01_m11_m21_m31);
  r1.z = dot(r3.xyzw, g_World._m02_m12_m22_m32);
  r1.w = 0.000000000e+000;
  r1.xyzw = g_EyePosition.xyzw + -r1.xyzw;
  r0.z = dot(r1.xyzw, r1.xyzw);
  r0.z = sqrt(r0.z);
  r0.w = -DistanceFogStart_48 + r0.z;
  r0.z = -BumpinessFlattenEnd_49 + r0.z;
  r1.x = -DistanceFogStart_48 + DistanceFogEnd_47;
  o3.y = saturate(r0.w / r1.x);
  r0.w = BumpinessFlattenStart_50 + -BumpinessFlattenEnd_49;
  r0.z = saturate(r0.z / r0.w);
  o3.x = Bumpiness_45 * r0.z;
  r1.xyzw = g_DisplacementMapSamplerVS3.SampleLevel(g_DisplacementMapSamplerVS3_s, r0.xy, 0.000000000e+000).xyzw;
  o4.xyzw = g_DisplacementMapSamplerVS4.SampleLevel(g_DisplacementMapSamplerVS4_s, r0.xy, 0.000000000e+000).xyzw;
  o3.w = r1.w;
  r0.xyz = r1.xyz * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r1.xyz = float3(0.000000e+000,1.000000e+000,0.000000e+000) * r0.xyz;
  r1.xyz = r0.zxy * float3(1.000000e+000,0.000000e+000,0.000000e+000) + -r1.xyz;
  o5.x = dot(r1.xy, g_World._m10_m20);
  o5.y = dot(r1.xy, g_World._m11_m21);
  o5.z = dot(r1.xy, g_World._m12_m22);
  o5.w = 0.000000000e+000;
  r2.xyz = r1.xyz * r0.zxy;
  r1.xyz = r0.yzx * r1.yzx + -r2.xyz;
  o6.x = dot(r1.xyz, g_World._m00_m10_m20);
  o6.y = dot(r1.xyz, g_World._m01_m11_m21);
  o6.z = dot(r1.xyz, g_World._m02_m12_m22);
  o6.w = 0.000000000e+000;
  o7.x = dot(r0.xyz, g_World._m00_m10_m20);
  o7.y = dot(r0.xyz, g_World._m01_m11_m21);
  o7.z = dot(r0.xyz, g_World._m02_m12_m22);
  o7.w = 0.000000000e+000;
  return;
}