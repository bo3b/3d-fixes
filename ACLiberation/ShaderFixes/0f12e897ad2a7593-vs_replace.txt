//HUD Part 4 Minimap
cbuffer _Globals : register(b0)
{
  float4x4 g_WorldViewProj : packoffset(c0);
  float4x4 g_WorldView : packoffset(c4);
  float4x4 g_Proj : packoffset(c84);
  float4 g_FogColor : packoffset(c16);
  float4 g_FogParams : packoffset(c17);
  float4 g_FogWeatherParams : packoffset(c90);
  float4 g_FogSunBackColor : packoffset(c31);
  float4 ConstantColor_8 : packoffset(c105);
  float4 ConstantTileOffset_9 : packoffset(c106);
  float4 ConstantTileRatio_10 : packoffset(c107);
  float4x4 g_World : packoffset(c8);
  float4 g_ClipPlane : packoffset(c18);
  float4 g_EyePosition : packoffset(c12);
  float4 g_DeconstructionRanges : packoffset(c92);
}

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main(
  float3 v0 : POSITION0,
  float4 v1 : COLOR0,
  float2 v2 : TEXCOORD0,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0,
  out float4 o2 : COLOR0)
{
  float4 r0;
  uint4 bitmask;
  r0.xyz = v0.xyz;
  r0.w = 1.000000000e+000;

float4 stereoParams = StereoParams.Load(0);
float4 iniParams = IniParams.Load(0);
float4 r10;
  r10.x = dot(r0.xyzw, g_WorldViewProj._m00_m10_m20_m30);
  r10.y = dot(r0.xyzw, g_WorldViewProj._m01_m11_m21_m31);
  r10.z = dot(r0.xyzw, g_WorldViewProj._m02_m12_m22_m32);
  r10.w = dot(r0.xyzw, g_WorldViewProj._m03_m13_m23_m33);

	r10.x += stereoParams.x * iniParams.x; //HUD

o0.xyzw = r10.xyzw;
  
  r0.xy = v2.xy * float2(1.000000e+000,-1.000000e+000) + float2(0.000000e+000,1.000000e+000);
  o1.zw = r0.xy * ConstantTileRatio_10.xy + ConstantTileOffset_9.xy;
  o1.xy = v2.xy;
  o2.xyzw = ConstantColor_8.xyzw * v1.xyzw;
  return;
}