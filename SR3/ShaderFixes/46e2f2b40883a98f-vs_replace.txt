
cbuffer vc0 : register(b0)
{
  float4 Diffuse_Color : packoffset(c0);
  float Self_Illumination : packoffset(c1);
  float Decal_Map_OffsetU : packoffset(c2);
  float Reflection_Amount : packoffset(c3);
  float Diffuse_Map_OffsetU : packoffset(c4);
  float Diffuse_Map_OffsetV : packoffset(c5);
}

cbuffer vc1 : register(b1)
{
  float4 Time : packoffset(c0);
  float2 Target_dimensions : packoffset(c2);
}

cbuffer vc2 : register(b2)
{
  float4x4 projTM : packoffset(c0);
  float4 eyePos : packoffset(c4);
  float4 Fog_dist : packoffset(c10);
}

Texture2D<float4> StereoParams : register(t125);

void main(
  float3 v0 : POSITION0,
  int2 v1 : TEXCOORD0,
  float4 v2 : NORMAL0,
  float4 v3 : TANGENT0,
  int2 v4 : TEXCOORD1,
  float4 v5 : COLOR0,
  float4 v6 : COLOR1,
  out float4 o0 : SV_Position0,
  out float2 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1,
  out float4 o3 : TEXCOORD2,
  out float4 o4 : TEXCOORD3,
  out float4 o5 : TEXCOORD4,
  out float4 o6 : TEXCOORD5,
  out float4 o7 : TEXCOORD6)
{
  float4 r0,r1,r2;
  uint4 bitmask;
  r0.xyz = v0.xyz;
  r0.w = 1.000000000e+000;
  r1.x = dot(r0.xyzw, projTM._m00_m10_m20_m30);
  r1.y = dot(r0.xyzw, projTM._m01_m11_m21_m31);
  r1.z = dot(r0.xyzw, projTM._m02_m12_m22_m32);
  r1.w = dot(r0.xyzw, projTM._m03_m13_m23_m33);
  o0.xyzw = r1.xyzw;
  o3.xyzw = r1.xyzw;
  r0.x = Time.x / Diffuse_Map_OffsetU;
  r0.yzw = v1.xyy;
  o1.y = r0.z * 9.765625000e-004 + -r0.x;
  r1.xy = float2(9.765625e-004,9.765625e-004) * r0.yz;
  r0.x = r1.x;
  o1.x = r0.x;
  o7.x = r0.x;
  o2.xyz = Diffuse_Color.xyz * v5.xyz;
  o2.w = Diffuse_Color.w;
  r0.x = v2.w * 2.000000000e+000 + -1.000000000e+000;
  r0.x = r0.x * 5.000000000e-001 + 5.000000000e-001;
  r0.y = 3.264000000e+004 * v6.x;
  r0.x = r0.x * 2.550000000e+002 + r0.y;
  r0.x = 3.276800000e+004 + r0.x;
  o4.w = 1.525902189e-005 * r0.x;
  o4.xyz = v2.xyz * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r2.xyz = -eyePos.xyz + v0.xyz;
  r0.x = Fog_dist.x * r2.y;
  r0.y = -1.442695022e+000 * r0.x;
  r0.y = exp2(r0.y);
  r0.y = 1.000000000e+000 + -r0.y;
  r0.x = r0.y / r0.x;
  r0.y = 9.999999776e-003 < abs(r2.y);
  r1.z = dot(r2.xyz, r2.xyz);
  r1.z = sqrt(r1.z);
  r1.z = Fog_dist.y * r1.z;
  r0.x = r0.y ? r0.x : 1.000000000e+000;
  r0.x = r0.x * r1.z + -Fog_dist.w;
  r0.x = exp2(-r0.x);
  r0.x = min(r0.x, 1.000000000e+000);
  o5.w = 1.000000000e+000 + -r0.x;
  o5.xyz = eyePos.xyz + -v0.xyz;
  r0.x = Time.x / Decal_Map_OffsetU;
  r1.w = r0.z * 9.765625000e-004 + r0.x;
  o6.xyzw = r1.xyxw;
  r0.x = Time.x / Diffuse_Map_OffsetV;
  o7.y = r0.w * 6.510417006e-005 + r0.x;
  r0.xy = v4.xy;
  o7.zw = float2(9.765625e-004,9.765625e-004) * r0.xy;

// Auto-fixed shader
float4 stereo = StereoParams.Load(0);
o3.x += stereo.x * (o3.w - stereo.y);
// o6.x += stereo.x * (o6.w - stereo.y);
  return;
}