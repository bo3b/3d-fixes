cbuffer cb0 : register(b0)
{
  float4 cb0[12];
}


cbuffer vc0 : register(b0)
{
  float Specular_Map_Amount : packoffset(c2);
  float4 Specular_Color : packoffset(c3);
  float Specular_Alpha : packoffset(c4);
  float Self_Illumination : packoffset(c5);
  float ClampU : packoffset(c6);
  float ClampV : packoffset(c7);
  float Room_Depth : packoffset(c8);
  float Decal_Map_Opacity : packoffset(c9);
  float Reflection_Map_Opacity : packoffset(c10);
  float4 Diffuse_Color : packoffset(c11);
}

cbuffer vc2 : register(b2)
{
  float4x4 projTM : packoffset(c0);
  float4 eyePos : packoffset(c4);
  float4 Object_instance_params_2 : packoffset(c5);
  float4 Fog_dist : packoffset(c10);
  float4 Object_instance_params : packoffset(c15);
  row_major float3x4 objTM : packoffset(c16);
  float3 Position_scale : packoffset(c20);
}

Texture2D<float4> StereoParams : register(t125);

void main(
  float3 v0 : POSITION0,
  int2 v1 : TEXCOORD0,
  float4 v2 : NORMAL0,
  float4 v3 : TANGENT0,
  int2 v4 : TEXCOORD1,
  out float4 o0 : SV_Position0,
  out float3 o1 : TEXCOORD0,
  out float3 o2 : TEXCOORD1,
  out float3 o3 : TEXCOORD2,
  out float3 o4 : TEXCOORD3,
  out float4 o5 : TEXCOORD4,
  out float4 o6 : TEXCOORD5,
  out float4 o7 : TEXCOORD6,
  out float4 o8 : TEXCOORD7)
{
  float4 r0,r1,r2,r3,r4;
  uint4 bitmask;
  r0.w = 1.000000000e+000;
  r1.xyz = v0.xyz;
  r1.w = 1.000000000e+000;
  r0.x = dot(objTM._m00_m01_m02_m03, r1.xyzw);
  r0.y = dot(objTM._m10_m11_m12_m13, r1.xyzw);
  r0.z = dot(objTM._m20_m21_m22_m23, r1.xyzw);
  r1.x = dot(r0.xyzw, projTM._m00_m10_m20_m30);
  r1.y = dot(r0.xyzw, projTM._m01_m11_m21_m31);
  r1.z = dot(r0.xyzw, projTM._m02_m12_m22_m32);
  r1.w = dot(r0.xyzw, projTM._m03_m13_m23_m33);
  o0.xyzw = r1.xyzw;
  // o5.xyzw = r1.xyzw;

// bo3b- Position is right, texture is misaligned.
float4 tex = r1;
float4 stereo = StereoParams.Load(0);
tex.x += stereo.x * (tex.w - stereo.y);
o5.xyzw = tex.xyzw;

  r1.xyzw = v3.xyzw * float4(2.000000e+000,2.000000e+000,2.000000e+000,2.000000e+000) + float4(-1.000000e+000,-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r2.x = dot(objTM._m00_m01_m02, r1.xyz);
  r2.y = dot(objTM._m10_m11_m12, r1.xyz);
  r2.z = dot(objTM._m20_m21_m22, r1.xyz);
  r0.w = dot(r2.xyz, r2.xyz);
  r0.w = rsqrt(r0.w);
  r1.xyz = r2.xyz * r0.www;
  o1.xyz = r1.xyz;
  r2.xyzw = v2.xyzw * float4(2.000000e+000,2.000000e+000,2.000000e+000,2.000000e+000) + float4(-1.000000e+000,-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r3.x = dot(objTM._m00_m01_m02, r2.xyz);
  r3.y = dot(objTM._m10_m11_m12, r2.xyz);
  r3.z = dot(objTM._m20_m21_m22, r2.xyz);
  r0.w = r2.w * 5.000000000e-001 + 5.000000000e-001;
  r2.x = dot(r3.xyz, r3.xyz);
  r2.x = rsqrt(r2.x);
  r2.xyz = r3.xyz * r2.xxx;
  r3.xyz = r2.zxy * r1.yzx;
  r3.xyz = r2.yzx * r1.zxy + -r3.xyz;
  r3.xyz = r3.xyz * r1.www;
  o2.xyz = r3.xyz;
  r4.xyz = eyePos.xyz + -r0.xyz;
  r0.xyz = -eyePos.xyz + r0.xyz;
  o3.xyz = r4.xyz;
  o4.y = dot(r4.xyz, -r1.xyz);
  o4.z = dot(r4.xyz, r2.xyz);
  o7.xyz = r2.xyz;
  o4.x = dot(r4.xyz, -r3.xyz);
  r1.x = Object_instance_params_2.x * 3.264000000e+004;
  r0.w = r0.w * 2.550000000e+002 + r1.x;
  r0.w = 3.276800000e+004 + r0.w;
  o6.w = 1.525902189e-005 * r0.w;
  o6.xyz = Object_instance_params.xyz * cb0[11].xyz;
  r0.w = Fog_dist.x * r0.y;
  r1.x = -1.442695022e+000 * r0.w;
  r1.x = exp2(r1.x);
  r1.x = 1.000000000e+000 + -r1.x;
  r0.w = r1.x / r0.w;
  r1.x = 9.999999776e-003 < abs(r0.y);
  r0.x = dot(r0.xyz, r0.xyz);
  r0.x = sqrt(r0.x);
  r0.x = Fog_dist.y * r0.x;
  r0.y = r1.x ? r0.w : 1.000000000e+000;
  r0.x = r0.y * r0.x + -Fog_dist.w;
  r0.x = exp2(-r0.x);
  r0.x = min(r0.x, 1.000000000e+000);
  o7.w = 1.000000000e+000 + -r0.x;
  r0.xy = v1.xy;
  o8.xy = float2(9.765625e-004,9.765625e-004) * r0.xy;
  r0.xy = v4.xy;
  o8.zw = float2(9.765625e-004,9.765625e-004) * r0.xy;
  return;
}