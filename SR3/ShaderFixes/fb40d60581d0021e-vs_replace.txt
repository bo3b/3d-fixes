
cbuffer vc2 : register(b2)
{
  float4x4 projTM : packoffset(c0);
  float4 eyePos : packoffset(c4);
  float4 Object_instance_params_2 : packoffset(c5);
  float4 Fog_dist : packoffset(c10);
  row_major float3x4 objTM : packoffset(c16);
  float3 Position_scale : packoffset(c20);
  float4 Dyn_decal_tint : packoffset(c42);
  float4 Dyn_decal_params_1 : packoffset(c43);
  float4 Dyn_decal_params_2 : packoffset(c44);
  float3 Dyn_decal_pos : packoffset(c45);
  float3 Dyn_decal_rvec : packoffset(c46);
  float3 Dyn_decal_uvec : packoffset(c47);
  float3 Dyn_decal_fvec : packoffset(c48);
  float3 Dyn_decal_scale : packoffset(c49);
}

cbuffer vc3 : register(b3)
{
  row_major float3x4 Bone_weights[64] : packoffset(c0);
}

Texture2D<float4> StereoParams : register(t125);

void main(
  float3 v0 : POSITION0,
  float3 v1 : NORMAL0,
  int4 v2 : POSITION1,
  float4 v3 : NORMAL1,
  uint4 v4 : BLENDWEIGHT0,
  uint4 v5 : BLENDINDICES0,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1,
  out float4 o3 : TEXCOORD2,
  out float4 o4 : TEXCOORD3,
  out float4 o5 : TEXCOORD4)
{
  float4 r0,r1,r2,r3,r4,r5;
  uint4 bitmask;
  r0.xyzw = v4.xyzw;
  r1.x = r0.x + r0.y;
  r1.x = r1.x + r0.z;
  r1.x = r1.x + r0.w;
  r1.x = 1.000000e+000 / r1.x;
  r1.yzw = v2.xyz;
  r2.xyz = r1.yzw * float3(1.220703e-004,1.220703e-004,1.220703e-004) + v0.xyz;
  r2.w = 1.000000000e+000;
  r3.xyzw = (int4)v5.xyzw * int4(3,3,3,3);
  r4.xyzw = Bone_weights[v5.y]._m00_m01_m02_m03 * r0.yyyy;
  r4.xyzw = r0.xxxx * Bone_weights[v5.x]._m00_m01_m02_m03 + r4.xyzw;
  r4.xyzw = r0.zzzz * Bone_weights[v5.z]._m00_m01_m02_m03 + r4.xyzw;
  r4.xyzw = r0.wwww * Bone_weights[v5.w]._m00_m01_m02_m03 + r4.xyzw;
  r4.x = dot(r4.xyzw, r2.xyzw);
  r5.xyzw = Bone_weights[v5.y]._m10_m11_m12_m13 * r0.yyyy;
  r5.xyzw = r0.xxxx * Bone_weights[v5.x]._m10_m11_m12_m13 + r5.xyzw;
  r5.xyzw = r0.zzzz * Bone_weights[v5.z]._m10_m11_m12_m13 + r5.xyzw;
  r5.xyzw = r0.wwww * Bone_weights[v5.w]._m10_m11_m12_m13 + r5.xyzw;
  r4.y = dot(r5.xyzw, r2.xyzw);
  r5.xyzw = Bone_weights[v5.y]._m20_m21_m22_m23 * r0.yyyy;
  r5.xyzw = r0.xxxx * Bone_weights[v5.x]._m20_m21_m22_m23 + r5.xyzw;
  r5.xyzw = r0.zzzz * Bone_weights[v5.z]._m20_m21_m22_m23 + r5.xyzw;
  r0.xyzw = r0.wwww * Bone_weights[v5.w]._m20_m21_m22_m23 + r5.xyzw;
  r4.z = dot(r0.xyzw, r2.xyzw);
  r0.xyz = -Dyn_decal_pos.xyz + r2.xyz;
  r0.xyz = r0.xyz / Dyn_decal_scale.xyz;
  r1.xyz = r4.xyz * r1.xxx;
  r1.w = 1.000000000e+000;
  r2.x = dot(objTM._m00_m01_m02_m03, r1.xyzw);
  r2.y = dot(objTM._m10_m11_m12_m13, r1.xyzw);
  r2.z = dot(objTM._m20_m21_m22_m23, r1.xyzw);
  r2.w = 1.000000000e+000;
  r1.x = dot(r2.xyzw, projTM._m00_m10_m20_m30);
  r1.y = dot(r2.xyzw, projTM._m01_m11_m21_m31);
  r1.z = dot(r2.xyzw, projTM._m02_m12_m22_m32);
  r1.w = dot(r2.xyzw, projTM._m03_m13_m23_m33);
  r2.xyz = -eyePos.xyz + r2.xyz;
  o0.xyzw = r1.xyzw;
  o4.xyzw = r1.xyzw;
  r1.x = dot(r0.xyz, Dyn_decal_rvec.xyz);
  r1.z = dot(r0.xyz, Dyn_decal_fvec.xyz);
  r0.x = dot(r0.xyz, Dyn_decal_uvec.xyz);
  r0.x = Dyn_decal_params_1.y * r0.x;
  r1.xz = Dyn_decal_params_1.xz * r1.xz;
  o1.w = r1.z;
  r0.yzw = Dyn_decal_scale.yyy * Dyn_decal_rvec.zxy;
  r3.xyz = v1.xyz * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r4.xyz = r3.yzx * r0.yzw;
  r0.yzw = r0.wyz * r3.zxy + -r4.xyz;
  r1.z = dot(r0.yzw, r0.yzw);
  r1.z = rsqrt(r1.z);
  r0.yzw = r1.zzz * r0.yzw;
  r4.xyz = r3.zxy * r0.zwy;
  r4.xyz = r3.yzx * r0.wyz + -r4.xyz;
  o1.x = dot(Dyn_decal_fvec.xyz, r0.yzw);
  o1.z = dot(Dyn_decal_fvec.xyz, r3.xyz);
  r0.y = dot(r4.xyz, r4.xyz);
  r0.y = rsqrt(r0.y);
  r0.yzw = r4.xyz * r0.yyy;
  o1.y = dot(Dyn_decal_fvec.xyz, r0.yzw);
  o2.xyzw = Dyn_decal_params_2.xyzw;
  o3.xyzw = Dyn_decal_tint.xyzw;
  r0.y = -1.000000000e+000;
  r1.y = r0.y * r0.x;
  o5.xy = float2(5.000000e-001,5.000000e-001) + r1.xy;
  r0.x = Fog_dist.x * r2.y;
  r0.y = -1.442695022e+000 * r0.x;
  r0.y = exp2(r0.y);
  r0.y = 1.000000000e+000 + -r0.y;
  r0.x = r0.y / r0.x;
  r0.y = 9.999999776e-003 < abs(r2.y);
  r0.z = dot(r2.xyz, r2.xyz);
  r0.z = sqrt(r0.z);
  r0.z = Fog_dist.y * r0.z;
  r0.x = r0.y ? r0.x : 1.000000000e+000;
  r0.x = r0.x * r0.z + -Fog_dist.w;
  r0.x = exp2(-r0.x);
  r0.x = min(r0.x, 1.000000000e+000);
  o5.w = 1.000000000e+000 + -r0.x;
  r0.x = Object_instance_params_2.x * 3.264000000e+004 + 1.270000000e+002;
  o5.z = 1.525902189e-005 * r0.x;

// Auto-fixed shader
float4 stereo = StereoParams.Load(0);
o4.x += stereo.x * (o4.w - stereo.y);
  return;
}