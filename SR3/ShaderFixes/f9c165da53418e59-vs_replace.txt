
cbuffer vc0 : register(b0)
{
  float Distortion_ScrollU : packoffset(c0);
  float Distortion_ScrollV : packoffset(c1);
  float Diffuse_ScrollV_1 : packoffset(c2);
  float4 Diffuse_Color : packoffset(c3);
  float Main_Opacity : packoffset(c4);
  float Diffuse_ScrollU_1 : packoffset(c5);
  float Distortion_Amount : packoffset(c6);
  float Fade_Distance : packoffset(c7);
  float Diffuse_Light_Amount : packoffset(c8);
  float Specular_Alpha : packoffset(c9);
}

cbuffer vc1 : register(b1)
{
  float4 Time : packoffset(c0);
  float2 Target_dimensions : packoffset(c2);
}

cbuffer vc2 : register(b2)
{
  float4x4 projTM : packoffset(c0);
  float3 Position_scale : packoffset(c20);
}

Texture2D<float4> StereoParams : register(t125);

void main(
  float3 v0 : POSITION0,
  int2 v1 : TEXCOORD0,
  float4 v2 : NORMAL0,
  float4 v3 : TANGENT0,
  float4 v4 : POSITION2,
  float4 v5 : POSITION3,
  float4 v6 : POSITION4,
  float4 v7 : COLOR2,
  out float4 o0 : SV_Position0,
  out float o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1,
  out float4 o3 : TEXCOORD2)
{
  float4 r0,r1;
  uint4 bitmask;
  r0.xyz = v0.xyz;
  r0.w = 1.000000000e+000;
  r1.x = dot(v4.xyzw, r0.xyzw);
  r1.y = dot(v5.xyzw, r0.xyzw);
  r1.z = dot(v6.xyzw, r0.xyzw);
  r1.w = 1.000000000e+000;
  r0.x = dot(r1.xyzw, projTM._m00_m10_m20_m30);
  r0.y = dot(r1.xyzw, projTM._m01_m11_m21_m31);
  r0.z = dot(r1.xyzw, projTM._m02_m12_m22_m32);
  r0.w = dot(r1.xyzw, projTM._m03_m13_m23_m33);
  o0.xyzw = r0.xyzw;
  // o2.xyzw = r0.xyzw;

// bo3b- Position is right, texture is misaligned.
float4 tex = r0;
float4 stereo = StereoParams.Load(0);
tex.x += stereo.x * (tex.w - stereo.y);
o2.xyzw = tex.xyzw;

  r0.x = v2.w * 2.000000000e+000 + -1.000000000e+000;
  r0.x = r0.x * 5.000000000e-001 + 5.000000000e-001;
  r0.x = 2.550000000e+002 * r0.x;
  r0.x = v7.x * 3.264000000e+004 + r0.x;
  o1.x = 1.525902189e-005 * r0.x;
  r0.x = Time.x * 1.000000047e-003;
  r0.x = frac(r0.x);
  r0.y = Diffuse_ScrollU_1 * r0.x;
  r0.zw = v1.xy;
  r0.zw = float2(9.765625e-004,9.765625e-004) * r0.zw;
  o3.x = r0.y * 1.000000000e+001 + r0.z;
  r0.y = Diffuse_ScrollV_1 * r0.x;
  o3.y = r0.y * 1.000000000e+001 + r0.w;
  r0.y = Distortion_ScrollU * r0.x;
  r0.x = Distortion_ScrollV * r0.x;
  o3.w = r0.x * 1.000000000e+001 + r0.w;
  o3.z = r0.y * 1.000000000e+001 + r0.z;
  return;
}