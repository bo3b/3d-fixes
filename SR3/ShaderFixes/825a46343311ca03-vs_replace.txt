
cbuffer vc0 : register(b0)
{
  float4 Ambient_Color : packoffset(c0);
  float4 Lod_profile : packoffset(c1);
  float Horiz_fade_value : packoffset(c2);
  float4 Billboard_tangents[3] : packoffset(c3);
  float4 Camera_azimuth_trig : packoffset(c6);
  float Num_billboards : packoffset(c7);
  float4 Billboard_texcoords[6] : packoffset(c8);
  float4 Horiz_texcoords : packoffset(c14);
  float2 Camera_angles : packoffset(c15);
}

cbuffer vc2 : register(b2)
{
  float4x4 projTM : packoffset(c0);
  float4 eyePos : packoffset(c4);
  float4 Object_instance_params_2 : packoffset(c5);
  float4 Fog_dist : packoffset(c10);
  row_major float3x4 Eye_orient : packoffset(c11);
  float3 Tree_wind_dir : packoffset(c35);
  float4 Tree_wind_times : packoffset(c36);
  float4 Tree_wind_distances : packoffset(c37);
  float3 Tree_wind_gust : packoffset(c40);
  float4 Tree_wind_gust_hints : packoffset(c41);
}

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : POSITION0,
  float4 v1 : TEXCOORD0,
  out float4 o0 : SV_Position0,
  out float o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1,
  out float4 o3 : TEXCOORD2)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask;
  r0.x = 3.000000000e+000 < v0.w;
  r0.yzw = -eyePos.xyz + v0.xyz;
  r0.y = dot(r0.yzw, r0.yzw);
  r0.y = sqrt(r0.y);
  r0.z = r0.y < Lod_profile.z;
  r0.w = Lod_profile.w + -Lod_profile.z;
  r0.w = -r0.w * 4.499999881e-001 + Lod_profile.w;
  r0.yw = -Lod_profile.zz + r0.yw;
  r0.y = saturate(r0.y / r0.w);
  if (r0.x != 0) {
  sincos(-v1.w, r0.x, r1.x);
  r2.x = -r0.x;
  r2.y = r1.x;
  r2.z = r0.x;
  r1.x = dot(r2.yz, v1.xy);
  r1.z = dot(r2.xy, v1.xy);
  r0.x = Horiz_fade_value == 0.000000;
  r0.x = (int)r0.x | (int)r0.z;
  r0.x = r0.x ? 0.000000000e+000 : v1.z;
  r1.y = 0.000000000e+000;
  r1.xyz = r1.xyz * r0.xxx + v0.xyz;
  r0.x = -4.000000000e+000 + v0.w;
  r2.x = r0.x == 1;
  r2.y = r0.x == 2;
  r2.z = r0.x == 3;
  r0.x = r2.x ? 0 : 1;
  r0.w = r2.x ? 1 : 1;
  r0.x = r2.y ? 0 : r0.x;
  r0.w = r2.y ? 0 : r0.w;
  r0.x = r2.z ? 1 : r0.x;
  r0.w = r2.z ? 0 : r0.w;
  o3.xy = -Horiz_texcoords.zw * r0.xw + Horiz_texcoords.xy;
  o3.w = Horiz_fade_value * r0.y;
  } else {
  r0.xw = v1.yx * v1.zz;
  r2.y = r0.z ? 0 : r0.x;
  r2.z = r0.z ? 0 : r0.w;
  r2.x = dot(Camera_azimuth_trig.wz, r2.yz);
  r2.w = dot(Camera_azimuth_trig.wy, r2.yz);
  r0.x = (int)v0.w;
  r0.z = 6.283185005e+000 / Num_billboards;
  r0.w = Camera_angles.x + v1.w;
  r0.w = r0.z * 5.000000000e-001 + r0.w;
  r0.w = 3.141592503e+000 + r0.w;
  r0.w = r0.z + -r0.w;
  r0.w = 6.283185005e+000 + r0.w;
  r0.w = 1.591549516e-001 * r0.w;
  r2.z = r0.w >= -r0.w;
  r0.w = frac(abs(r0.w));
  r0.w = r2.z ? r0.w : -r0.w;
  r2.z = 6.283185005e+000 * r0.w;
  r3.x = r0.w < 0.000000000e+000;
  r0.w = r0.w * 6.283185005e+000 + 6.283185005e+000;
  r0.w = r3.x ? r0.w : r2.z;
  r0.z = r0.w / r0.z;
  r0.z = round(r0.z);
  r0.z = (int)r0.z;
  r3.x = r0.x == 1;
  r3.y = r0.x == 2;
  r3.z = r0.x == 3;
  r0.x = r3.x ? 0 : 1;
  r0.w = r3.x ? 0 : 0;
  r0.x = r3.y ? 0 : r0.x;
  r0.w = r3.y ? 1 : r0.w;
  r0.x = r3.z ? 1 : r0.x;
  r0.w = r3.z ? 1 : r0.w;
  o3.xy = Billboard_texcoords[r0.z].zw * r0.xw + Billboard_texcoords[r0.z].xy;
  r0.xzw = r2.xyw / v1.zzz;
  r2.x = Tree_wind_times.x + v0.x;
  r2.y = Tree_wind_distances.z * r0.z;
  r2.y = max(r2.y, 0.000000000e+000);
  r2.y = log2(r2.y);
  r2.y = Tree_wind_distances.w * r2.y;
  r2.y = exp2(r2.y);
  r2.xz = float2(3.000000e-001,9.500000e-001) * r2.xx;
  r2.x = sin(r2.x);
  r2.x = Tree_wind_distances.x * r2.x;
  r2.z = cos(r2.z);
  r2.x = r2.x * r2.z + Tree_wind_gust.y;
  r2.x = r2.x * r2.y;
  r3.xz = Tree_wind_dir.xz * r2.xx + r0.xw;
  r3.y = -r2.x * Tree_wind_gust_hints.x + r0.z;
  r1.xyz = r3.xyz * v1.zzz + v0.xyz;
  r0.x = Horiz_fade_value * Horiz_fade_value;
  r0.x = -Horiz_fade_value * r0.x + 1.000000000e+000;
  o3.w = r0.y * r0.x;
  }
  r1.w = 1.000000000e+000;
  r0.x = dot(r1.xyzw, projTM._m00_m10_m20_m30);
  r0.y = dot(r1.xyzw, projTM._m01_m11_m21_m31);
  r0.z = dot(r1.xyzw, projTM._m02_m12_m22_m32);
  r0.w = dot(r1.xyzw, projTM._m03_m13_m23_m33);
  r1.xyz = -eyePos.xyz + r1.xyz;
  r1.w = 9.999999776e-003 < abs(r1.y);
  r2.x = Fog_dist.x * r1.y;
  r2.y = -1.442695022e+000 * r2.x;
  r2.y = exp2(r2.y);
  r2.y = 1.000000000e+000 + -r2.y;
  r2.x = r2.y / r2.x;
  r1.w = r1.w ? r2.x : 1.000000000e+000;
  r1.x = dot(r1.xyz, r1.xyz);
  r1.x = sqrt(r1.x);
  r1.x = Fog_dist.y * r1.x;
  r1.x = r1.w * r1.x + -Fog_dist.w;
  r1.x = exp2(-r1.x);
  r1.x = min(r1.x, 1.000000000e+000);
  o1.x = 1.000000000e+000 + -r1.x;
  r1.x = Object_instance_params_2.x * 3.264000000e+004 + 1.275000000e+002;
  o3.z = 1.525902189e-005 * r1.x;
  o0.xyzw = r0.xyzw;
  o2.xyzw = r0.xyzw;

// Auto-fixed shader
float4 stereo = StereoParams.Load(0);
o2.x += stereo.x * (o2.w - stereo.y);
  return;
}