
cbuffer vc2 : register(b2)
{
  float4x4 projTM : packoffset(c0);
  row_major float3x4 objTM : packoffset(c16);
  float3 Position_scale : packoffset(c20);
}

cbuffer vc3 : register(b3)
{
  row_major float3x4 Bone_weights[64] : packoffset(c0);
}

Texture2D<float4> StereoParams : register(t125);

void main(
  float3 v0 : POSITION0,
  int2 v1 : TEXCOORD0,
  int2 v2 : TEXCOORD1,
  int2 v3 : TEXCOORD2,
  float3 v4 : NORMAL0,
  float4 v5 : TANGENT0,
  uint4 v6 : BLENDWEIGHT0,
  uint4 v7 : BLENDINDICES0,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0)
{
  float4 r0,r1,r2,r3,r4,r5;
  uint4 bitmask;
  r0.xyzw = v6.xyzw;
  r1.x = r0.x + r0.y;
  r1.x = r1.x + r0.z;
  r1.x = r1.x + r0.w;
  r1.x = 1.000000e+000 / r1.x;
  r2.xyz = v0.xyz;
  r2.w = 1.000000000e+000;
  r3.xyzw = (int4)v7.xyzw * int4(3,3,3,3);
  r4.xyzw = Bone_weights[v7.y]._m00_m01_m02_m03 * r0.yyyy;
  r4.xyzw = r0.xxxx * Bone_weights[v7.x]._m00_m01_m02_m03 + r4.xyzw;
  r4.xyzw = r0.zzzz * Bone_weights[v7.z]._m00_m01_m02_m03 + r4.xyzw;
  r4.xyzw = r0.wwww * Bone_weights[v7.w]._m00_m01_m02_m03 + r4.xyzw;
  r4.x = dot(r4.xyzw, r2.xyzw);
  r5.xyzw = Bone_weights[v7.y]._m10_m11_m12_m13 * r0.yyyy;
  r5.xyzw = r0.xxxx * Bone_weights[v7.x]._m10_m11_m12_m13 + r5.xyzw;
  r5.xyzw = r0.zzzz * Bone_weights[v7.z]._m10_m11_m12_m13 + r5.xyzw;
  r5.xyzw = r0.wwww * Bone_weights[v7.w]._m10_m11_m12_m13 + r5.xyzw;
  r4.y = dot(r5.xyzw, r2.xyzw);
  r5.xyzw = Bone_weights[v7.y]._m20_m21_m22_m23 * r0.yyyy;
  r5.xyzw = r0.xxxx * Bone_weights[v7.x]._m20_m21_m22_m23 + r5.xyzw;
  r5.xyzw = r0.zzzz * Bone_weights[v7.z]._m20_m21_m22_m23 + r5.xyzw;
  r0.xyzw = r0.wwww * Bone_weights[v7.w]._m20_m21_m22_m23 + r5.xyzw;
  r4.z = dot(r0.xyzw, r2.xyzw);
  r0.xyz = r4.xyz * r1.xxx;
  r0.w = 1.000000000e+000;
  r1.x = dot(objTM._m00_m01_m02_m03, r0.xyzw);
  r1.y = dot(objTM._m10_m11_m12_m13, r0.xyzw);
  r1.z = dot(objTM._m20_m21_m22_m23, r0.xyzw);
  r1.w = 1.000000000e+000;
  r0.x = dot(r1.xyzw, projTM._m00_m10_m20_m30);
  r0.y = dot(r1.xyzw, projTM._m01_m11_m21_m31);
  r0.z = dot(r1.xyzw, projTM._m02_m12_m22_m32);
  r0.w = dot(r1.xyzw, projTM._m03_m13_m23_m33);
  o0.xyzw = r0.xyzw;
  o1.xyzw = r0.xyzw;

// Auto-fixed shader
float4 stereo = StereoParams.Load(0);
o1.x += stereo.x * (o1.w - stereo.y);
  return;
}