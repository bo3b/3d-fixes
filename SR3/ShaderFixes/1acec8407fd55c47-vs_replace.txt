
cbuffer vc0 : register(b0)
{
  float Decal_Map_OffsetU : packoffset(c0);
  float Decal_Map_OffsetV : packoffset(c1);
  float Decal_Map_Opacity : packoffset(c2);
  float Self_Illumination : packoffset(c3);
  float Decal_Map_TilingU : packoffset(c4);
  float4 Diffuse_Color : packoffset(c5);
}

cbuffer vc1 : register(b1)
{
  float4 Time : packoffset(c0);
  float2 Target_dimensions : packoffset(c2);
}

cbuffer vc2 : register(b2)
{
  float4x4 projTM : packoffset(c0);
  float4 eyePos : packoffset(c4);
  float4 Fog_dist : packoffset(c10);
  float3 Position_scale : packoffset(c20);
}

Texture2D<float4> StereoParams : register(t125);

void main(
  float3 v0 : POSITION0,
  int2 v1 : TEXCOORD0,
  float4 v2 : NORMAL0,
  float4 v3 : TANGENT0,
  float4 v4 : POSITION2,
  float4 v5 : POSITION3,
  float4 v6 : POSITION4,
  float4 v7 : COLOR1,
  float4 v8 : COLOR2,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1,
  out float4 o3 : TEXCOORD2,
  out float4 o4 : TEXCOORD3,
  out float3 o5 : TEXCOORD4)
{
  float4 r0,r1,r2;
  uint4 bitmask;
  r0.w = 1.000000000e+000;
  r1.xyz = v0.xyz;
  r1.w = 1.000000000e+000;
  r0.x = dot(v4.xyzw, r1.xyzw);
  r0.y = dot(v5.xyzw, r1.xyzw);
  r0.z = dot(v6.xyzw, r1.xyzw);
  r1.x = dot(r0.xyzw, projTM._m00_m10_m20_m30);
  r1.y = dot(r0.xyzw, projTM._m01_m11_m21_m31);
  r1.z = dot(r0.xyzw, projTM._m02_m12_m22_m32);
  r1.w = dot(r0.xyzw, projTM._m03_m13_m23_m33);
  r0.xyz = -eyePos.xyz + r0.xyz;
  o0.xyzw = r1.xyzw;
  o2.xyzw = r1.xyzw;
  o1.xyz = Diffuse_Color.xyz * v7.xyz;
  o1.w = Diffuse_Color.w;
  r0.w = v8.x * 1.000000000e+002 + Time.x;
  r1.x = Decal_Map_OffsetV * Decal_Map_OffsetU;
  r1.y = r1.x / Decal_Map_Opacity;
  r0.w = r1.y * r0.w;
  r0.w = floor(r0.w);
  r1.y = 5.000000000e-001 + r0.w;
  r1.y = r1.y / r1.x;
  r1.y = floor(r1.y);
  r0.w = -r1.y * r1.x + r0.w;
  r1.x = 5.000000000e-001 + r0.w;
  r1.x = r1.x / Decal_Map_OffsetU;
  r1.x = floor(r1.x);
  r0.w = -r1.x * Decal_Map_OffsetU + r0.w;
  r1.x = r1.x / Decal_Map_OffsetV;
  r1.y = 1.000000e+000 / Decal_Map_OffsetU;
  r1.zw = v1.xy;
  r1.zw = float2(9.765625e-004,9.765625e-004) * r1.zw;
  r2.x = r1.z / Decal_Map_OffsetU;
  o3.z = r0.w * r1.y + r2.x;
  r0.w = r1.w / Decal_Map_OffsetV;
  o3.w = r0.w + r1.x;
  r0.w = Decal_Map_TilingU * r1.w;
  o3.x = Decal_Map_TilingU * r1.z;
  r1.x = Decal_Map_OffsetU / Decal_Map_OffsetV;
  o3.y = r1.x * r0.w;
  o5.x = r1.x;
  r0.w = v2.w * 2.000000000e+000 + -1.000000000e+000;
  r0.w = r0.w * 5.000000000e-001 + 5.000000000e-001;
  r1.x = 3.264000000e+004 * v8.x;
  r0.w = r0.w * 2.550000000e+002 + r1.x;
  o4.x = 1.525902189e-005 * r0.w;
  o4.y = Decal_Map_TilingU;
  o4.z = Decal_Map_OffsetU;
  o4.w = Decal_Map_OffsetV;
  r0.w = Fog_dist.x * r0.y;
  r1.x = -1.442695022e+000 * r0.w;
  r1.x = exp2(r1.x);
  r1.x = 1.000000000e+000 + -r1.x;
  r0.w = r1.x / r0.w;
  r1.x = 9.999999776e-003 < abs(r0.y);
  r0.x = dot(r0.xyz, r0.xyz);
  r0.x = sqrt(r0.x);
  r0.x = Fog_dist.y * r0.x;
  r0.y = r1.x ? r0.w : 1.000000000e+000;
  r0.x = r0.y * r0.x + -Fog_dist.w;
  r0.x = exp2(-r0.x);
  r0.x = min(r0.x, 1.000000000e+000);
  o5.z = 1.000000000e+000 + -r0.x;
  o5.y = Time.w;

// Auto-fixed shader
float4 stereo = StereoParams.Load(0);
o2.x += stereo.x * (o2.w - stereo.y);
  return;
}