cbuffer cb4 : register(b4)
{
  float4 cb4[11];
}


cbuffer vc0 : register(b0)
{
  float Max_Fog_Depth : packoffset(c0) = float(4.000000e+000);
}

cbuffer vc1 : register(b1)
{
  float4 Time : packoffset(c0);
  float2 Target_dimensions : packoffset(c2);
}

cbuffer vc4 : register(b4)
{
  float4 Tint_color : packoffset(c1);
  float4 Fog_color : packoffset(c4);
  float4 IR_Pixel_Steps : packoffset(c9);
  float4 IR_Similarity_Data : packoffset(c10);
}
SamplerState Normal_MapSampler_s : register(s0);
SamplerState Blend_MapSampler_s : register(s1);
SamplerState IR_GBuffer_DepthSampler_s : register(s14);
SamplerState Planar_Reflection_MapSampler_s : register(s15);
Texture2D<float4> Normal_MapSampler : register(t0);
Texture2D<float4> Blend_MapSampler : register(t1);
Texture2D<float4> IR_GBuffer_DepthSampler : register(t14);
Texture2D<float4> Planar_Reflection_MapSampler : register(t15);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : SV_Position0,
  float2 v1 : TEXCOORD0,
  float3 v2 : TEXCOORD1,
  float3 v3 : TEXCOORD2,
  float4 v4 : TEXCOORD3,
  float4 v5 : TEXCOORD4,
  float4 v6 : TEXCOORD5,
  float4 v7 : TEXCOORD6,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask;
  r0.xy = v1.yx + v1.yx;
  r0.zw = -Time.xx * float2(1.818182e-002,2.222222e-002) + r0.xy;
  r0.xy = Time.xx * float2(2.000000e-002,1.666667e-002) + r0.yx;
  r1.xyzw = Normal_MapSampler.Sample(Normal_MapSampler_s, r0.xy).xyzw;
  r1.yzw = r1.xyw * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r0.xyzw = Normal_MapSampler.Sample(Normal_MapSampler_s, r0.zw).xyzw;
  r0.yzw = r0.xyw * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r0.x = r0.y * r0.w;
  r2.xy = -r0.zx;
  r0.x = dot(r0.zx, r2.xy);
  r0.x = saturate(1.000000000e+000 + r0.x);
  r2.z = sqrt(r0.x);
  r0.x = dot(r2.xyz, r2.xyz);
  r0.x = rsqrt(r0.x);
  r0.xyz = r2.xyz * r0.xxx;
  r1.x = r1.y * r1.w;
  r2.xy = -r1.zx;
  r0.w = dot(r1.zx, r2.xy);
  r0.w = saturate(1.000000000e+000 + r0.w);
  r2.z = sqrt(r0.w);
  r0.w = dot(r2.xyz, r2.xyz);
  r0.w = rsqrt(r0.w);
  r0.xyz = r2.xyz * r0.www + r0.xyz;
  r0.xyz = float3(5.000000e-001,5.000000e-001,5.000000e-001) * r0.xyz;
  r0.w = dot(v3.xyz, v3.xyz);
  r0.w = rsqrt(r0.w);
  r1.xy = v3.xy * r0.ww;
  r0.yw = r1.xy * r0.yy;
  r1.x = dot(v2.xyz, v2.xyz);
  r1.x = rsqrt(r1.x);
  r1.xy = v2.xy * r1.xx;
  r0.xy = r0.xx * r1.xy + r0.yw;
  r0.w = dot(v7.xyz, v7.xyz);
  r0.w = rsqrt(r0.w);
  r1.xy = v7.xy * r0.ww;
  r0.xy = r0.zz * r1.xy + r0.xy;
  r0.xy = float2(-5.000000e-001,-4.800000e-001) + r0.xy;
  r0.zw = v4.xy / v4.ww;
  r0.zw = r0.zw * float2(5.000000e-001,5.000000e-001) + float2(5.000000e-001,5.000000e-001);
  r0.w = 1.000000000e+000 + -r0.w;
  r1.x = r0.x * 2.000000030e-001 + r0.z;
  r1.y = r0.y * 5.000000000e-001 + r0.w;
  r0.xyzw = Planar_Reflection_MapSampler.Sample(Planar_Reflection_MapSampler_s, r1.xy).xyzw;
  r0.xyz = r0.xyz / cb4[1].xyz;
  r1.xyz = v5.xyz / v5.www;
  r2.xy = r1.xy * float2(5.000000e-001,5.000000e-001) + float2(5.000000e-001,5.000000e-001);
  r0.w = cb4[10].z * r1.z + cb4[10].w;
  r0.w = 1.000000e+000 / r0.w;
  r2.z = 1.000000000e+000 + -r2.y;
  r1.xyzw = IR_GBuffer_DepthSampler.Sample(IR_GBuffer_DepthSampler_s, r2.xz).xyzw;
  r1.x = cb4[10].z * r1.x + cb4[10].w;
  r1.x = 1.000000e+000 / r1.x;
  r0.w = r1.x + -r0.w;
  r1.x = -5.000000000e-001 >= r0.w;
  r1.x = r1.x ? 1.000000 : 0;
  r1.y = Max_Fog_Depth + -abs(-r0.w);
  r0.w = r1.x * r1.y + abs(r0.w);
  r0.w = saturate(r0.w / Max_Fog_Depth);
  r0.w = max(r0.w, 5.000000075e-002);
  r1.y = min(r0.w, 9.499999881e-001);
  r1.x = 0.000000000e+000;
  r1.xyzw = Blend_MapSampler.Sample(Blend_MapSampler_s, r1.xy).xyzw;
  r2.xyz = r1.xyz / cb4[1].xyz;
  r0.xyz = -r2.xyz + r0.xyz;
  r0.w = dot(v6.xyz, v6.xyz);
  r0.w = rsqrt(r0.w);
  r3.xyz = v6.xyz * r0.www;
  r0.w = saturate(dot(r3.xyz, v7.xyz));
  r0.w = -r0.w * r0.w + 1.000000000e+000;
  r0.xyz = r0.www * r0.xyz + r2.xyz;
  r0.w = 1.000000000e+000 + -v7.w;
  r0.xyz = r0.www * r0.xyz;
  r1.xyz = v7.www * cb4[4].xyz + r0.xyz;
  o0.xyzw = cb4[1].xyzw * r1.xyzw;
  return;
}