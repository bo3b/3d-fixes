cbuffer cb4 : register(b4)
{
  float4 cb4[15];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[9];
}


cbuffer vc0 : register(b0)
{
  float Specular_Map_Amount : packoffset(c1);
  float4 Specular_Color : packoffset(c2);
  float Specular_Alpha : packoffset(c3);
  float Self_Illumination : packoffset(c4);
  float ClampU : packoffset(c5);
  float ClampV : packoffset(c6);
  float Room_Depth : packoffset(c7);
  float Decal_Map_Opacity : packoffset(c8);
  float4 Diffuse_Color : packoffset(c10);
}

cbuffer vc1 : register(b1)
{
  float4 Time : packoffset(c0);
}

cbuffer vc4 : register(b4)
{
  float4 Tint_color : packoffset(c1);
  float4 V_ambient_render : packoffset(c2);
  float4 V_back_ambient_render : packoffset(c3);
  float4 Fog_color : packoffset(c4);
  float4 V_light_color : packoffset(c6);
  float4 lightPos : packoffset(c13);
  float4 TOD_window_tint : packoffset(c14);
}
SamplerState Diffuse_MapSampler_s : register(s0);
SamplerState Decal_MapSampler_s : register(s2);
SamplerState Night_Additive_MapSampler_s : register(s3);
Texture2D<float4> Diffuse_MapSampler : register(t0);
Texture2D<float4> Decal_MapSampler : register(t2);
Texture2D<float4> Night_Additive_MapSampler : register(t3);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : SV_Position0,
  float3 v1 : TEXCOORD0,
  float3 v2 : TEXCOORD1,
  float4 v3 : TEXCOORD2,
  float4 v4 : TEXCOORD3,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4;
  uint4 bitmask;
  r0.x = dot(v1.xz, v1.xz);
  r0.x = rsqrt(r0.x);
  r0.x = v1.x * r0.x;
  r0.x = cb0[7].x * r0.x;
  r0.y = cb0[5].x + cb0[5].x;
  r0.x = max(-r0.y, r0.x);
  r0.x = min(r0.y, r0.x);
  r0.z = dot(v1.yz, v1.yz);
  r0.z = rsqrt(r0.z);
  r0.z = v1.y * r0.z;
  r0.z = cb0[7].x * r0.z;
  r0.w = cb0[6].x + cb0[6].x;
  r0.z = max(-r0.w, r0.z);
  r0.z = min(r0.w, r0.z);
  r0.xy = v4.xy + r0.xz;
  r1.xyzw = Night_Additive_MapSampler.Sample(Night_Additive_MapSampler_s, r0.xy).xyzw;
  r0.xyzw = Diffuse_MapSampler.Sample(Diffuse_MapSampler_s, r0.xy).xyzw;
  r1.xyz = cb4[14].xyz * r1.xyz;
  r1.xyz = Time.www * r1.xyz;
  r1.xyz = cb4[14].www * r1.xyz;
  r2.w = 1.000000000e+000;
  r2.xyz = v2.xyz;
  r3.xyzw = r2.xyzw * r0.xyzw;
  r4.xyzw = Decal_MapSampler.Sample(Decal_MapSampler_s, v4.zw).xyzw;
  r0.xyz = -r0.xyz * r2.xyz + r4.xyz;
  r0.w = cb0[8].x * r4.w;
  r0.xyz = r0.www * r0.xyz + r3.xyz;
  r2.xyz = -cb4[3].xyz + cb4[2].xyz;
  r1.w = dot(cb4[13].xyz, v3.xyz);
  r2.w = r1.w * 5.000000000e-001 + 5.000000000e-001;
  r1.w = saturate(r1.w);
  r2.xyz = r2.www * r2.xyz + cb4[3].xyz;
  r2.xyz = r1.www * cb4[6].xyz + r2.xyz;
  r4.xyz = r0.xyz * r2.xyz + -r1.xyz;
  r1.xyz = r0.www * r4.xyz + r1.xyz;
  r1.xyz = r0.xyz * cb0[4].xxx + r1.xyz;
  r0.xyz = r0.xyz * r2.xyz + r1.xyz;
  r0.w = 1.000000000e+000 + -v3.w;
  r0.xyz = r0.www * r0.xyz;
  r3.xyz = v3.www * cb4[4].xyz + r0.xyz;
  o0.xyzw = cb4[1].xyzw * r3.xyzw;
  return;
}