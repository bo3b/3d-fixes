cbuffer cb4 : register(b4)
{
  float4 cb4[14];
}


cbuffer vc4 : register(b4)
{
  float4 Tint_color : packoffset(c1);
  float4 V_ambient_render : packoffset(c2);
  float4 V_back_ambient_render : packoffset(c3);
  float4 Fog_color : packoffset(c4);
  float4 V_light_color : packoffset(c6);
  float Alpha_Threshold : packoffset(c8);
  float4 lightPos : packoffset(c13);
}
SamplerState Diffuse_MapSampler_s : register(s1);
Texture2D<float4> Diffuse_MapSampler : register(t1);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : SV_Position0,
  float2 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  float4 v3 : TEXCOORD2,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2;
  uint4 bitmask;
  r0.xyzw = Diffuse_MapSampler.Sample(Diffuse_MapSampler_s, v1.xy).xyzw;
  r1.w = 1.000000000e+000;
  r2.x = r0.w * r1.w + -cb4[8].x;
  r2.x = r2.x < 0.000000000e+000;
  if (r2.x != 0) discard;
  r2.x = v3.w < 0.000000000e+000;
  if (r2.x != 0) discard;
  r1.xyz = v2.xyz;
  r0.xyzw = r1.xyzw * r0.xyzw;
  r1.xyz = -cb4[3].xyz + cb4[2].xyz;
  r1.w = dot(cb4[13].xyz, v3.xyz);
  r2.x = r1.w * 5.000000000e-001 + 5.000000000e-001;
  r1.w = saturate(r1.w);
  r1.xyz = r2.xxx * r1.xyz + cb4[3].xyz;
  r1.xyz = r1.www * cb4[6].xyz + r1.xyz;
  r1.xyz = r1.xyz * r0.xyz;
  r1.w = 1.000000000e+000 + -v2.w;
  r1.xyz = r1.www * r1.xyz;
  r0.xyz = v2.www * cb4[4].xyz + r1.xyz;
  o0.xyzw = cb4[1].xyzw * r0.xyzw;
  return;
}