
cbuffer vc0 : register(b0)
{
  float4 Diffuse_Color_2 : packoffset(c0);
  float Glow_Falloff_Inversion_1 : packoffset(c1);
  float Glow_Falloff_Power_1 : packoffset(c2);
  float4 Glow_Color_1 : packoffset(c3);
  float Self_Illumination_2 : packoffset(c4);
  float4 Glow_Color_2 : packoffset(c5);
  float Glow_Falloff_Power_2 : packoffset(c6);
  float Glow_Falloff_Inversion_2 : packoffset(c7);
  float4 Diffuse_Color : packoffset(c8);
  float Self_Illumination_1 : packoffset(c9);
  float Diffuse_ScrollU_1 : packoffset(c10);
  float Diffuse_ScrollV_1 : packoffset(c11);
  float Diffuse_ScrollU_2 : packoffset(c12);
  float Diffuse_ScrollV_2 : packoffset(c13);
  float Glow_ScrollU_1 : packoffset(c14);
  float Glow_ScrollV_1 : packoffset(c15);
  float Glow_ScrollU_2 : packoffset(c16);
  float Glow_ScrollV_2 : packoffset(c17);
  float Specular_Alpha : packoffset(c18);
  float Diffuse_Light_Amount : packoffset(c19);
}

cbuffer vc1 : register(b1)
{
  float4 Time : packoffset(c0);
  float2 Target_dimensions : packoffset(c2);
}

cbuffer vc2 : register(b2)
{
  float4x4 projTM : packoffset(c0);
  float4 eyePos : packoffset(c4);
  float4 Object_instance_params_2 : packoffset(c5);
  row_major float3x4 objTM : packoffset(c16);
  float3 Position_scale : packoffset(c20);
}

Texture2D<float4> StereoParams : register(t125);

void main(
  float3 v0 : POSITION0,
  int2 v1 : TEXCOORD0,
  float4 v2 : NORMAL0,
  float3 v3 : TANGENT0,
  int2 v4 : TEXCOORD1,
  int2 v5 : TEXCOORD2,
  out float4 o0 : SV_Position0,
  out float2 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1,
  out float4 o3 : TEXCOORD2,
  out float4 o4 : TEXCOORD3,
  out float4 o5 : TEXCOORD4)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask;
  r0.w = 1.000000000e+000;
  r1.xyz = v0.xyz;
  r1.w = 1.000000000e+000;
  r0.x = dot(objTM._m00_m01_m02_m03, r1.xyzw);
  r0.y = dot(objTM._m10_m11_m12_m13, r1.xyzw);
  r0.z = dot(objTM._m20_m21_m22_m23, r1.xyzw);
  r1.x = dot(r0.xyzw, projTM._m00_m10_m20_m30);
  r1.y = dot(r0.xyzw, projTM._m01_m11_m21_m31);
  r1.z = dot(r0.xyzw, projTM._m02_m12_m22_m32);
  r1.w = dot(r0.xyzw, projTM._m03_m13_m23_m33);
  r0.xyz = eyePos.xyz + -r0.xyz;
  o0.xyzw = r1.xyzw;
  o2.xyzw = r1.xyzw;
  r1.xy = v1.xy;
  r1.xy = float2(9.765625e-004,9.765625e-004) * r1.xy;
  r0.w = Time.x * 1.000000047e-003;
  r0.w = frac(r0.w);
  o1.x = r0.w * Diffuse_ScrollU_2 + r1.x;
  o1.y = r0.w * Diffuse_ScrollV_2 + r1.y;
  r2.xyz = v3.xyz * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r3.x = dot(objTM._m00_m01_m02, r2.xyz);
  r3.y = dot(objTM._m10_m11_m12, r2.xyz);
  r3.z = dot(objTM._m20_m21_m22, r2.xyz);
  r1.z = dot(r3.xyz, r3.xyz);
  r1.z = rsqrt(r1.z);
  r2.xyz = r3.xyz * r1.zzz;
  o3.x = dot(r0.xyz, r2.xyz);
  r2.xyzw = v2.xyzw * float4(2.000000e+000,2.000000e+000,2.000000e+000,2.000000e+000) + float4(-1.000000e+000,-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r3.x = dot(objTM._m00_m01_m02, r2.xyz);
  r3.y = dot(objTM._m10_m11_m12, r2.xyz);
  r3.z = dot(objTM._m20_m21_m22, r2.xyz);
  r1.z = r2.w * 5.000000000e-001 + 5.000000000e-001;
  r1.z = 2.550000000e+002 * r1.z;
  r1.z = Object_instance_params_2.x * 3.264000000e+004 + r1.z;
  o3.w = 1.525902189e-005 * r1.z;
  r1.z = dot(r3.xyz, r3.xyz);
  r1.z = rsqrt(r1.z);
  r2.xyz = r3.xyz * r1.zzz;
  o3.z = dot(r0.xyz, r2.xyz);
  o3.y = 0.000000000e+000;
  r0.xy = v4.xy;
  o4.zw = float2(9.765625e-004,9.765625e-004) * r0.xy;
  o4.x = r0.w * Diffuse_ScrollU_1 + r1.x;
  o4.y = r0.w * Diffuse_ScrollV_1 + r1.y;
  r0.xy = v5.xy;
  r0.xy = float2(9.765625e-004,9.765625e-004) * r0.xy;
  o5.x = r0.w * Glow_ScrollU_1 + r0.x;
  o5.y = r0.w * Glow_ScrollV_1 + r0.y;
  o5.z = r0.w * Glow_ScrollU_2 + r0.x;
  o5.w = r0.w * Glow_ScrollV_2 + r0.y;

// Auto-fixed shader
float4 stereo = StereoParams.Load(0);
o2.x += stereo.x * (o2.w - stereo.y);
  return;
}