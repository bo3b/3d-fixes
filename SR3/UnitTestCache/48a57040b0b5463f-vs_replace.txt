
cbuffer vc2 : register(b2)
{
  float4x4 projTM : packoffset(c0);
  row_major float3x4 Eye_orient : packoffset(c11);
  row_major float3x4 objTM : packoffset(c16);
}

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : POSITION0,
  float4 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  float4 v3 : TEXCOORD2,
  float4 v4 : TEXCOORD3,
  float4 v5 : TEXCOORD4,
  float4 v6 : COLOR0,
  float4 v7 : COLOR2,
  float4 v8 : POSITION3,
  float4 v9 : POSITION4,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0)
{
  float4 r0,r1,r2,r3,r4;
  uint4 bitmask;
  r0.xy = float2(-5.000000e-001,-5.000000e-001) + v1.zw;
  r0.xy = v8.ww * r0.xy;
  sincos(v2.x, r1.x, r2.x);
  r1.yzw = Eye_orient._m00_m01_m02 * r2.xxx;
  r1.yzw = r1.xxx * Eye_orient._m10_m11_m12 + r1.yzw;
  r3.xyz = v0.xyz;
  r3.w = 1.000000000e+000;
  r4.x = dot(objTM._m00_m01_m02_m03, r3.xyzw);
  r4.y = dot(objTM._m10_m11_m12_m13, r3.xyzw);
  r4.z = dot(objTM._m20_m21_m22_m23, r3.xyzw);
  r0.xzw = r0.xxx * r1.yzw + r4.xyz;
  r1.xyz = Eye_orient._m00_m01_m02 * r1.xxx;
  r1.xyz = -r2.xxx * Eye_orient._m10_m11_m12 + r1.xyz;
  r0.xyz = r0.yyy * r1.xyz + r0.xzw;
  r0.xyz = -Eye_orient._m20_m21_m22 * float3(1.000000e-003,1.000000e-003,1.000000e-003) + r0.xyz;
  r0.w = 1.000000000e+000;
  r1.x = dot(r0.xyzw, projTM._m02_m12_m22_m32);
  r1.y = dot(r0.xyzw, projTM._m03_m13_m23_m33);
  r1.z = 5.000000000e-001 < v0.w;
  o0.z = r1.z ? r1.y : r1.x;
  o0.w = r1.y;
  o0.x = dot(r0.xyzw, projTM._m00_m10_m20_m30);
  o0.y = dot(r0.xyzw, projTM._m01_m11_m21_m31);
  o1.xyz = v6.xyz;
  o1.w = 0.000000000e+000;
  return;
}