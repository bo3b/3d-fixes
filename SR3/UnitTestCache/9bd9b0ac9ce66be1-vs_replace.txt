cbuffer cb1 : register(b1)
{
  float4 cb1[4];
}


cbuffer vc1 : register(b1)
{
  float4 Dual_Paraboloid_Transform : packoffset(c3);
}

cbuffer vc2 : register(b2)
{
  float4x4 projTM : packoffset(c0);
  float4 eyePos : packoffset(c4);
  float4 Fog_dist : packoffset(c10);
  float3 Position_scale : packoffset(c20);
}

Texture2D<float4> StereoParams : register(t125);

void main(
  float3 v0 : POSITION0,
  float4 v1 : POSITION2,
  float4 v2 : POSITION3,
  float4 v3 : POSITION4,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0,
  out float2 o2 : TEXCOORD1)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask;
  r0.xyz = v0.xyz;
  r0.w = 1.000000000e+000;
  r1.z = dot(v3.xyzw, r0.xyzw);
  r2.z = cb1[3].w * r1.z;
  r1.y = dot(v2.xyzw, r0.xyzw);
  r2.y = dot(v1.xyzw, r0.xyzw);
  r2.w = -cb1[3].w * r1.y;
  r0.yzw = cb1[3].xyz + r2.yzw;
  r1.x = r2.y;
  r1.xyz = -eyePos.xyz + r1.xyz;
  r1.w = dot(r0.yzw, r0.yzw);
  r1.w = sqrt(r1.w);
  r2.xyz = r0.yzw / r1.www;
  r0.y = -1.000000015e-001 + r1.w;
  r3.z = 1.000100048e-003 * r0.y;
  r0.y = 1.000000000e+000 + r2.z;
  r3.xy = r2.xy / r0.yy;
  r3.w = 1.000000000e+000;
  o0.xyzw = r3.xyzw;
  o1.xyzw = r3.xyzw;
  r0.y = Fog_dist.x * r1.y;
  r0.z = -1.442695022e+000 * r0.y;
  r0.z = exp2(r0.z);
  r0.z = 1.000000000e+000 + -r0.z;
  r0.y = r0.z / r0.y;
  r0.z = 9.999999776e-003 < abs(r1.y);
  r1.x = dot(r1.xyz, r1.xyz);
  r1.x = sqrt(r1.x);
  r1.x = Fog_dist.y * r1.x;
  r0.y = r0.z ? r0.y : 1.000000000e+000;
  r0.y = r0.y * r1.x + -Fog_dist.w;
  r0.y = exp2(-r0.y);
  r0.y = min(r0.y, 1.000000000e+000);
  r0.x = 1.000000000e+000 + -r0.y;
  o2.xy = r0.xw;
  return;
}