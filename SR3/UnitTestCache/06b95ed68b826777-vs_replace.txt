
cbuffer vc2 : register(b2)
{
  float4x4 projTM : packoffset(c0);
  float4 eyePos : packoffset(c4);
  float4 Fog_dist : packoffset(c10);
  float3 Position_scale : packoffset(c20);
  float Reflection_Plane_Height : packoffset(c30);
}

Texture2D<float4> StereoParams : register(t125);

void main(
  float3 v0 : POSITION0,
  float3 v1 : NORMAL0,
  float4 v2 : TANGENT0,
  int2 v3 : TEXCOORD0,
  float4 v4 : POSITION2,
  float4 v5 : POSITION3,
  float4 v6 : POSITION4,
  float4 v7 : COLOR2,
  out float4 o0 : SV_Position0,
  out float2 o1 : TEXCOORD0,
  out float3 o2 : TEXCOORD1,
  out float3 o3 : TEXCOORD2,
  out float4 o4 : TEXCOORD3,
  out float4 o5 : TEXCOORD4,
  out float4 o6 : TEXCOORD5,
  out float4 o7 : TEXCOORD6)
{
  float4 r0,r1,r2,r3,r4;
  uint4 bitmask;
  r0.xyz = v0.xyz;
  r0.w = 1.000000000e+000;
  r1.y = dot(v5.xyzw, r0.xyzw);
  r1.w = 1.000000000e+000;
  r1.x = dot(v4.xyzw, r0.xyzw);
  r1.z = dot(v6.xyzw, r0.xyzw);
  r0.x = dot(r1.xyzw, projTM._m00_m10_m20_m30);
  r0.y = dot(r1.xyzw, projTM._m01_m11_m21_m31);
  r0.z = dot(r1.xyzw, projTM._m02_m12_m22_m32);
  r0.w = dot(r1.xyzw, projTM._m03_m13_m23_m33);
  r2.xzw = r1.xzw;
  o0.xyzw = r0.xyzw;
  o5.xyzw = r0.xyzw;
  r0.xy = v3.xy;
  o1.xy = float2(9.765625e-004,9.765625e-004) * r0.xy;
  r0.xyzw = v2.xyzw * float4(2.000000e+000,2.000000e+000,2.000000e+000,2.000000e+000) + float4(-1.000000e+000,-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r3.x = dot(v4.xyz, r0.xyz);
  r3.y = dot(v5.xyz, r0.xyz);
  r3.z = dot(v6.xyz, r0.xyz);
  r0.x = dot(r3.xyz, r3.xyz);
  r0.x = rsqrt(r0.x);
  r0.xyz = r3.xyz * r0.xxx;
  o2.xyz = r0.xyz;
  r3.xyz = v1.xyz * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r4.x = dot(v4.xyz, r3.xyz);
  r4.y = dot(v5.xyz, r3.xyz);
  r4.z = dot(v6.xyz, r3.xyz);
  r1.w = dot(r4.xyz, r4.xyz);
  r1.w = rsqrt(r1.w);
  r3.xyz = r4.xyz * r1.www;
  r4.xyz = r3.zxy * r0.yzx;
  r0.xyz = r3.yzx * r0.zxy + -r4.xyz;
  o7.xyz = r3.xyz;
  o3.xyz = r0.www * r0.xyz;
  r2.y = Reflection_Plane_Height;
  o4.x = dot(r2.xyzw, projTM._m00_m10_m20_m30);
  o4.y = dot(r2.xyzw, projTM._m01_m11_m21_m31);
  o4.z = dot(r2.xyzw, projTM._m02_m12_m22_m32);
  o4.w = dot(r2.xyzw, projTM._m03_m13_m23_m33);
  o6.xyz = eyePos.xyz + -r1.xyz;
  r0.xyz = -eyePos.xyz + r1.xyz;
  r0.w = v7.x * 3.264000000e+004 + 1.275000000e+002;
  o6.w = 1.525902189e-005 * r0.w;
  r0.w = Fog_dist.x * r0.y;
  r1.x = -1.442695022e+000 * r0.w;
  r1.x = exp2(r1.x);
  r1.x = 1.000000000e+000 + -r1.x;
  r0.w = r1.x / r0.w;
  r1.x = 9.999999776e-003 < abs(r0.y);
  r0.x = dot(r0.xyz, r0.xyz);
  r0.x = sqrt(r0.x);
  r0.x = Fog_dist.y * r0.x;
  r0.y = r1.x ? r0.w : 1.000000000e+000;
  r0.x = r0.y * r0.x + -Fog_dist.w;
  r0.x = exp2(-r0.x);
  r0.x = min(r0.x, 1.000000000e+000);
  o7.w = 1.000000000e+000 + -r0.x;

// Auto-fixed shader
float4 stereo = StereoParams.Load(0);
o5.x += stereo.x * (o5.w - stereo.y);
  return;
}