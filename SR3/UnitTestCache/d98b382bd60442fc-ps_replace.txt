cbuffer cb4 : register(b4)
{
  float4 cb4[3];
}


cbuffer vc0 : register(b0)
{
  float Decal_Map_1_TilingU : packoffset(c0);
  float Decal_map_1_TilingV : packoffset(c1);
  float4 Diffuse_Color : packoffset(c2);
  float Decal_Map_1_Opacity : packoffset(c3);
  float Decal_Map_2_TilingU : packoffset(c4);
  float Decal_Map_2_TilingV : packoffset(c5);
  float Decal_Map_2_Opacity : packoffset(c6);
}

cbuffer vc4 : register(b4)
{
  float4 Tint_color : packoffset(c1);
  float4 V_ambient_render : packoffset(c2);
}
SamplerState Diffuse_MapSampler_s : register(s0);
SamplerState Decal_Map_1Sampler_s : register(s1);
SamplerState Decal_Map_2Sampler_s : register(s2);
Texture2D<float4> Diffuse_MapSampler : register(t0);
Texture2D<float4> Decal_Map_1Sampler : register(t1);
Texture2D<float4> Decal_Map_2Sampler : register(t2);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : SV_Position0,
  float2 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2;
  uint4 bitmask;
  r0.xyzw = Diffuse_MapSampler.Sample(Diffuse_MapSampler_s, v2.xy).xyzw;
  r0.xyz = cb4[2].xyz * r0.xyz;
  r1.xyzw = Decal_Map_1Sampler.Sample(Decal_Map_1Sampler_s, v2.zw).xyzw;
  r2.x = Decal_Map_1_Opacity * r1.w;
  r0.w = 1.000000000e+000;
  r1.xyzw = r1.xyzw + -r0.xyzw;
  r0.xyzw = r2.xxxx * r1.xyzw + r0.xyzw;
  r1.xyzw = Decal_Map_2Sampler.Sample(Decal_Map_2Sampler_s, v1.xy).xyzw;
  r2.xyzw = r1.xyzw + -r0.xyzw;
  r1.x = Decal_Map_2_Opacity * r1.w;
  r0.xyzw = r1.xxxx * r2.xyzw + r0.xyzw;
  o0.xyzw = cb4[1].xyzw * r0.xyzw;
  return;
}