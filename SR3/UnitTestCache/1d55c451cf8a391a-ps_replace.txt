cbuffer cb4 : register(b4)
{
  float4 cb4[14];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[7];
}


cbuffer vc0 : register(b0)
{
  float3 Base_Paint_Color : packoffset(c2);
  float Viewsphere_Amount : packoffset(c4);
  float Self_Illumination : packoffset(c6);
}

cbuffer vc4 : register(b4)
{
  float4 Tint_color : packoffset(c1);
  float4 V_ambient_render : packoffset(c2);
  float4 V_back_ambient_render : packoffset(c3);
  float4 Fog_color : packoffset(c4);
  float4 V_light_color : packoffset(c6);
  float4 lightPos : packoffset(c13);
}
SamplerState Viewsphere_MapSampler_s : register(s1);
Texture2D<float4> Viewsphere_MapSampler : register(t1);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : SV_Position0,
  float v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2;
  uint4 bitmask;
  r0.x = v1.x < 0.000000000e+000;
  if (r0.x != 0) discard;
  r0.xyz = -cb0[2].xyz + float3(1.000000e+000,1.000000e+000,1.000000e+000);
  r0.xyz = r0.xyz + r0.xyz;
  r1.xy = v2.xy * float2(5.000000e-001,-5.000000e-001) + float2(5.000000e-001,5.000000e-001);
  r1.xyzw = Viewsphere_MapSampler.Sample(Viewsphere_MapSampler_s, r1.xy).xyzw;
  r1.xyz = float3(-5.000000e-001,-5.000000e-001,-5.000000e-001) + r1.xyz;
  r1.xyz = cb0[4].xxx * r1.xyz + float3(5.000000e-001,5.000000e-001,5.000000e-001);
  r2.xyz = float3(1.000000e+000,1.000000e+000,1.000000e+000) + -r1.xyz;
  r0.xyz = -r0.xyz * r2.xyz + float3(1.000000e+000,1.000000e+000,1.000000e+000);
  r2.xyz = cb0[2].xyz * r1.xyz;
  r1.x = r1.x >= 5.000000e-001;
  r1.y = r1.y >= 5.000000e-001;
  r1.z = r1.z >= 5.000000e-001;
  r1.x = r1.x ? 1 : 0;
  r1.y = r1.y ? 1 : 0;
  r1.z = r1.z ? 1 : 0;
  r0.xyz = -r2.xyz * float3(2.000000e+000,2.000000e+000,2.000000e+000) + r0.xyz;
  r2.xyz = r2.xyz + r2.xyz;
  r0.xyz = r1.xyz * r0.xyz + r2.xyz;
  r1.xyz = cb0[6].xxx * r0.xyz;
  r2.xyz = -cb4[3].xyz + cb4[2].xyz;
  r0.w = dot(cb4[13].xyz, v2.xyz);
  r1.w = r0.w * 5.000000000e-001 + 5.000000000e-001;
  r0.w = saturate(r0.w);
  r2.xyz = r1.www * r2.xyz + cb4[3].xyz;
  r2.xyz = r0.www * cb4[6].xyz + r2.xyz;
  r0.xyz = r0.xyz * r2.xyz + r1.xyz;
  r0.w = 1.000000000e+000 + -v2.w;
  r0.xyz = r0.www * r0.xyz;
  r0.xyz = v2.www * cb4[4].xyz + r0.xyz;
  r0.w = 1.000000000e+000;
  o0.xyzw = cb4[1].xyzw * r0.xyzw;
  return;
}