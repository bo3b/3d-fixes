cbuffer cb4 : register(b4)
{
  float4 cb4[14];
}


cbuffer vc4 : register(b4)
{
  float4 Tint_color : packoffset(c1);
  float4 V_ambient_render : packoffset(c2);
  float4 V_back_ambient_render : packoffset(c3);
  float4 Fog_color : packoffset(c4);
  float4 V_light_color : packoffset(c6);
  float4 lightPos : packoffset(c13);
}
SamplerState Diffuse_mapSampler_s : register(s0);
Texture2D<float4> Diffuse_mapSampler : register(t0);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2;
  uint4 bitmask;
  r0.x = v2.x * v2.y;
  r0.x = 8.000000000e+002 * r0.x;
  r0.x = frac(r0.x);
  r0.y = 1.000000000e+000 + -v2.z;
  r0.x = -r0.y * r0.x + v2.z;
  r1.xyzw = Diffuse_mapSampler.Sample(Diffuse_mapSampler_s, v2.xy).xyzw;
  r0.xw = r1.ww * r0.xx + float2(-4.000000e-001,-1.000000e-001);
  r1.w = r0.x < 0.000000000e+000;
  if (r1.w != 0) discard;
  r1.w = v2.w < 0.000000000e+000;
  if (r1.w != 0) discard;
  r2.xyz = -cb4[3].xyz + cb4[2].xyz;
  r1.w = dot(cb4[13].xyz, v1.xyz);
  r2.w = r1.w * 5.000000000e-001 + 5.000000000e-001;
  r1.w = saturate(r1.w);
  r2.xyz = r2.www * r2.xyz + cb4[3].xyz;
  r2.xyz = r1.www * cb4[6].xyz + r2.xyz;
  r1.xyz = r2.xyz * r1.xyz;
  r1.w = 1.000000000e+000 + -v1.w;
  r1.xyz = r1.www * r1.xyz;
  r0.xyz = v1.www * cb4[4].xyz + r1.xyz;
  o0.xyzw = cb4[1].xyzw * r0.xyzw;
  return;
}