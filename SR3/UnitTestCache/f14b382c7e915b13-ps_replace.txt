cbuffer cb4 : register(b4)
{
  float4 cb4[5];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[8];
}


cbuffer vc1 : register(b1)
{
  float4x4 Inv_proj_matrix : packoffset(c4);
}

cbuffer vc4 : register(b4)
{
  float4 Tint_color : packoffset(c1);
  float4 V_back_ambient_render : packoffset(c3);
  float4 Fog_color : packoffset(c4);
}

cbuffer vc5 : register(b5)
{
  float2 Z_dimensions : packoffset(c0);
  float4 Diffuse_color : packoffset(c1);
  float3 Light_vec : packoffset(c2);
  float2 UV_anim_tiling : packoffset(c3);
  float4 Effect_opacity : packoffset(c4);
  float4 Ambient_color : packoffset(c5);
  float Self_illum : packoffset(c6);
  float4 VFX_material_tint : packoffset(c7);
  float3x3 Color_correct_matrix : packoffset(c34);
}
SamplerState Diffuse_Map_1Sampler_s : register(s0);
SamplerState Depth_bufferSampler_s : register(s1);
Texture2D<float4> Diffuse_Map_1Sampler : register(t0);
Texture2D<float4> Depth_bufferSampler : register(t1);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  float4 v3 : TEXCOORD2,
  float4 v4 : TEXCOORD3,
  float3 v5 : TEXCOORD4,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask;
  r0.x = dot(v4.xyz, Light_vec.xyz);
  r0.y = 1.000000000e+000 + -abs(-r0.x);
  r0.yzw = v3.xyz * r0.yyy;
  r1.x = saturate(-r0.x);
  r0.yzw = r1.xxx * Diffuse_color.xyz + r0.yzw;
  r0.xyz = r0.xxx * cb4[3].xyz + r0.yzw;
  r0.xyz = v1.xyz + r0.xyz;
  r1.x = Color_correct_matrix._m00;
  r1.y = Color_correct_matrix._m01;
  r1.z = Color_correct_matrix._m02;
  r2.xyzw = Diffuse_Map_1Sampler.Sample(Diffuse_Map_1Sampler_s, v5.xy).wxyz;
  r0.w = dot(r2.yzw, float3(3.000000e-001,5.900000e-001,1.100000e-001));
  r2.yzw = r2.yzw + -r0.www;
  r2.yzw = v4.www * r2.yzw + r0.www;
  r2.x = saturate(r2.x);
  r0.w = v1.w * r2.x;
  r1.x = dot(r2.yzw, r1.xyz);
  r3.x = Color_correct_matrix._m10;
  r3.y = Color_correct_matrix._m11;
  r3.z = Color_correct_matrix._m12;
  r1.y = dot(r2.yzw, r3.xyz);
  r3.x = Color_correct_matrix._m20;
  r3.y = Color_correct_matrix._m21;
  r3.z = Color_correct_matrix._m22;
  r1.z = dot(r2.yzw, r3.xyz);
  r2.xyz = r1.xyz * r0.xyz;
  r0.xyz = -r0.xyz * r1.xyz + cb4[4].xyz;
  r1.xyz = v3.www * r0.xyz + r2.xyz;
  r0.xy = float2(5.000000e-001,5.000000e-001) / Z_dimensions.xy;
  r2.xyz = v2.xyz / v2.www;
  r3.xy = r2.xy * float2(5.000000e-001,5.000000e-001) + float2(5.000000e-001,5.000000e-001);
  r3.z = 1.000000000e+000 + -r3.y;
  r0.xy = r3.xz + r0.xy;
  r3.xyzw = Depth_bufferSampler.Sample(Depth_bufferSampler_s, r0.xy).yzxw;
  r3.x = 1.000000000e+000;
  r0.x = dot(r3.xxzx, cb1[6].xyzw);
  r0.y = dot(r3.xxzx, cb1[7].xyzw);
  r0.x = r0.x / r0.y;
  r2.w = 1.000000000e+000;
  r0.y = dot(r2.wwzw, cb1[6].xyzw);
  r0.z = dot(r2.wwzw, cb1[7].xyzw);
  r0.y = r0.y / r0.z;
  r0.x = r0.x + -r0.y;
  r0.y = saturate(Diffuse_color.w * r0.x);
  r0.x = r0.x < -Diffuse_color.w;
  r0.x = r0.x ? 1.000000000e+000 : r0.y;
  r1.w = r0.w * r0.x;
  r0.xyzw = cb4[1].xyzw * r1.xyzw;
  r1.x = v5.z * -r0.w + r0.w;
  o0.xyz = r0.xyz * r0.www;
  o0.w = max(r1.x, 0.000000000e+000);
  return;
}