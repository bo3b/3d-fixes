cbuffer cb4 : register(b4)
{
  float4 cb4[5];
}


cbuffer vc0 : register(b0)
{
  float2 Cloud_U_Offset : packoffset(c0);
  float Cloud_Fade_Height : packoffset(c1);
  float Cloud_Full_Height : packoffset(c2);
  float3 TOD_Light_Dir : packoffset(c3);
  float3 TOD_Light_Color_Front : packoffset(c4);
  float3 TOD_Light_Color_Rear : packoffset(c5);
  float4 Layer_strengths : packoffset(c6);
  float Rimlight_scale : packoffset(c7);
  float Rimlight_power : packoffset(c8);
  float4 Scale : packoffset(c9);
  float Offset : packoffset(c10);
  float4 Layer_strengths2 : packoffset(c11);
}

cbuffer vc4 : register(b4)
{
  float4 Tint_color : packoffset(c1);
  float4 V_ambient_render : packoffset(c2);
  float4 Fog_color : packoffset(c4);
}
SamplerState Diffuse_Map_1Sampler_s : register(s0);
SamplerState Diffuse_Map_2Sampler_s : register(s1);
Texture2D<float4> Diffuse_Map_1Sampler : register(t0);
Texture2D<float4> Diffuse_Map_2Sampler : register(t1);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : SV_Position0,
  float3 v1 : TEXCOORD0,
  float3 v2 : TEXCOORD1,
  float4 v3 : TEXCOORD2,
  float4 v4 : TEXCOORD3,
  float4 v5 : TEXCOORD4,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5;
  uint4 bitmask;
  r0.x = v3.w < 0.000000000e+000;
  if (r0.x != 0) discard;
  r0.x = dot(v3.xyz, v3.xyz);
  r0.x = rsqrt(r0.x);
  r0.xyz = v3.xyz * r0.xxx;
  r0.w = dot(v2.xyz, v2.xyz);
  r0.w = rsqrt(r0.w);
  r1.xyz = v2.xyz * r0.www;
  r2.xyzw = Diffuse_Map_2Sampler.Sample(Diffuse_Map_2Sampler_s, v5.xy).xyzw;
  r0.w = r2.z * r2.z;
  r0.w = saturate(r2.x * r2.x + -r0.w);
  r0.w = 1.000000000e+000 + -r0.w;
  r3.z = sqrt(r0.w);
  r4.xyzw = Diffuse_Map_1Sampler.Sample(Diffuse_Map_1Sampler_s, v5.xy).xyzw;
  r0.w = r4.z * r4.z;
  r0.w = saturate(r4.x * r4.x + -r0.w);
  r0.w = 1.000000000e+000 + -r0.w;
  r5.z = sqrt(r0.w);
  r3.xy = r2.xz;
  r0.w = -r4.y + r2.y;
  r0.w = Layer_strengths2.x * r0.w + r4.y;
  r5.xy = r4.xz;
  r2.xyz = r3.xyz * Layer_strengths2.xxx + r5.xyz;
  r2.xyz = r2.xyz * float3(5.000000e-001,5.000000e-001,5.000000e-001) + float3(-0.000000e+000,-0.000000e+000,-1.000000e+000);
  r2.xyz = Layer_strengths.yyy * r2.xyz + float3(0.000000e+000,0.000000e+000,1.000000e+000);
  r1.w = dot(r2.xyz, r2.xyz);
  r1.w = rsqrt(r1.w);
  r2.xyw = r2.xyz * r1.www;
  r1.w = 1.000000000e+000 + -r2.z;
  r1.w = Layer_strengths.z * r1.w;
  r1.xyz = r2.yyy * r1.xyz;
  r0.xyz = r2.xxx * r0.xyz + r1.xyz;
  r1.x = dot(v4.xyz, v4.xyz);
  r1.x = rsqrt(r1.x);
  r1.xyz = v4.xyz * r1.xxx;
  r0.xyz = r2.www * r1.xyz + r0.xyz;
  r1.x = dot(r0.xyz, r0.xyz);
  r1.x = rsqrt(r1.x);
  r0.xyz = r1.xxx * r0.xyz;
  r0.x = dot(r0.xyz, -TOD_Light_Dir.xyz);
  r0.x = r0.x * 5.000000000e-001 + 5.000000000e-001;
  r1.xyz = TOD_Light_Color_Rear.xyz + -TOD_Light_Color_Front.xyz;
  r0.xyz = r0.xxx * r1.xyz + TOD_Light_Color_Front.xyz;
  r2.x = -Cloud_Fade_Height + abs(v1.y);
  r2.y = Cloud_Full_Height + -Cloud_Fade_Height;
  r2.x = saturate(r2.x / r2.y);
  r2.y = Layer_strengths.x * r0.w;
  r2.z = r2.y * r2.x;
  r2.x = -r2.y * r2.x + 1.000000000e+000;
  r3.w = -r2.x;
  r2.x = r2.z * r0.w;
  r2.y = saturate(r2.x);
  r2.w = 1.000000000e+000 + r3.w;
  r2.w = 1.000000000e+000 + -r2.w;
  r2.y = r2.w * r2.y;
  r2.y = Rimlight_power * r2.y;
  r4.xyz = Rimlight_scale * TOD_Light_Color_Front.xyz;
  r4.xyz = r4.xyz * r2.yyy;
  r2.y = dot(v1.xyz, -TOD_Light_Dir.xyz);
  r2.w = saturate(r2.y);
  r2.y = r2.y * 5.000000000e-001 + 5.000000000e-001;
  r1.xyz = r2.yyy * r1.xyz + TOD_Light_Color_Front.xyz;
  r2.y = log2(r2.w);
  r2.y = 1.500000000e+001 * r2.y;
  r2.y = exp2(r2.y);
  r4.xyz = r4.xyz * r2.yyy;
  r0.xyz = r0.xyz * r1.xyz + r4.xyz;
  r1.x = dot(v1.xyz, TOD_Light_Dir.xyz);
  r1.x = r1.x * 5.000000000e-001 + 5.000000000e-001;
  r1.xyz = r1.xxx * -TOD_Light_Color_Front.xyz + TOD_Light_Color_Front.xyz;
  r0.xyz = r1.www * r1.xyz + r0.xyz;
  r0.xyz = r2.zzz * r0.www + r0.xyz;
  r3.xyz = cb4[2].xyz + r0.xyz;
  r0.w = 1.000000000e+000;
  r1.x = 1.000000000e+000 + -v4.w;
  r1.x = r1.x * r2.x;
  r0.xyz = v4.www * cb4[4].xyz + r1.xxx;
  r0.xyzw = r3.xyzw + r0.xyzw;
  r0.xyzw = cb4[1].xyzw * r0.xyzw;
  o0.xyz = r0.xyz * r0.www;
  o0.w = r0.w;
  return;
}