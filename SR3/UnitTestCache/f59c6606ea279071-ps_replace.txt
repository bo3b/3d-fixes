cbuffer cb4 : register(b4)
{
  float4 cb4[2];
}


cbuffer vc4 : register(b4)
{
  float4 Tint_color : packoffset(c1);
}
SamplerState Sampler0Sampler_s : register(s0);
Texture2D<float4> Sampler0Sampler : register(t0);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask;
  r0.x = 5.000000000e+000 * v1.w;
  r1.x = 0.000000000e+000;
  r2.xyzw = float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
  r0.y = 0.000000000e+000;
  while (true) {
  r0.z = (int)r0.y >= (int)3;
  if (r0.z != 0) break;
  r0.z = r0.y;
  r1.y = r0.x * r0.z;
  r0.zw = v1.xy + -r1.xy;
  r3.xyzw = Sampler0Sampler.Sample(Sampler0Sampler_s, r0.zw).xyzw;
  r0.z = 0.000000000e+000 < r0.w;
  r3.x = r0.z ? r3.x : 0;
  r3.y = r0.z ? r3.y : 0;
  r3.z = r0.z ? r3.z : 0;
  r3.w = r0.z ? r3.w : 0;
  r2.xyzw = r3.xyzw + r2.xyzw;
  r0.y = (int)r0.y + 1;
  }
  r0.xyzw = cb4[1].xyzw * r2.xyzw;
  o0.xyzw = float4(3.333333e-001,3.333333e-001,3.333333e-001,3.333333e-001) * r0.xyzw;
  return;
}