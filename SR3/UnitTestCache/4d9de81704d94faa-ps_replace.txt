
cbuffer vc0 : register(b0)
{
  float blur_radius : packoffset(c0);
  float4 focal_params : packoffset(c1);
  float4 pixel_steps : packoffset(c2);
  float4 depth_params : packoffset(c3);
}
Texture2D<float4> depth_textureTexture : register(t0);
Texture2D<float4> color_samplerTexture : register(t1);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : SV_Position0,
  float2 v1 : TEXCOORD0,
  out float4 o0 : SV_Target0,
  out float4 o1 : SV_Target1)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7;
  uint4 bitmask;
  r0.xy = pixel_steps.xy * v1.xy;
  r0.x = 2.500000000e-001 * r0.x;
  r1.z = (int)r0.y;
  r0.x = (int)r0.x;
  r0.x = (uint)r0.x << 2;
  r1.x = (int)r0.x + 3;
  r0.xyzw = (int4)r1.xxxx + int4(-4,2,3,4);
  r0.yzw = r0.yzw;
  r0.x = (int)0 < (int)r0.x;
  r0.y = r0.y < pixel_steps.x;
  r0.z = r0.z < pixel_steps.x;
  r0.w = r0.w < pixel_steps.x;
  r1.w = 0.000000000e+000;
  r2.xyzw = depth_textureTexture.Load(r1.xzw, int3(2, 0, 0)).xyzw;
  r1.y = depth_params.z * r2.x + depth_params.w;
  r1.y = 1.000000e+000 / r1.y;
  r2.xy = -focal_params.zx + r1.yy;
  r2.zw = focal_params.wy + -focal_params.zx;
  r2.xy = saturate(r2.xy / r2.zw);
  r1.y = 1.000000000e+000 + -r2.y;
  r1.y = blur_radius * r2.x + r1.y;
  r0.z = r0.z ? r1.y : 0;
  r0.z = r0.z * r0.z;
  r1.y = 4.000000000e+000 * r0.z;
  r3.xyzw = depth_textureTexture.Load(r1.xzw, int3(3, 0, 0)).xyzw;
  r2.x = depth_params.z * r3.x + depth_params.w;
  r2.x = 1.000000e+000 / r2.x;
  r2.xy = -focal_params.zx + r2.xx;
  r2.xy = saturate(r2.xy / r2.zw);
  r2.y = 1.000000000e+000 + -r2.y;
  r2.x = blur_radius * r2.x + r2.y;
  r0.w = (int)r0.w & (int)r2.x;
  r0.w = r0.w * r0.w;
  r2.x = r0.w * 4.000000000e+000 + r1.y;
  r0.w = 4.000000000e+000 * r0.w;
  r2.x = 1.000000000e+000 + r2.x;
  r2.x = -r1.y / r2.x;
  r1.y = r2.x * -r1.y;
  r3.xyzw = color_samplerTexture.Load(r1.xzw, int3(3, 0, 0)).xyzw;
  r3.xyz = r3.xyz * r2.xxx;
  r0.w = r2.x * r0.w;
  r4.xyzw = depth_textureTexture.Load(r1.xzw, int3(1, 0, 0)).xyzw;
  r2.x = depth_params.z * r4.x + depth_params.w;
  r2.x = 1.000000e+000 / r2.x;
  r2.xy = -focal_params.zx + r2.xx;
  r2.xy = saturate(r2.xy / r2.zw);
  r2.y = 1.000000000e+000 + -r2.y;
  r2.x = blur_radius * r2.x + r2.y;
  r0.y = (int)r0.y & (int)r2.x;
  r0.y = r0.y * r0.y;
  r4.xyzw = depth_textureTexture.Load(r1.xzw, int3(0, 0, 0)).xyzw;
  r2.x = depth_params.z * r4.x + depth_params.w;
  r2.x = 1.000000e+000 / r2.x;
  r2.xy = -focal_params.zx + r2.xx;
  r2.xy = saturate(r2.xy / r2.zw);
  r2.y = 1.000000000e+000 + -r2.y;
  r2.x = blur_radius * r2.x + r2.y;
  r2.x = r2.x * r2.x;
  r2.y = 4.000000000e+000 * r2.x;
  r3.w = r0.y * 4.000000000e+000 + r2.y;
  r0.y = 4.000000000e+000 * r0.y;
  r3.w = 1.000000000e+000 + r3.w;
  r4.x = -r0.y / r3.w;
  r3.w = -r2.y / r3.w;
  r5.xyzw = color_samplerTexture.Load(r1.xzw, int3(1, 0, 0)).xyzw;
  r3.xyz = r4.xxx * r5.xyz + r3.xyz;
  r4.yzw = r5.xyz * r3.www;
  r5.xyzw = color_samplerTexture.Load(r1.xzw, int3(2, 0, 0)).xyzw;
  r3.xyz = r5.xyz + -r3.xyz;
  r1.y = r4.x * -r0.y + r1.y;
  r4.x = r4.x * r2.y;
  r2.y = r3.w * -r2.y;
  r3.w = r3.w * r0.y;
  r0.y = r0.z * 4.000000000e+000 + r0.y;
  r0.y = 1.000000000e+000 + r0.y;
  r0.y = r0.y + -r1.y;
  r0.y = r3.w / r0.y;
  r0.z = r0.y * r4.x;
  r3.xyz = r0.yyy * r3.xyz;
  o1.z = -r0.y * r0.w;
  r5.xyzw = depth_textureTexture.Load(r1.xzw, int3(-1, 0, 0)).xyzw;
  r0.y = depth_params.z * r5.x + depth_params.w;
  r0.y = 1.000000e+000 / r0.y;
  r0.yw = -focal_params.zx + r0.yy;
  r0.yw = saturate(r0.yw / r2.zw);
  r0.w = 1.000000000e+000 + -r0.w;
  r0.y = blur_radius * r0.y + r0.w;
  r5.xyzw = depth_textureTexture.Load(r1.xzw, int3(-2, 0, 0)).xyzw;
  r0.w = depth_params.z * r5.x + depth_params.w;
  r0.w = 1.000000e+000 / r0.w;
  r5.xy = -focal_params.zx + r0.ww;
  r5.xy = saturate(r5.xy / r2.zw);
  r0.w = 1.000000000e+000 + -r5.y;
  r0.w = blur_radius * r5.x + r0.w;
  r0.yw = r0.yw * r0.yw;
  r1.y = 4.000000000e+000 * r0.w;
  r3.w = r0.y * 4.000000000e+000 + r1.y;
  r0.y = 4.000000000e+000 * r0.y;
  r3.w = 1.000000000e+000 + r3.w;
  r4.x = -r1.y / r3.w;
  r3.w = -r0.y / r3.w;
  r5.xyzw = color_samplerTexture.Load(r1.xzw, int3(-1, 0, 0)).xyzw;
  r6.xyz = r5.xyz * r4.xxx;
  r4.yzw = r3.www * r5.xyz + r4.yzw;
  r5.xyzw = depth_textureTexture.Load(r1.xzw, int3(-4, 0, 0)).xyzw;
  r5.x = depth_params.z * r5.x + depth_params.w;
  r5.x = 1.000000e+000 / r5.x;
  r5.xy = -focal_params.zx + r5.xx;
  r5.xy = saturate(r5.xy / r2.zw);
  r5.y = 1.000000000e+000 + -r5.y;
  r5.x = blur_radius * r5.x + r5.y;
  r0.x = (int)r0.x & (int)r5.x;
  r0.x = r0.x * r0.x;
  r0.x = 4.000000000e+000 * r0.x;
  r5.xyzw = depth_textureTexture.Load(r1.xzw, int3(-3, 0, 0)).xyzw;
  r5.x = depth_params.z * r5.x + depth_params.w;
  r5.x = 1.000000e+000 / r5.x;
  r5.xy = -focal_params.zx + r5.xx;
  r2.zw = saturate(r5.xy / r2.zw);
  r2.w = 1.000000000e+000 + -r2.w;
  r2.z = blur_radius * r2.z + r2.w;
  r2.z = r2.z * r2.z;
  r2.w = r2.z * 4.000000000e+000 + r0.x;
  r2.z = 4.000000000e+000 * r2.z;
  r2.w = 1.000000000e+000 + r2.w;
  r2.w = -r2.z / r2.w;
  r5.xyzw = color_samplerTexture.Load(r1.xzw, int3(-3, 0, 0)).xyzw;
  r5.xyz = r2.www * r5.xyz + r6.xyz;
  r6.xyzw = color_samplerTexture.Load(r1.xzw, int3(-2, 0, 0)).xyzw;
  r7.xyzw = color_samplerTexture.Load(r1.xzw, int3(0, 0, 0)).xyzw;
  r1.xzw = r7.xyz + -r4.yzw;
  r4.yzw = r6.xyz + -r5.xyz;
  r0.w = r0.w * 4.000000000e+000 + r2.z;
  r5.x = r4.x * -r1.y;
  r1.y = r3.w * r1.y;
  r2.y = r3.w * -r0.y + r2.y;
  r3.w = r4.x * r0.y;
  r0.y = r2.x * 4.000000000e+000 + r0.y;
  r0.yw = float2(1.000000e+000,1.000000e+000) + r0.yw;
  r2.x = r2.w * -r2.z + r5.x;
  r0.x = r2.w * r0.x;
  r0.yw = -r2.yx + r0.yw;
  r0.w = r1.y / r0.w;
  r2.xyz = r0.www * r4.yzw + r3.xyz;
  o0.xyz = -r2.xyz + r1.xzw;
  o0.w = 0.000000000e+000;
  r0.z = r0.w * r3.w + r0.z;
  o1.x = -r0.w * r0.x;
  o1.y = r0.y + -r0.z;
  o1.w = 0.000000000e+000;
  return;
}