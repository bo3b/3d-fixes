
cbuffer vc0 : register(b0)
{
  float4 Detail_Normal_Map_Tiling : packoffset(c0);
  float2 Detail_Normal_Map_Amount : packoffset(c1);
  float2 High_Detail_Cutoff_Dist : packoffset(c2);
  float Normal_Map_Refl_Offset : packoffset(c3);
  float Reflection_Plane_Height : packoffset(c4);
  float Base_Reflectivity : packoffset(c5);
  float3 TOD_Light_Direction : packoffset(c6);
  float3 TOD_Light_Color : packoffset(c7);
  float Specular_Power : packoffset(c8);
  float3 Specular_Color : packoffset(c9);
  float Specular_Alpha : packoffset(c10);
  float Min_Opacity : packoffset(c11);
  float Max_Fresnel : packoffset(c12);
  float3 Crest_Color : packoffset(c13);
  float Crest_Threshold : packoffset(c14);
  float4 Blend_Map_Extents : packoffset(c15);
  float4 Diffuse_Color2 : packoffset(c16);
  float Max_Fog_Depth2 : packoffset(c17);
  float2 Max_Fog_Depth : packoffset(c18);
  float4 Diffuse_Color : packoffset(c19);
}

cbuffer vc2 : register(b2)
{
  float4x4 projTM : packoffset(c0);
  float4 eyePos : packoffset(c4);
  float4 Fog_dist : packoffset(c10);
  row_major float3x4 objTM : packoffset(c16);
  float3 Render_offset : packoffset(c19);
  float3 Position_scale : packoffset(c20);
}

Texture2D<float4> StereoParams : register(t125);

void main(
  float3 v0 : POSITION0,
  float3 v1 : NORMAL0,
  float4 v2 : TANGENT0,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1,
  out float4 o3 : TEXCOORD2,
  out float4 o4 : TEXCOORD3,
  out float3 o5 : TEXCOORD4,
  out float4 o6 : TEXCOORD5,
  out float4 o7 : TEXCOORD6,
  out float3 o8 : TEXCOORD7)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask;
  r0.xyz = v0.xyz;
  r0.w = 1.000000000e+000;
  r1.y = dot(objTM._m10_m11_m12_m13, r0.xyzw);
  r1.w = 1.000000000e+000;
  r1.x = dot(objTM._m00_m01_m02_m03, r0.xyzw);
  r1.z = dot(objTM._m20_m21_m22_m23, r0.xyzw);
  o0.x = dot(r1.xyzw, projTM._m00_m10_m20_m30);
  o0.y = dot(r1.xyzw, projTM._m01_m11_m21_m31);
  o0.z = dot(r1.xyzw, projTM._m02_m12_m22_m32);
  o0.w = dot(r1.xyzw, projTM._m03_m13_m23_m33);
  r0.xzw = r1.xzw;
  r2.xyz = Render_offset.xyz + r1.xyz;
  o5.xyz = eyePos.xyz + -r1.xyz;
  o1.xyzw = Detail_Normal_Map_Tiling.xyzw * r2.xzxz;
  o8.xyz = r2.xyz;
  r1.xyz = v1.xyz * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r2.x = dot(objTM._m00_m01_m02, r1.xyz);
  r2.y = dot(objTM._m10_m11_m12, r1.xyz);
  r2.z = dot(objTM._m20_m21_m22, r1.xyz);
  r1.x = dot(r2.xyz, r2.xyz);
  r1.x = rsqrt(r1.x);
  r1.xyz = r2.xyz * r1.xxx;
  o2.xyz = r1.xyz;
  o2.w = 0.000000000e+000;
  r2.xyz = v2.xyz * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r3.x = dot(objTM._m00_m01_m02, r2.xyz);
  r3.y = dot(objTM._m10_m11_m12, r2.xyz);
  r3.z = dot(objTM._m20_m21_m22, r2.xyz);
  r1.w = dot(r3.xyz, r3.xyz);
  r1.w = rsqrt(r1.w);
  r2.xyz = r3.xyz * r1.www;
  o3.xyz = r2.xyz;
  o3.w = v2.w * 2.000000000e+000 + -1.000000000e+000;
  r3.xyz = r2.yzx * r1.zxy;
  o4.xyz = r1.yzx * r2.zxy + -r3.xyz;
  o4.w = 0.000000000e+000;
  r0.y = -Render_offset.y + Reflection_Plane_Height;
  o6.x = dot(r0.xyzw, projTM._m00_m10_m20_m30);
  o6.y = dot(r0.xyzw, projTM._m01_m11_m21_m31);
  o6.z = dot(r0.xyzw, projTM._m02_m12_m22_m32);
  o6.w = dot(r0.xyzw, projTM._m03_m13_m23_m33);
  o7.xyzw = Fog_dist.xyzw;
  return;
}