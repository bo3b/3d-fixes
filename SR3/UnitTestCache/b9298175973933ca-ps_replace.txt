cbuffer cb4 : register(b4)
{
  float4 cb4[14];
}


cbuffer vc0 : register(b0)
{
  float Self_Illumination : packoffset(c0);
  float4 Diffuse_Color : packoffset(c1);
}

cbuffer vc1 : register(b1)
{
  float4 Time : packoffset(c0);
  float4 Dual_Paraboloid_Transform : packoffset(c3);
}

cbuffer vc4 : register(b4)
{
  float4 Tint_color : packoffset(c1);
  float4 V_ambient_render : packoffset(c2);
  float4 V_back_ambient_render : packoffset(c3);
  float4 Fog_color : packoffset(c4);
  float4 V_light_color : packoffset(c6);
  float4 lightPos : packoffset(c13);
}
SamplerState Normal_MapSampler_s : register(s0);
SamplerState Diffuse_MapSampler_s : register(s1);
Texture2D<float4> Normal_MapSampler : register(t0);
Texture2D<float4> Diffuse_MapSampler : register(t1);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : SV_Position0,
  float2 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  float3 v3 : TEXCOORD2,
  float4 v4 : TEXCOORD3,
  float4 v5 : TEXCOORD4,
  float4 v6 : TEXCOORD5,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2;
  uint4 bitmask;
  r0.x = v6.w < 0.000000000e+000;
  if (r0.x != 0) discard;
  r0.x = Time.x * 5.000000075e-002 + 2.500000000e-001;
  r0.z = Time.x * 5.000000075e-002;
  r0.xy = -r0.xz;
  r0.xy = v1.xy + r0.xy;
  r0.xyzw = Normal_MapSampler.Sample(Normal_MapSampler_s, r0.xy).xyzw;
  r1.xy = Time.xx * float2(5.000000e-002,5.000000e-002) + v1.xy;
  r1.xyzw = Normal_MapSampler.Sample(Normal_MapSampler_s, r1.xy).xyzw;
  r0.xyz = r1.xzy + r0.xzy;
  r0.xyz = r0.xyz * float3(7.500000e-002,7.500000e-002,7.500000e-002) + v5.xzy;
  r0.w = dot(v3.xzy, r0.xyz);
  r0.w = r0.w + r0.w;
  r0.xyz = r0.xyz * -r0.www + v3.xzy;
  r0.xyz = float3(1.000000e+000,1.000000e+000,-1.000000e+000) * r0.xyz;
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = rsqrt(r0.w);
  r0.z = r0.z * r0.w + 1.000000000e+000;
  r0.xy = r0.xy * r0.ww;
  r0.z = r0.z + r0.z;
  r0.xy = r0.xy / r0.zz;
  r0.xy = float2(5.000000e-001,5.000000e-001) + r0.xy;
  r0.y = 1.000000000e+000 + -r0.y;
  r0.w = Time.w >= 5.000000000e-001;
  r0.w = r0.w ? 0.500000 : 0;
  r0.z = r0.y * 5.000000000e-001 + r0.w;
  r0.xyzw = Diffuse_MapSampler.SampleLevel(Diffuse_MapSampler_s, r0.xz, 0.000000000e+000).xyzw;
  r1.xyz = Time.www * r0.xyz;
  r0.xyz = r1.xyz * float3(3.000000e+000,3.000000e+000,3.000000e+000) + r0.xyz;
  r1.xyz = Self_Illumination * r0.xyz;
  r2.xyz = -cb4[3].xyz + cb4[2].xyz;
  r0.w = dot(cb4[13].xyz, v6.xyz);
  r1.w = r0.w * 5.000000000e-001 + 5.000000000e-001;
  r0.w = saturate(r0.w);
  r2.xyz = r1.www * r2.xyz + cb4[3].xyz;
  r2.xyz = r0.www * cb4[6].xyz + r2.xyz;
  r0.xyz = r0.xyz * r2.xyz + r1.xyz;
  r0.w = 1.000000000e+000 + -v5.w;
  r0.xyz = r0.www * r0.xyz;
  r0.xyz = v5.www * cb4[4].xyz + r0.xyz;
  o0.xyz = cb4[1].xyz * r0.xyz;
  r0.x = 1.000000e+000 / v4.z;
  r0.x = saturate(r0.x);
  r0.x = -4.999999888e-003 + r0.x;
  r0.x = saturate(2.222222137e+001 * r0.x);
  r0.y = r0.x * -2.000000000e+000 + 3.000000000e+000;
  r0.x = r0.x * r0.x;
  r0.x = r0.y * r0.x;
  r0.x = min(r0.x, 1.000000000e+000);
  r0.x = cb4[1].w * r0.x;
  o0.w = 6.499999762e-001 * r0.x;
  return;
}