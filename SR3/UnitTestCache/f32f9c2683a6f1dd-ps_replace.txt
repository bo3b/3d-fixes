cbuffer cb4 : register(b4)
{
  float4 cb4[11];
}


cbuffer vc0 : register(b0)
{
  float4 IR_Light_Pos : packoffset(c0);
  float4 IR_light_back_color : packoffset(c1);
  float4 IR_Light_Color : packoffset(c2);
}

cbuffer vc4 : register(b4)
{
  float4 IR_Similarity_Data : packoffset(c10);
}

cbuffer vc8 : register(b8)
{
  bool Shadow_map_enabled : packoffset(c0);
}
SamplerState ir_shadow_mapSampler_s : register(s0);
SamplerState IR_GBuffer_LightingSampler_s : register(s12);
SamplerState IR_GBuffer_NormalsSampler_s : register(s13);
SamplerState IR_GBuffer_DepthSampler_s : register(s14);
Texture2D<float4> ir_shadow_mapSampler : register(t0);
Texture2D<float4> IR_GBuffer_LightingSampler : register(t12);
Texture2D<float4> IR_GBuffer_NormalsSampler : register(t13);
Texture2D<float4> IR_GBuffer_DepthSampler : register(t14);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : SV_Position0,
  float2 v1 : TEXCOORD0,
  float3 v2 : TEXCOORD1,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1;
  uint4 bitmask;
  r0.xyzw = IR_GBuffer_DepthSampler.Sample(IR_GBuffer_DepthSampler_s, v1.xy).xyzw;
  r0.z = cb4[10].x * r0.x + cb4[10].y;
  r0.xy = v2.xy;
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = rsqrt(r0.w);
  r0.xyz = r0.xyz * r0.www;
  r1.xyzw = IR_GBuffer_NormalsSampler.Sample(IR_GBuffer_NormalsSampler_s, v1.xy).xyzw;
  r1.xy = r1.xy * float2(2.000000e+000,2.000000e+000) + float2(-1.000000e+000,-1.000000e+000);
  r0.w = dot(r1.xy, r1.xy);
  r0.w = min(r0.w, 1.000000000e+000);
  r0.w = 1.000000000e+000 + -r0.w;
  r1.z = sqrt(r0.w);
  r0.w = r1.z + r1.z;
  r1.xyz = r0.www * r1.xyz;
  r1.w = -r1.z;
  r1.xyz = float3(0.000000e+000,0.000000e+000,1.000000e+000) + r1.xyw;
  r0.w = dot(r1.xyz, IR_Light_Pos.xyz);
  r1.w = r0.w + r0.w;
  r1.xyz = r1.www * r1.xyz + -IR_Light_Pos.xyz;
  r0.x = saturate(dot(r1.xyz, -r0.xyz));
  r0.x = log2(r0.x);
  r1.xyzw = IR_GBuffer_LightingSampler.Sample(IR_GBuffer_LightingSampler_s, v1.xy).xyzw;
  r0.y = 5.120000000e+002 * r1.x;
  r0.y = 9.999999747e-005 + abs(r0.y);
  r0.x = r0.y * r0.x;
  r0.x = exp2(r0.x);
  r0.y = dot(IR_Light_Color.xyz, float3(3.000000e-001,5.900000e-001,1.100000e-001));
  r0.x = r0.x * r0.y;
  r0.y = r1.z * 2.000000000e+000 + -1.000000000e+000;
  r0.z = r1.z + r1.z;
  r0.zw = saturate(r0.zw);
  r0.y = saturate(1.000000000e+000 + -r0.y);
  r0.y = r0.y + -r0.z;
  r0.y = r0.w * r0.y + r0.z;
  r0.x = r0.x * r0.y;
  r1.xyzw = ir_shadow_mapSampler.Sample(ir_shadow_mapSampler_s, v1.xy).xyzw;
  r0.y = Shadow_map_enabled ? r1.x : 1.000000000e+000;
  r0.z = saturate(r0.y);
  r1.xyz = IR_Light_Color.xyz * r0.yyy;
  o0.xyz = r1.xyz * r0.www;
  o0.w = r0.x * r0.z;
  return;
}