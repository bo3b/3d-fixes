cbuffer cb5 : register(b5)
{
  float4 cb5[8];
}


cbuffer vc1 : register(b1)
{
  float4 Time : packoffset(c0);
}

cbuffer vc2 : register(b2)
{
  float4x4 projTM : packoffset(c0);
  float4 eyePos : packoffset(c4);
  float4 Fog_dist : packoffset(c10);
  row_major float3x4 Eye_orient : packoffset(c11);
  row_major float3x4 objTM : packoffset(c16);
}

cbuffer vc5 : register(b5)
{
  float4 Diffuse_color : packoffset(c1);
  float3 Light_vec : packoffset(c2);
  float4 Effect_opacity : packoffset(c4);
  float4 Ambient_color : packoffset(c5);
  float Self_illum : packoffset(c6);
  float4 VFX_material_tint : packoffset(c7);
  float3x3 Color_correct_matrix : packoffset(c34);
}

Texture2D<float4> StereoParams : register(t125);

void main(
  float3 v0 : POSITION0,
  float4 v1 : COLOR0,
  float v2 : COLOR1,
  float2 v3 : TEXCOORD0,
  float v4 : TEXCOORD1,
  float v5 : TEXCOORD2,
  float v6 : TEXCOORD3,
  float v7 : COLOR2,
  float4 v8 : TEXCOORD4,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0,
  out float o2 : TEXCOORD1,
  out float4 o3 : TEXCOORD2,
  out float4 o4 : TEXCOORD3,
  out float4 o5 : TEXCOORD4)
{
  float4 r0,r1,r2,r3,r4,r5;
  uint4 bitmask;
  r0.xyz = Eye_orient._m10_m11_m12 * v6.xxx;
  r0.xyz = float3(5.000000e-001,5.000000e-001,5.000000e-001) * r0.xyz;
  r1.xyz = Eye_orient._m00_m01_m02 * v5.xxx;
  r0.xyz = r1.xyz * float3(5.000000e-001,5.000000e-001,5.000000e-001) + r0.xyz;
  r1.xyz = v0.xyz + r0.xyz;
  r0.xyz = v0.xyz + -r0.xyz;
  r1.w = 1.000000000e+000;
  r2.x = dot(objTM._m00_m01_m02_m03, r1.xyzw);
  r2.y = dot(objTM._m10_m11_m12_m13, r1.xyzw);
  r2.z = dot(objTM._m20_m21_m22_m23, r1.xyzw);
  r2.w = 1.000000000e+000;
  r1.x = dot(r2.xyzw, projTM._m00_m10_m20_m30);
  r1.y = dot(r2.xyzw, projTM._m01_m11_m21_m31);
  r1.z = dot(r2.xyzw, projTM._m03_m13_m23_m33);
  r1.xy = r1.xy / r1.zz;
  r0.w = 1.000000000e+000;
  r2.x = dot(objTM._m00_m01_m02_m03, r0.xyzw);
  r2.y = dot(objTM._m10_m11_m12_m13, r0.xyzw);
  r2.z = dot(objTM._m20_m21_m22_m23, r0.xyzw);
  r2.w = 1.000000000e+000;
  r0.x = dot(r2.xyzw, projTM._m00_m10_m20_m30);
  r0.y = dot(r2.xyzw, projTM._m01_m11_m21_m31);
  r0.z = dot(r2.xyzw, projTM._m03_m13_m23_m33);
  r0.xy = r0.xy / r0.zz;
  r0.xy = r0.xy + -r1.xy;
  r0.x = dot(r0.xy, r0.xy);
  r0.x = sqrt(r0.x);
  r0.y = cb5[4].y < r0.x;
  r0.x = cb5[4].z + -r0.x;
  r0.z = cb5[4].z + -cb5[4].y;
  r0.x = saturate(r0.x / r0.z);
  r0.z = cb5[4].x * v1.w;
  r0.x = r0.z * r0.x;
  r0.x = r0.y ? r0.x : r0.z;
  r0.y = 0 < cb5[4].z;
  r0.w = 0 < cb5[4].y;
  r0.y = (int)r0.w | (int)r0.y;
  r0.x = r0.y ? r0.x : r0.z;
  r0.y = r0.x < 9.999999747e-006;
  o1.w = r0.x;
  r0.xz = float2(-5.000000e-001,-5.000000e-001) + v3.xy;
  r0.z = v6.x * r0.z;
  r0.x = v5.x * r0.x;
  sincos(v4.x, r1.x, r2.x);
  r1.yzw = Eye_orient._m00_m01_m02 * r2.xxx;
  r1.yzw = r1.xxx * Eye_orient._m10_m11_m12 + r1.yzw;
  r1.yzw = r0.xxx * r1.yzw + v0.xyz;
  r2.yzw = Eye_orient._m00_m01_m02 * r1.xxx;
  r2.yzw = -r2.xxx * Eye_orient._m10_m11_m12 + r2.yzw;
  r1.yzw = r0.zzz * r2.yzw + r1.yzw;
  r3.x = r0.y ? -2147483648 : r1.y;
  r3.y = r0.y ? -2147483648 : r1.z;
  r3.z = r0.y ? -2147483648 : r1.w;
  r3.w = 1.000000000e+000;
  r4.x = dot(objTM._m00_m01_m02_m03, r3.xyzw);
  r4.y = dot(objTM._m10_m11_m12_m13, r3.xyzw);
  r4.z = dot(objTM._m20_m21_m22_m23, r3.xyzw);
  r1.yzw = -eyePos.xyz + r3.xyz;
  r4.w = 1.000000000e+000;
  o0.x = dot(r4.xyzw, projTM._m00_m10_m20_m30);
  o0.y = dot(r4.xyzw, projTM._m01_m11_m21_m31);
  o0.z = dot(r4.xyzw, projTM._m02_m12_m22_m32);
  o0.w = dot(r4.xyzw, projTM._m03_m13_m23_m33);
  r2.yzw = -eyePos.xyz + r4.xyz;
  r3.xyz = v1.xyz * cb5[7].xyz + -v1.xyz;
  o1.xyz = cb5[7].www * r3.xyz + v1.xyz;
  o2.x = v2.x;
  r3.xyz = cb5[5].xyz * cb5[7].xyz + -cb5[5].xyz;
  o3.xyz = cb5[7].www * r3.xyz + cb5[5].xyz;
  o3.w = v7.x;
  r0.y = dot(r1.yzw, r1.yzw);
  r0.y = rsqrt(r0.y);
  r3.xyz = r1.yzw * r0.yyy;
  r4.xyz = Eye_orient._m12_m10_m11 * r3.yzx;
  r4.xyz = Eye_orient._m11_m12_m10 * r3.zxy + -r4.xyz;
  r5.xyz = r4.yzx * r3.zxy;
  r3.xyz = r3.yzx * r4.zxy + -r5.xyz;
  r5.xyz = r4.xyz * r1.xxx;
  r4.xyz = r4.xyz * r2.xxx;
  r4.xyz = r1.xxx * r3.xyz + r4.xyz;
  r3.xyz = -r2.xxx * r3.xyz + r5.xyz;
  r0.w = dot(r3.xyz, r3.xyz);
  r0.w = rsqrt(r0.w);
  r3.xyz = r3.xyz * r0.www;
  r3.xyz = r3.xyz * r0.zzz;
  r0.z = dot(r4.xyz, r4.xyz);
  r0.z = rsqrt(r0.z);
  r4.xyz = r4.xyz * r0.zzz;
  r0.xzw = r0.xxx * r4.xyz + r3.xyz;
  r1.x = dot(r0.xzw, r0.xzw);
  r1.x = rsqrt(r1.x);
  r0.xzw = r1.xxx * r0.xzw;
  r1.xyz = -r1.yzw * r0.yyy + -r0.xzw;
  r0.xyz = r1.xyz * float3(2.500000e-001,2.500000e-001,2.500000e-001) + r0.xzw;
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = rsqrt(r0.w);
  r0.xyz = r0.xyz * r0.www;
  r0.xyz = float3(3.000000e-001,3.000000e-001,3.000000e-001) * r0.xyz;
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = rsqrt(r0.w);
  o4.xyz = r0.xyz * r0.www;
  r0.x = Fog_dist.x * r2.z;
  r0.y = -1.442695022e+000 * r0.x;
  r0.y = exp2(r0.y);
  r0.y = 1.000000000e+000 + -r0.y;
  r0.x = r0.y / r0.x;
  r0.y = 9.999999776e-003 < abs(r2.z);
  r0.z = dot(r2.yzw, r2.yzw);
  r0.z = sqrt(r0.z);
  r0.z = Fog_dist.y * r0.z;
  r0.x = r0.y ? r0.x : 1.000000000e+000;
  r0.x = r0.x * r0.z + -Fog_dist.w;
  r0.x = exp2(-r0.x);
  r0.x = min(r0.x, 1.000000000e+000);
  o4.w = 1.000000000e+000 + -r0.x;
  r0.x = Time.x * 1.000000047e-003;
  r0.x = frac(r0.x);
  o5.zw = r0.xx * v8.xy + v3.xy;
  o5.xy = v3.xy;
  return;
}