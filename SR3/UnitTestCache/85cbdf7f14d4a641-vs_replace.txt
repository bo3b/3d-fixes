
cbuffer vc0 : register(b0)
{
  float4 Hemisphere_colors[10] : packoffset(c0);
  float4 Scale : packoffset(c10);
  float Offset : packoffset(c11);
}

cbuffer vc2 : register(b2)
{
  float4x4 projTM : packoffset(c0);
  float4 eyePos : packoffset(c4);
  float4 Fog_dist : packoffset(c10);
  row_major float3x4 objTM : packoffset(c16);
  float3 Position_scale : packoffset(c20);
}

Texture2D<float4> StereoParams : register(t125);

void main(
  float3 v0 : POSITION0,
  out float4 o0 : SV_Position0,
  out float3 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1)
{
  float4 r0,r1,r2;
  uint4 bitmask;
  r0.w = 0.000000000e+000;
  r1.xyz = v0.xyz;
  r1.w = 0.000000000e+000;
  r0.z = dot(objTM._m20_m21_m22_m23, r1.xyzw);
  r0.x = dot(objTM._m00_m01_m02_m03, r1.xyzw);
  r0.y = dot(objTM._m10_m11_m12_m13, r1.xyzw);
  r1.x = dot(r0.xyzw, projTM._m00_m10_m20_m30);
  r1.y = dot(r0.xyzw, projTM._m01_m11_m21_m31);
  r1.z = dot(r0.xyzw, projTM._m03_m13_m23_m33);
  r0.x = r0.x / -1.000000000e+001;
  r0.x = max(r0.x, -1.000000000e+000);
  r0.x = min(r0.x, 1.000000000e+000);
  r0.y = max(abs(r0.y), 0.000000000e+000);
  r0.y = min(r0.y, 1.000000000e+001);
  r0.y = r0.y / 1.000000000e+001;
  o0.xyzw = r1.xyzz;
  o1.xyz = v0.xyz;
  r0.z = -1.872929931e-002 * abs(r0.x);
  r0.z = 7.426100224e-002 + r0.z;
  r0.z = r0.z * abs(r0.x);
  r0.z = -2.121143937e-001 + r0.z;
  r0.z = r0.z * abs(r0.x);
  r0.z = 1.570728779e+000 + r0.z;
  r0.w = 1.000000000e+000 + -abs(-r0.x);
  r0.x = r0.x < -r0.x;
  r0.w = sqrt(r0.w);
  r0.z = r0.z * r0.w;
  r0.w = -2.000000000e+000 * r0.z;
  r0.w = 3.141592741e+000 + r0.w;
  r0.x = (int)r0.x & (int)r0.w;
  r0.x = r0.z + r0.x;
  r0.zw = float2(4.000000e+000,-1.872930e-002) * r0.yy;
  r0.w = 7.426100224e-002 + r0.w;
  r0.w = r0.w * r0.y;
  r0.w = -2.121143937e-001 + r0.w;
  r0.w = r0.w * r0.y;
  r0.y = 1.000000000e+000 + -r0.y;
  r0.y = sqrt(r0.y);
  r0.w = 1.570728779e+000 + r0.w;
  r0.y = r0.w * r0.y;
  r0.y = 1.570796371e+000 + -r0.y;
  r0.xy = r0.xy / float2(3.141593e+000,3.141593e+000);
  r0.y = 2.000000000e+000 * r0.y;
  r0.y = 4.000000000e+000 * r0.y;
  r0.y = r0.z + r0.y;
  r0.y = r0.y / 2.000000000e+000;
  r0.z = round(r0.y);
  r0.z = r0.y + -r0.z;
  r0.y = floor(r0.y);
  r0.y = (int)r0.y;
  r1.xyz = Hemisphere_colors[r0.y].xyz + Hemisphere_colors[r0.y].xyz;
  r1.xyz = r1.xyz * r0.zzz;
  r1.xyz = Hemisphere_colors[r0.y].xyz + r1.xyz;
  r2.xyz = Hemisphere_colors[r0.y].xyz + Hemisphere_colors[r0.y].xyz;
  r2.xyz = r2.xyz * r0.zzz;
  r0.yzw = Hemisphere_colors[r0.y].xyz + r2.xyz;
  r1.xyz = r1.xyz + -r0.yzw;
  r1.xyz = r1.xyz * r0.xxx;
  o2.xyz = r1.xyz + r0.yzw;
  r0.y = Scale.w + v0.y;
  r0.xz = v0.xz;
  r0.xyz = Scale.xyz * r0.xyz;
  r0.y = -Scale.w + r0.y;
  r0.w = 1.000000000e+000;
  r1.x = dot(objTM._m10_m11_m12_m13, r0.xyzw);
  r1.x = -eyePos.y + r1.x;
  r1.y = Offset + r1.x;
  r1.x = dot(objTM._m00_m01_m02_m03, r0.xyzw);
  r1.z = dot(objTM._m20_m21_m22_m23, r0.xyzw);
  r0.xyz = -eyePos.xyz + r1.xyz;
  r0.w = Fog_dist.x * r0.y;
  r1.x = 1.442695022e+000 * -r0.w;
  r1.x = exp2(r1.x);
  r1.x = 1.000000000e+000 + -r1.x;
  r0.w = r1.x / r0.w;
  r1.x = 9.999999776e-003 < abs(r0.y);
  r0.x = dot(r0.xyz, r0.xyz);
  r0.x = sqrt(r0.x);
  r0.x = Fog_dist.y * r0.x;
  r0.y = r1.x ? r0.w : 1.000000000e+000;
  r0.x = r0.y * r0.x;
  r0.x = -Fog_dist.w + r0.x;
  r0.x = saturate(exp2(-r0.x));
  o2.w = 1.000000000e+000 + -r0.x;
  return;
}