cbuffer cb4 : register(b4)
{
  float4 cb4[19];
}


cbuffer vc0 : register(b0)
{
  float4 Diffuse_Color : packoffset(c0);
  float Glass_Opacity : packoffset(c1);
  float Spec_Reflect : packoffset(c2);
  float3 Glass_Color : packoffset(c3);
  float Self_Illumination : packoffset(c4);
}

cbuffer vc4 : register(b4)
{
  float4 Tint_color : packoffset(c1);
  float4 V_ambient_render : packoffset(c2);
  float4 V_back_ambient_render : packoffset(c3);
  float4 Fog_color : packoffset(c4);
  float4 V_light_color : packoffset(c6);
  float4 lightPos : packoffset(c13);
  float Opacity_fade : packoffset(c18);
}
SamplerState Reflection_MapSampler_s : register(s0);
SamplerState Diffuse_MapSampler_s : register(s1);
TextureCube<float4> Reflection_MapSampler : register(t0);
Texture2D<float4> Diffuse_MapSampler : register(t1);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : SV_Position0,
  float3 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  float4 v3 : TEXCOORD2,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4;
  uint4 bitmask;
  r0.x = dot(v1.xyz, v1.xyz);
  r0.x = rsqrt(r0.x);
  r0.xyz = v1.xyz * r0.xxx;
  r0.w = dot(v3.xyz, v3.xyz);
  r0.w = rsqrt(r0.w);
  r1.xyz = v3.xyz * r0.www;
  r0.w = dot(-r0.xyz, r1.xyz);
  r0.w = r0.w + r0.w;
  r0.xyz = r1.xyz * -r0.www + -r0.xyz;
  r0.xyzw = Reflection_MapSampler.Sample(Reflection_MapSampler_s, r0.xyz).xyzw;
  r0.xyz = Spec_Reflect * r0.xyz;
  r1.xyz = -cb4[3].xyz + cb4[2].xyz;
  r0.w = dot(cb4[13].xyz, v3.xyz);
  r1.w = r0.w * 5.000000000e-001 + 5.000000000e-001;
  r0.w = saturate(r0.w);
  r1.xyz = r1.www * r1.xyz + cb4[3].xyz;
  r1.xyz = r0.www * cb4[6].xyz + r1.xyz;
  r0.w = dot(r1.xyz, r1.xyz);
  r0.w = sqrt(r0.w);
  r0.xyz = r0.xyz * r0.www;
  r2.xyzw = Diffuse_MapSampler.Sample(Diffuse_MapSampler_s, v2.xy).xyzw;
  r3.xyz = Diffuse_Color.xyz * r2.xyz;
  r2.xyz = -r2.xyz * Diffuse_Color.xyz + Glass_Color.xyz;
  r0.w = r2.w * Diffuse_Color.w + Glass_Opacity;
  r4.w = min(r0.w, 1.000000000e+000);
  r2.xyz = Glass_Opacity * r2.xyz + r3.xyz;
  r0.xyz = r2.xyz * Self_Illumination + r0.xyz;
  r0.xyz = r2.xyz * r1.xyz + r0.xyz;
  r0.w = 1.000000000e+000 + -v3.w;
  r0.xyz = r0.www * r0.xyz;
  r4.xyz = v3.www * cb4[4].xyz + r0.xyz;
  r0.xyzw = cb4[1].xyzw * r4.xyzw;
  r1.x = -r4.w * cb4[1].w + 1.000000000e+000;
  o0.w = cb4[18].x * r1.x + r0.w;
  o0.xyz = r0.xyz;
  return;
}