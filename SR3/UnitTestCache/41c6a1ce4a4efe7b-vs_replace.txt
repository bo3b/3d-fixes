cbuffer cb0 : register(b0)
{
  float4 cb0[4];
}


cbuffer vc0 : register(b0)
{
  float Specular_Map_Amount : packoffset(c1);
  float4 Specular_Color : packoffset(c2);
  float4 Diffuse_Color : packoffset(c3);
  float Reflection_Amount : packoffset(c4) = float(1.000000e+000);
  float Normal_Map_TilingU : packoffset(c5);
  float Normal_Map_TilingV : packoffset(c6);
}

cbuffer vc2 : register(b2)
{
  float4x4 projTM : packoffset(c0);
  float4 eyePos : packoffset(c4);
  float4 Object_instance_params_2 : packoffset(c5);
  float4 Fog_dist : packoffset(c10);
  float4 Object_instance_params : packoffset(c15);
  row_major float3x4 objTM : packoffset(c16);
  float3 Position_scale : packoffset(c20);
  float Reflection_Plane_Height : packoffset(c30);
}

Texture2D<float4> StereoParams : register(t125);

void main(
  float3 v0 : POSITION0,
  int2 v1 : TEXCOORD0,
  float4 v2 : NORMAL0,
  float4 v3 : TANGENT0,
  out float4 o0 : SV_Position0,
  out float2 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1,
  out float4 o3 : TEXCOORD2,
  out float4 o4 : TEXCOORD3,
  out float4 o5 : TEXCOORD4)
{
  float4 r0,r1,r2;
  uint4 bitmask;
  r0.xyz = v0.xyz;
  r0.w = 1.000000000e+000;
  r1.y = dot(objTM._m10_m11_m12_m13, r0.xyzw);
  r1.w = 1.000000000e+000;
  r1.x = dot(objTM._m00_m01_m02_m03, r0.xyzw);
  r1.z = dot(objTM._m20_m21_m22_m23, r0.xyzw);
  r0.x = dot(r1.xyzw, projTM._m00_m10_m20_m30);
  r0.y = dot(r1.xyzw, projTM._m01_m11_m21_m31);
  r0.z = dot(r1.xyzw, projTM._m02_m12_m22_m32);
  r0.w = dot(r1.xyzw, projTM._m03_m13_m23_m33);
  r2.xzw = r1.xzw;
  o0.xyzw = r0.xyzw;
  o3.xyzw = r0.xyzw;
  r0.xy = v1.xy;
  o1.xy = float2(9.765625e-004,9.765625e-004) * r0.xy;
  r2.y = Reflection_Plane_Height;
  o2.x = dot(r2.xyzw, projTM._m00_m10_m20_m30);
  o2.y = dot(r2.xyzw, projTM._m01_m11_m21_m31);
  o2.z = dot(r2.xyzw, projTM._m02_m12_m22_m32);
  o2.w = dot(r2.xyzw, projTM._m03_m13_m23_m33);
  o4.xyz = eyePos.xyz + -r1.xyz;
  r0.xyz = -eyePos.xyz + r1.xyz;
  r0.w = v2.w * 2.000000000e+000 + -1.000000000e+000;
  r0.w = r0.w * 5.000000000e-001 + 5.000000000e-001;
  r1.x = Object_instance_params_2.x * 3.264000000e+004;
  r0.w = r0.w * 2.550000000e+002 + r1.x;
  r0.w = 3.276800000e+004 + r0.w;
  o4.w = 1.525902189e-005 * r0.w;
  r0.w = Fog_dist.x * r0.y;
  r1.x = -1.442695022e+000 * r0.w;
  r1.x = exp2(r1.x);
  r1.x = 1.000000000e+000 + -r1.x;
  r0.w = r1.x / r0.w;
  r1.x = 9.999999776e-003 < abs(r0.y);
  r0.x = dot(r0.xyz, r0.xyz);
  r0.x = sqrt(r0.x);
  r0.x = Fog_dist.y * r0.x;
  r0.y = r1.x ? r0.w : 1.000000000e+000;
  r0.x = r0.y * r0.x + -Fog_dist.w;
  r0.x = exp2(-r0.x);
  r0.x = min(r0.x, 1.000000000e+000);
  o5.w = 1.000000000e+000 + -r0.x;
  o5.xyz = Object_instance_params.xyz * cb0[3].xyz;

// Auto-fixed shader
float4 stereo = StereoParams.Load(0);
o3.x += stereo.x * (o3.w - stereo.y);
  return;
}