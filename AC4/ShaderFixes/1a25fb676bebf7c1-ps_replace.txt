//raindrops
cbuffer RainDropSystemConstantscb : register(b2)
{

  struct
  {
    float4x4 m_View;
    float4x4 m_InvView;
    float4x4 m_ViewProjection;
    float4x4 m_InvViewProjection;
    float4x4 m_InvProjection;
    float4 m_ZConstants;
    float4 m_CameraPosition;
    float4 m_CameraDirection;
    float4 m_FocusDistances;
    float4 m_RainDropParams;
    float4 m_ShapeParams_And_DOF_InterpolationDistanceRatio;
    uint4 m_ClusterIndex;
    uint4 m_RainDropCountInCluster;
    float4 m_DeltaTime;
    uint4 m_ActiveClustersFlag;
    float4 m_ScreenSize;
    float4 m_UseExtraLights;
    float4 m_OmniLight0_PositionFar;
    float4 m_OmniLight0_ColorFade;
    float4 m_OmniLight1_PositionFar;
    float4 m_OmniLight1_ColorFade;
    float4 m_OmniLight2_PositionFar;
    float4 m_OmniLight2_ColorFade;
    float4 m_OmniLight3_PositionFar;
    float4 m_OmniLight3_ColorFade;
    float4 m_OmniLight4_PositionFar;
    float4 m_OmniLight4_ColorFade;
    float4 m_OmniLight5_PositionFar;
    float4 m_OmniLight5_ColorFade;
    float4 m_OmniLight6_PositionFar;
    float4 m_OmniLight6_ColorFade;
    float4 m_OmniLight7_PositionFar;
    float4 m_OmniLight7_ColorFade;
    float4 m_DirectionLight0_Direction;
    float4 m_DirectionLight0_Color;
    float4 m_SpotLight0_PositionFar;
    float4 m_SpotLight0_ColorFade;
    float4 m_SpotLight0_Direction;
    float4 m_SpotLight0_ConeAngles;
    float4 m_XYExtents;
    float4 m_ZExtents;
    float4 m_StartVelocity;
    float4 m_StartVelocityVariance;
    float4 m_StartDirection;
    float4 m_StartDirectionVariance;
    float4 m_RainDropRippleLife;
    float4 m_RainDropRippleLifeVariance;
    float4 m_RandomSeed;
    uint4 m_InitialRandomIndexAndMax;
    float4 m_BounceParams;
    float4 m_GlobalWind;
    float4 m_GlobalWindPrecomputed;
    float4 m_GlobalWindPrecomputed2;
    float4 m_RippleParamsSet1;
    float4 m_RippleParamsSet2;
    float4 m_RippleParamsSet3;
    float4 m_DropletParamsSet1;
    float4 m_DropletParamsSet2;
    float4 m_RippleImpactSurfaceSizeAndInvSize;
    float4 m_DropletSurfaceSizeAndInvSize;
    float4x4 m_RainMatrix;
    float4 m_RainScale;
    float4 m_RainOffset;
    float4 m_WorldAOParameters;
    float4 m_WorldAORangeParameters;
    float4 m_WorldLightmapUVParameters;
  } g_RainDropSystemConstants : packoffset(c0);

}

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 injectedScreenPos : SV_Position,
  float4 v0 : SV_Position0,
  float3 v1 : RIPPLE_IMPACT_POSITION0,
  float w1 : RIPPLE_IMPACT_RIPPLE_RELATIVE_LIFE0,
  float v2 : RIPPLE_IMPACT_RIPPLE_STRENGTH0,
  out float4 o0 : SV_Target0)
{
  float4 r0;
  uint4 bitmask;
  r0.xy = v1.xy / v1.zz;
  
// float4 stereoParams = StereoParams.Load(0);
// r0.x -=  stereoParams.x * (-v1.z - stereoParams.y ); 
  
  r0.x = dot(r0.xy, r0.xy);
  r0.x = sqrt(r0.x);
  r0.y = 6.283180237e+000 * r0.x;
  r0.x = 1.000000000e+000 + -r0.x;
  r0.z = 1.000000000e+000 + -w1.x;
  r0.w = g_RainDropSystemConstants.m_RippleParamsSet3.y * r0.z + g_RainDropSystemConstants.m_RippleParamsSet2.x;
  r0.y = r0.y / r0.w;
  r0.y = r0.z * 1.570795059e+000 + r0.y;
  r0.y = cos(r0.y);
  r0.x = r0.y * r0.x;
  r0.x = w1.x * r0.x;
  o0.xyzw = v2.xxxx * r0.xxxx;
  return;
}