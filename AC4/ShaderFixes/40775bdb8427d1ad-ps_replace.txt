// Manually fixed shader.
//  As near as I can tell, this should be using the 0th element of that array.
// 	Using the 0 element gives me the same ASM.
//	Two elements using row_major with same problem.

cbuffer Global_Constants : register(b0)
{
  float4 g_Global_DepthRes : packoffset(c0);
  float4 g_Global_DepthChannel : packoffset(c1);
  float4 g_Global_ScreenRes : packoffset(c2);
  float4 g_Global_ShadowMapRes : packoffset(c3);
  float4 g_Global_LightPositionAndRadius : packoffset(c4);
  float4 g_Global_FalloffParams : packoffset(c5);
  row_major float4x4 g_Global_InvLightProj[6] : packoffset(c6);
  row_major float4x4 g_Global_InvProjection : packoffset(c30);
  row_major float4x4 g_Global_InvView : packoffset(c34);
  row_major float4x4 g_Global_EyeViewToLightView : packoffset(c38);
  float4 g_Global_NumCascades : packoffset(c42);
  row_major float4x4 g_Global_EyeViewToLightTex[6] : packoffset(c43);
  float4 g_Global_LightData[6] : packoffset(c67);
  float4 g_Global_LightRadiusUVScale[6] : packoffset(c73);
  float4 g_Global_ViewLocation[6] : packoffset(c79);
  float4 g_Global_MapID[6] : packoffset(c85);
  float4 g_Global_ZBias[6] : packoffset(c91);
  float4 g_Global_TransformToLHS[6] : packoffset(c97);
  float g_Global_LightSize : packoffset(c103);
  float g_Global_CascadeIndex : packoffset(c103.y);
  float g_Global_EyeZFar : packoffset(c103.z);
  float g_Global_EyeZNear : packoffset(c103.w);
  float g_Global_TransitionScaleZ : packoffset(c104);
  float g_Global_InvertEyeDepth : packoffset(c104.y);
  float g_Global_SpotLight : packoffset(c104.z);
  float g_Global_LightSizeMinPercent : packoffset(c104.w);
  float g_Global_ShadowIntensity : packoffset(c105);
  float g_Global_MinWeightExponent : packoffset(c105.y);
  float g_Global_MaxWeight : packoffset(c105.z);
  float Pad : packoffset(c105.w);
}
SamplerState PointSampler_s : register(s0);
Texture2D<float> tShadowMap : register(t0);
Texture2D<float4> tDepthBuffer : register(t6);
Texture2D<float4> tStereoFixUp : register(t10);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  float2 v2 : TEXCOORD1,
  out float o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6;
  uint4 bitmask;
  float4 x0[4];
  float4 x1[4];
  r0.xy = g_Global_ScreenRes.zw * v0.xy;
  r0.zw = tStereoFixUp.Sample(PointSampler_s, float2(6.250000e-002,5.000000e-001)).xy;
  r1.x = v1.w != 1.000000;
  r1.y = v1.w + -r0.w;
  r1.y = r0.z * r1.y + v1.x;
  r1.x = r1.x ? r1.y : v1.x;
  r1.y = v1.y;
  r1.xy = r1.xy / v1.ww;
  r1.zw = r1.xy * float2(5.000000e-001,-5.000000e-001) + float2(5.000000e-001,5.000000e-001);
  r2.x = g_Global_NumCascades.x == 1.000000;
  r0.x = r2.x ? r1.z : r0.x;
  r0.y = r2.x ? r1.w : r0.y;
  r1.zw = g_Global_ScreenRes.xy * g_Global_DepthRes.zw;
  r0.xy = r1.zw * r0.xy;
  r1.z = g_Global_DepthChannel.x == 1.000000;
  if (r1.z != 0) {
  r1.z = tDepthBuffer.SampleLevel(PointSampler_s, r0.xy, 0.000000000e+000).x;
  } else {
  r1.w = g_Global_DepthChannel.y == 1.000000;
  if (r1.w != 0) {
  r1.z = tDepthBuffer.SampleLevel(PointSampler_s, r0.xy, 0.000000000e+000).y;
  } else {
  r1.w = g_Global_DepthChannel.z == 1.000000;
  if (r1.w != 0) {
  r1.z = tDepthBuffer.SampleLevel(PointSampler_s, r0.xy, 0.000000000e+000).z;
  } else {
  r1.z = tDepthBuffer.SampleLevel(PointSampler_s, r0.xy, 0.000000000e+000).w;
  }
  }
  }
  r0.x = 0.000000e+000 != g_Global_InvertEyeDepth;
  r0.y = 1.000000000e+000 + -r1.z;
  r0.x = r0.x ? r0.y : r1.z;
  r0.xy = r0.xx * g_Global_InvProjection._m22_m23 + g_Global_InvProjection._m32_m33;
  r0.x = r0.x / r0.y;
  r1.xy = r1.xy * abs(r0.xx);
  r0.y = abs(r0.x) != 1.000000;
  r0.w = abs(r0.x) + -r0.w;
  r0.z = -r0.z * r0.w + r1.x;
  r0.y = r0.y ? r0.z : r1.x;
  r0.zw = g_Global_InvProjection._m10_m11 * r1.yy;
  r0.yz = r0.yy * g_Global_InvProjection._m00_m01 + r0.zw;
  r0.yz = g_Global_InvProjection._m30_m31 + r0.yz;
  r0.w = g_Global_EyeViewToLightView._m12 * r0.z;
  r0.w = r0.y * g_Global_EyeViewToLightView._m02 + r0.w;
  r0.w = r0.x * g_Global_EyeViewToLightView._m22 + r0.w;
  r0.w = g_Global_EyeViewToLightView._m32 + r0.w;
  r1.xyzw = g_Global_EyeViewToLightTex[0]._m10_m11_m12_m13 * r0.zzzz;
  r1.xyzw = r0.yyyy * g_Global_EyeViewToLightTex[0]._m00_m01_m02_m03 + r1.xyzw;
  r1.xyzw = r0.xxxx * g_Global_EyeViewToLightTex[0]._m20_m21_m22_m23 + r1.xyzw;
  r1.xyzw = g_Global_EyeViewToLightTex[0]._m30_m31_m33_m32 + r1.xywz;
  r2.x = g_Global_SpotLight == 1.000000;
  r1.xyz = r1.xyw / r1.zzz;
  r1.x = r2.x ? r1.x : r1.x;
  r1.y = r2.x ? r1.y : r1.y;
  r1.z = r2.x ? r1.z : r1.w;
  r1.z = g_Global_ZBias[0].x + r1.z;
  r1.z = min(r1.z, 1.000000000e+000);
  r0.w = g_Global_TransformToLHS[0].x + r0.w;
  r1.w = g_Global_TransformToLHS[0].y * r0.w;
  r2.x = r0.w * g_Global_TransformToLHS[0].y + -g_Global_LightData[0].x;
  r2.x = r2.x / r1.w;
  r2.xyzw = g_Global_LightData[0].zwzw * r2.xxxx;
  r3.xy = -g_Global_ShadowMapRes.zw + r1.xy;
  r3.y = tShadowMap.SampleLevel(PointSampler_s, r3.xy, 0.000000000e+000).x;
  r3.z = r3.y < r1.z;
  r3.x = 1.000000000e+000;
  r3.xy = (int2)r3.xy & (int2)r3.zz;
  r4.xyzw = g_Global_ShadowMapRes.zwzw * float4(-1.000000e+000,0.000000e+000,-1.000000e+000,1.000000e+000) + r1.xyxy;
  r3.w = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r4.x = r3.w < r1.z;
  r5.y = r3.y + r3.w;
  r5.x = r3.z ? 2.000000000e+000 : 1.000000000e+000;
  r3.x = r4.x ? r5.x : r3.x;
  r3.y = r4.x ? r5.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r4.xyzw = g_Global_ShadowMapRes.zwzw * float4(0.000000e+000,-1.000000e+000,0.000000e+000,1.000000e+000) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r1.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r4.xyzw = g_Global_ShadowMapRes.zwzw * float4(1.000000e+000,-1.000000e+000,1.000000e+000,0.000000e+000) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.zw = g_Global_ShadowMapRes.zw + r1.xy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r3.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r2.xyzw = g_Global_LightRadiusUVScale[0].xyxy * r2.xyzw;
  r4.xyzw = r2.zwzw * float4(-7.924740e-001,-7.799620e-001,-5.808590e-001,-2.087770e-001) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r4.xyzw = r2.zwzw * float4(-9.203470e-001,-4.114200e-001,-5.154270e-001,8.999900e-002) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r4.xyzw = r2.zwzw * float4(-6.148560e-001,3.865780e-001,-5.379500e-001,7.166660e-001) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r4.xyzw = r2.zwzw * float4(-8.119450e-001,9.052100e-001,-1.394390e-001,-8.886680e-001) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r4.xyzw = r2.zwzw * float4(-4.546340e-001,-7.079380e-001,-1.463360e-001,-2.591940e-001) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r4.xyzw = r2.zwzw * float4(-2.112190e-001,1.148410e-001,-2.611470e-001,5.884880e-001) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r4.xyzw = r2.zwzw * float4(-4.209420e-001,9.912720e-001,3.591720e-001,-6.337170e-001) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r4.xyzw = r2.zwzw * float4(1.694690e-001,-9.972530e-001,4.357130e-001,-2.508320e-001) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r4.xyzw = r2.zwzw * float4(3.205970e-001,2.910550e-001,1.255840e-001,4.690700e-002) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r4.xyzw = r2.zwzw * float4(3.805700e-002,6.254770e-001,8.720050e-001,-9.270000e-001) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r4.xyzw = r2.zwzw * float4(7.431560e-001,-5.051730e-001,7.364420e-001,-1.897340e-001) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r4.xyzw = r2.zwzw * float4(8.435620e-001,3.570360e-001,5.685900e-001,1.165500e-001) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r4.xyzw = r2.zwzw * float4(8.654130e-001,7.637260e-001,5.457630e-001,7.302160e-001) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r4.xyzw = r2.zwzw * float4(-9.754020e-001,-7.113900e-002,-8.839080e-001,2.178720e-001) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r4.xyzw = r2.zwzw * float4(-8.845180e-001,5.680410e-001,6.259300e-002,-5.085300e-001) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r2.xyzw = r2.xyzw * float4(1.168900e-002,3.263950e-001,5.077970e-001,-9.165620e-001) + r1.xyxy;
  r2.x = tShadowMap.SampleLevel(PointSampler_s, r2.xy, 0.000000000e+000).x;
  r2.y = r2.x < r1.z;
  r4.y = r3.y + r2.x;
  r4.x = 1.000000000e+000 + r3.x;
  r2.x = r2.y ? r4.x : r3.x;
  r2.y = r2.y ? r4.y : r3.y;
  r2.z = tShadowMap.SampleLevel(PointSampler_s, r2.zw, 0.000000000e+000).x;
  r2.w = r2.z < r1.z;
  r3.y = r2.y + r2.z;
  r3.x = 1.000000000e+000 + r2.x;
  r2.x = r2.w ? r3.x : r2.x;
  r2.y = r2.w ? r3.y : r2.y;
  r2.z = r2.x == 0.000000;
  if (r2.z != 0) {
  r2.w = 1.000000000e+000;
  }
  if (r2.z == 0) {
  r2.x = r2.y / r2.x;
  r2.y = r1.x * 2.000000000e+000 + -1.000000000e+000;
  r2.z = 1.000000000e+000 + -r1.y;
  r2.z = r2.z * 2.000000000e+000 + -1.000000000e+000;
  r3.xy = g_Global_InvLightProj[0]._m12_m13 * r2.zz;
  r2.yz = r2.yy * g_Global_InvLightProj[0]._m02_m03 + r3.xy;
  r2.xy = r2.xx * g_Global_InvLightProj[0]._m22_m23 + r2.yz;
  r2.xy = g_Global_InvLightProj[0]._m32_m33 + r2.xy;
  r2.x = r2.x / r2.y;
  r2.x = g_Global_TransformToLHS[0].x + r2.x;
  r2.x = g_Global_TransformToLHS[0].y * r2.x;
  r3.xyzw = g_Global_LightSizeMinPercent * g_Global_LightData[0].zwzw;
  r0.w = r0.w * g_Global_TransformToLHS[0].y + -r2.x;
  r0.w = r0.w / r2.x;
  r2.x = g_Global_MaxWeight * r0.w;
  r4.xyzw = -g_Global_LightData[0].zwzw * g_Global_LightSizeMinPercent + g_Global_LightData[0].zwzw;
  r3.xyzw = r2.xxxx * r4.xyzw + r3.xyzw;
  r3.xyzw = g_Global_LightData[0].xxxx * r3.xyzw;
  r3.xyzw = r3.xyzw / r1.wwww;
  r3.xyzw = g_Global_LightRadiusUVScale[0].xyxy * r3.xyzw;
  r4.xyzw = float4(-7.199902e+000,-9.846215e-003,-8.579733e+000,-3.775599e-003) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r2.xy = r4.yw + -r4.xz;
  r4.xy = r0.ww * g_Global_MaxWeight + -r4.xz;
  r2.xy = float2(1.000000e+000,1.000000e+000) / r2.xy;
  r2.xy = saturate(r4.xy * r2.xy);
  r4.xy = r2.xy * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r2.xy = r2.xy * r2.xy;
  r4.zw = r4.xy * r2.xy;
  r5.xyzw = r3.zwzw * float4(-5.205500e-001,-8.458550e-001,-7.517710e-001,-6.554540e-001) + r1.xyxy;
  r1.w = tShadowMap.SampleLevel(PointSampler_s, r5.xy, 0.000000000e+000).x;
  r1.w = r1.w + -r1.z;
  r1.w = saturate(r1.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = tShadowMap.SampleLevel(PointSampler_s, r5.zw, 0.000000000e+000).x;
  r2.z = r2.z + -r1.z;
  r2.z = saturate(r2.z * g_Global_TransitionScaleZ + 1.000000000e+000);
  r5.xyzw = float4(-2.582341e+000,-2.635592e-001,-6.140668e+000,-2.059422e-002) * g_Global_MinWeightExponent;
  r5.xyzw = exp2(r5.xyzw);
  r5.yw = r5.yw + -r5.xz;
  r5.xz = r0.ww * g_Global_MaxWeight + -r5.xz;
  r5.yw = float2(1.000000e+000,1.000000e+000) / r5.yw;
  r5.xy = saturate(r5.xz * r5.yw);
  r5.zw = r5.xy * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r5.xy = r5.xy * r5.xy;
  r5.xy = r5.zw * r5.xy;
  r6.xyzw = r3.zwzw * float4(-6.780210e-001,-4.839700e-001,-8.549250e-001,-4.908740e-001) + r1.xyxy;
  r5.z = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r5.z = r5.z + -r1.z;
  r5.z = saturate(r5.z * g_Global_TransitionScaleZ + 1.000000000e+000);
  r5.z = r5.z * r5.x;
  r1.w = r1.w * r4.z + r5.z;
  r4.z = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r4.z = r4.z + -r1.z;
  r4.z = saturate(r4.z * g_Global_TransitionScaleZ + 1.000000000e+000);
  r4.z = r4.z * r5.y;
  r2.z = r2.z * r4.w + r4.z;
  r2.xy = r4.xy * r2.xy + r5.xy;
  r4.xyzw = float4(-2.314786e+000,-3.237190e-001,-2.895267e+000,-2.082474e-001) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r4.yw = r4.yw + -r4.xz;
  r4.xz = r0.ww * g_Global_MaxWeight + -r4.xz;
  r4.yw = float2(1.000000e+000,1.000000e+000) / r4.yw;
  r4.xy = saturate(r4.xz * r4.yw);
  r4.zw = r4.xy * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.xy = r4.xy * r4.xy;
  r5.xy = r4.zw * r4.xy;
  r6.xyzw = r3.zwzw * float4(-7.924310e-001,1.023040e-001,-7.610830e-001,4.123050e-001) + r1.xyxy;
  r5.z = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r5.z = r5.z + -r1.z;
  r5.z = saturate(r5.z * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.z * r5.x + r1.w;
  r5.x = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r5.x = r5.x + -r1.z;
  r5.x = saturate(r5.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r5.x * r5.y + r2.z;
  r2.xy = r4.zw * r4.xy + r2.xy;
  r4.xyzw = float4(-3.050395e+000,-1.855873e-001,-3.991754e+000,-9.366082e-002) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r4.yw = r4.yw + -r4.xz;
  r4.xz = r0.ww * g_Global_MaxWeight + -r4.xz;
  r4.yw = float2(1.000000e+000,1.000000e+000) / r4.yw;
  r4.xy = saturate(r4.xz * r4.yw);
  r4.zw = r4.xy * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.xy = r4.xy * r4.xy;
  r5.xy = r4.zw * r4.xy;
  r6.xyzw = r3.zwzw * float4(-5.161570e-001,7.118530e-001,-7.001680e-001,6.228960e-001) + r1.xyxy;
  r5.z = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r5.z = r5.z + -r1.z;
  r5.z = saturate(r5.z * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.z * r5.x + r1.w;
  r5.x = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r5.x = r5.x + -r1.z;
  r5.x = saturate(r5.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r5.x * r5.y + r2.z;
  r2.xy = r4.zw * r4.xy + r2.xy;
  r4.xyzw = float4(-1.642316e+000,-5.571187e-001,-3.310693e+000,-1.532568e-001) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r4.yw = r4.yw + -r4.xz;
  r4.xz = r0.ww * g_Global_MaxWeight + -r4.xz;
  r4.yw = float2(1.000000e+000,1.000000e+000) / r4.yw;
  r4.xy = saturate(r4.xz * r4.yw);
  r4.zw = r4.xy * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.xy = r4.xy * r4.xy;
  r5.xy = r4.zw * r4.xy;
  r6.xyzw = r3.zwzw * float4(-3.558340e-001,-5.790660e-001,-2.339410e-001,-8.682540e-001) + r1.xyxy;
  r5.z = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r5.z = r5.z + -r1.z;
  r5.z = saturate(r5.z * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.z * r5.x + r1.w;
  r5.x = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r5.x = r5.x + -r1.z;
  r5.x = saturate(r5.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r5.x * r5.y + r2.z;
  r2.xy = r4.zw * r4.xy + r2.xy;
  r4.xyzw = float4(-1.565460e+000,-5.948137e-001,-7.248464e-001,-1.340300e+000) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r4.yw = r4.yw + -r4.xz;
  r4.xz = r0.ww * g_Global_MaxWeight + -r4.xz;
  r4.yw = float2(1.000000e+000,1.000000e+000) / r4.yw;
  r4.xy = saturate(r4.xz * r4.yw);
  r4.zw = r4.xy * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.xy = r4.xy * r4.xy;
  r5.xy = r4.zw * r4.xy;
  r6.xyzw = r3.zwzw * float4(-4.904820e-001,-4.447960e-001,-3.190920e-001,-2.327160e-001) + r1.xyxy;
  r5.z = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r5.z = r5.z + -r1.z;
  r5.z = saturate(r5.z * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.z * r5.x + r1.w;
  r5.x = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r5.x = r5.x + -r1.z;
  r5.x = saturate(r5.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r5.x * r5.y + r2.z;
  r2.xy = r4.zw * r4.xy + r2.xy;
  r4.xyzw = float4(-1.007788e+000,-9.922538e-001,-1.029699e+000,-9.708999e-001) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r4.yw = r4.yw + -r4.xz;
  r4.xz = r0.ww * g_Global_MaxWeight + -r4.xz;
  r4.yw = float2(1.000000e+000,1.000000e+000) / r4.yw;
  r4.xy = saturate(r4.xz * r4.yw);
  r4.zw = r4.xy * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.xy = r4.xy * r4.xy;
  r5.xy = r4.zw * r4.xy;
  r6.xyzw = r3.zwzw * float4(-2.734540e-001,4.218080e-001,-4.009380e-001,3.155000e-001) + r1.xyxy;
  r5.z = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r5.z = r5.z + -r1.z;
  r5.z = saturate(r5.z * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.z * r5.x + r1.w;
  r5.x = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r5.x = r5.x + -r1.z;
  r5.x = saturate(r5.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r5.x * r5.y + r2.z;
  r2.xy = r4.zw * r4.xy + r2.xy;
  r4.xyzw = float4(-1.712442e+000,-5.252124e-001,-6.181365e+000,-2.001740e-002) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r4.yw = r4.yw + -r4.xz;
  r4.xz = r0.ww * g_Global_MaxWeight + -r4.xz;
  r4.yw = float2(1.000000e+000,1.000000e+000) / r4.yw;
  r4.xy = saturate(r4.xz * r4.yw);
  r4.zw = r4.xy * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.xy = r4.xy * r4.xy;
  r5.xy = r4.zw * r4.xy;
  r6.xyzw = r3.zwzw * float4(-2.750070e-001,6.381200e-001,-4.589710e-001,8.729130e-001) + r1.xyxy;
  r5.z = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r5.z = r5.z + -r1.z;
  r5.z = saturate(r5.z * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.z * r5.x + r1.w;
  r5.x = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r5.x = r5.x + -r1.z;
  r5.x = saturate(r5.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r5.x * r5.y + r2.z;
  r2.xy = r4.zw * r4.xy + r2.xy;
  r4.xyzw = float4(-5.081637e+000,-4.324562e-002,-5.330224e+000,-3.631378e-002) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r4.yw = r4.yw + -r4.xz;
  r4.xz = r0.ww * g_Global_MaxWeight + -r4.xz;
  r4.yw = float2(1.000000e+000,1.000000e+000) / r4.yw;
  r4.xy = saturate(r4.xz * r4.yw);
  r4.zw = r4.xy * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.xy = r4.xy * r4.xy;
  r5.xy = r4.zw * r4.xy;
  r6.xyzw = r3.zwzw * float4(9.978100e-002,-9.653260e-001,3.349740e-001,-9.158040e-001) + r1.xyxy;
  r5.z = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r5.z = r5.z + -r1.z;
  r5.z = saturate(r5.z * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.z * r5.x + r1.w;
  r5.x = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r5.x = r5.x + -r1.z;
  r5.x = saturate(r5.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r5.x * r5.y + r2.z;
  r2.xy = r4.zw * r4.xy + r2.xy;
  r4.xyzw = float4(-8.791655e-001,-1.131888e+000,-5.953323e-001,-1.564444e+000) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r4.yw = r4.yw + -r4.xz;
  r4.xz = r0.ww * g_Global_MaxWeight + -r4.xz;
  r4.yw = float2(1.000000e+000,1.000000e+000) / r4.yw;
  r4.xy = saturate(r4.xz * r4.yw);
  r4.zw = r4.xy * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.xy = r4.xy * r4.xy;
  r5.xy = r4.zw * r4.xy;
  r6.xyzw = r3.zwzw * float4(7.774800e-002,-4.496460e-001,1.569050e-001,-2.994960e-001) + r1.xyxy;
  r5.z = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r5.z = r5.z + -r1.z;
  r5.z = saturate(r5.z * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.z * r5.x + r1.w;
  r5.x = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r5.x = r5.x + -r1.z;
  r5.x = saturate(r5.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r5.x * r5.y + r2.z;
  r2.xy = r4.zw * r4.xy + r2.xy;
  r4.xyzw = float4(-8.267018e-001,-1.196994e+000,-2.705354e-001,-2.548031e+000) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r4.yw = r4.yw + -r4.xz;
  r4.xz = r0.ww * g_Global_MaxWeight + -r4.xz;
  r4.yw = float2(1.000000e+000,1.000000e+000) / r4.yw;
  r4.xy = saturate(r4.xz * r4.yw);
  r4.zw = r4.xy * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.xy = r4.xy * r4.xy;
  r5.xy = r4.zw * r4.xy;
  r6.xyzw = r3.zwzw * float4(2.119890e-001,3.812040e-001,8.674300e-002,1.473520e-001) + r1.xyxy;
  r5.z = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r5.z = r5.z + -r1.z;
  r5.z = saturate(r5.z * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.z * r5.x + r1.w;
  r5.x = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r5.x = r5.x + -r1.z;
  r5.x = saturate(r5.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r5.x * r5.y + r2.z;
  r2.xy = r4.zw * r4.xy + r2.xy;
  r4.xyzw = float4(-6.513790e+000,-1.587507e-002,-6.920564e+000,-1.195848e-002) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r4.yw = r4.yw + -r4.xz;
  r4.xz = r0.ww * g_Global_MaxWeight + -r4.xz;
  r4.yw = float2(1.000000e+000,1.000000e+000) / r4.yw;
  r4.xy = saturate(r4.xz * r4.yw);
  r4.zw = r4.xy * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.xy = r4.xy * r4.xy;
  r5.xy = r4.zw * r4.xy;
  r6.xyzw = r3.zwzw * float4(4.798200e-002,9.878920e-001,2.649240e-001,9.557060e-001) + r1.xyxy;
  r5.z = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r5.z = r5.z + -r1.z;
  r5.z = saturate(r5.z * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.z * r5.x + r1.w;
  r5.x = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r5.x = r5.x + -r1.z;
  r5.x = saturate(r5.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r5.x * r5.y + r2.z;
  r2.xy = r4.zw * r4.xy + r2.xy;
  r4.xyzw = float4(-6.254303e+000,-1.902401e-002,-6.557017e+000,-1.540396e-002) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r4.yw = r4.yw + -r4.xz;
  r4.xz = r0.ww * g_Global_MaxWeight + -r4.xz;
  r4.yw = float2(1.000000e+000,1.000000e+000) / r4.yw;
  r4.xy = saturate(r4.xz * r4.yw);
  r4.zw = r4.xy * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.xy = r4.xy * r4.xy;
  r5.xy = r4.zw * r4.xy;
  r6.xyzw = r3.zwzw * float4(7.369000e-001,-6.564680e-001,8.916830e-001,-4.286880e-001) + r1.xyxy;
  r5.z = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r5.z = r5.z + -r1.z;
  r5.z = saturate(r5.z * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.z * r5.x + r1.w;
  r5.x = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r5.x = r5.x + -r1.z;
  r5.x = saturate(r5.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r5.x * r5.y + r2.z;
  r2.xy = r4.zw * r4.xy + r2.xy;
  r4.xyzw = float4(-8.892467e+000,-3.039013e-003,-1.433095e+000,-6.673447e-001) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r4.yw = r4.yw + -r4.xz;
  r4.xz = r0.ww * g_Global_MaxWeight + -r4.xz;
  r4.yw = float2(1.000000e+000,1.000000e+000) / r4.yw;
  r4.xy = saturate(r4.xz * r4.yw);
  r4.zw = r4.xy * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.xy = r4.xy * r4.xy;
  r5.xy = r4.zw * r4.xy;
  r6.xyzw = r3.zwzw * float4(9.960950e-001,-5.992200e-002,5.081790e-001,3.717950e-001) + r1.xyxy;
  r5.z = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r5.z = r5.z + -r1.z;
  r5.z = saturate(r5.z * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.z * r5.x + r1.w;
  r5.x = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r5.x = r5.x + -r1.z;
  r5.x = saturate(r5.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r5.x * r5.y + r2.z;
  r2.xy = r4.zw * r4.xy + r2.xy;
  r4.xyzw = float4(-3.670727e+000,-1.179811e-001,-7.835936e+000,-6.328122e-003) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r4.yw = r4.yw + -r4.xz;
  r4.xz = r0.ww * g_Global_MaxWeight + -r4.xz;
  r4.yw = float2(1.000000e+000,1.000000e+000) / r4.yw;
  r4.xy = saturate(r4.xz * r4.yw);
  r4.zw = r4.xy * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.xy = r4.xy * r4.xy;
  r5.xy = r4.zw * r4.xy;
  r6.xyzw = r3.zwzw * float4(7.995340e-001,4.581090e-001,7.573550e-001,6.462810e-001) + r1.xyxy;
  r5.z = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r5.z = r5.z + -r1.z;
  r5.z = saturate(r5.z * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.z * r5.x + r1.w;
  r5.x = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r5.x = r5.x + -r1.z;
  r5.x = saturate(r5.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r5.x * r5.y + r2.z;
  r2.xy = r4.zw * r4.xy + r2.xy;
  r4.xyzw = float4(-7.056620e+000,-1.087819e-002,-5.628084e+000,-2.947003e-002) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r4.yw = r4.yw + -r4.xz;
  r4.xz = r0.ww * g_Global_MaxWeight + -r4.xz;
  r4.yw = float2(1.000000e+000,1.000000e+000) / r4.yw;
  r4.xy = saturate(r4.xz * r4.yw);
  r4.zw = r4.xy * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.xy = r4.xy * r4.xy;
  r5.xy = r4.zw * r4.xy;
  r6.xyzw = r3.zwzw * float4(6.188470e-001,7.759260e-001,-9.455550e-001,-2.567000e-001) + r1.xyxy;
  r5.z = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r5.z = r5.z + -r1.z;
  r5.z = saturate(r5.z * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.z * r5.x + r1.w;
  x0[0].x = r1.w;
  r2.xy = r4.zw * r4.xy + r2.xy;
  x1[0].x = r2.x;
  r4.x = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r4.x = r4.x + -r1.z;
  r4.x = saturate(r4.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r4.x * r5.y + r2.z;
  x0[1].x = r2.z;
  x1[1].x = r2.y;
  r4.x = r1.w / r2.x;
  r4.y = r2.z / r2.y;
  r4.x = r4.x + -r4.y;
  r4.x = 1.000000012e-007 >= abs(r4.x);
  if (r4.x == 0) {
  r5.xyzw = float4(-2.858026e+000,-2.141176e-001,-1.793787e+000,-4.908899e-001) * g_Global_MinWeightExponent;
  r5.xyzw = exp2(r5.xyzw);
  r4.yz = r5.yw + -r5.xz;
  r5.xy = r0.ww * g_Global_MaxWeight + -r5.xz;
  r4.yz = float2(1.000000e+000,1.000000e+000) / r4.yz;
  r4.yz = saturate(r5.xy * r4.yz);
  r5.xy = r4.yz * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.yz = r4.yz * r4.yz;
  r5.zw = r5.xy * r4.yz;
  r6.xyzw = r3.zwzw * float4(-7.874740e-001,-3.507920e-001,-5.703860e-001,4.254580e-001) + r1.xyxy;
  r4.w = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r4.w = r4.w + -r1.z;
  r4.w = saturate(r4.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r4.w * r5.z + r1.w;
  r4.w = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r4.w = r4.w + -r1.z;
  r4.w = saturate(r4.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r4.w * r5.w + r2.z;
  r2.xy = r5.xy * r4.yz + r2.xy;
  r5.xyzw = float4(-2.966564e+000,-1.974855e-001,-2.513609e+000,-2.777386e-001) * g_Global_MinWeightExponent;
  r5.xyzw = exp2(r5.xyzw);
  r4.yz = r5.yw + -r5.xz;
  r5.xy = r0.ww * g_Global_MaxWeight + -r5.xz;
  r4.yz = float2(1.000000e+000,1.000000e+000) / r4.yz;
  r4.yz = saturate(r5.xy * r4.yz);
  r5.xy = r4.yz * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.yz = r4.yz * r4.yz;
  r5.zw = r5.xy * r4.yz;
  r6.xyzw = r3.zwzw * float4(-8.349920e-001,2.515810e-001,-4.971320e-001,-6.582490e-001) + r1.xyxy;
  r4.w = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r4.w = r4.w + -r1.z;
  r4.w = saturate(r4.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r4.w * r5.z + r1.w;
  r4.w = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r4.w = r4.w + -r1.z;
  r4.w = saturate(r4.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r4.w * r5.w + r2.z;
  r2.xy = r5.xy * r4.yz + r2.xy;
  r5.xyzw = float4(-2.375736e+000,-3.087841e-001,-1.105263e+000,-9.018974e-001) * g_Global_MinWeightExponent;
  r5.xyzw = exp2(r5.xyzw);
  r4.yz = r5.yw + -r5.xz;
  r5.xy = r0.ww * g_Global_MaxWeight + -r5.xz;
  r4.yz = float2(1.000000e+000,1.000000e+000) / r4.yz;
  r4.yz = saturate(r5.xy * r4.yz);
  r5.xy = r4.yz * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.yz = r4.yz * r4.yz;
  r5.zw = r5.xy * r4.yz;
  r6.xyzw = r3.zwzw * float4(-3.240600e-001,-7.394280e-001,-3.222210e-001,-4.273100e-001) + r1.xyxy;
  r4.w = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r4.w = r4.w + -r1.z;
  r4.w = saturate(r4.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r4.w * r5.z + r1.w;
  r4.w = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r4.w = r4.w + -r1.z;
  r4.w = saturate(r4.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r4.w * r5.w + r2.z;
  r2.xy = r5.xy * r4.yz + r2.xy;
  r5.xyzw = float4(-8.032037e-001,-1.227946e+000,-6.114082e-001,-1.533482e+000) * g_Global_MinWeightExponent;
  r5.xyzw = exp2(r5.xyzw);
  r4.yz = r5.yw + -r5.xz;
  r5.xy = r0.ww * g_Global_MaxWeight + -r5.xz;
  r4.yz = float2(1.000000e+000,1.000000e+000) / r4.yz;
  r4.yz = saturate(r5.xy * r4.yz);
  r5.xy = r4.yz * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.yz = r4.yz * r4.yz;
  r5.zw = r5.xy * r4.yz;
  r6.xyzw = r3.zwzw * float4(-4.130790e-001,-1.078450e-001,-1.757310e-001,2.974040e-001) + r1.xyxy;
  r4.w = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r4.w = r4.w + -r1.z;
  r4.w = saturate(r4.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r4.w * r5.z + r1.w;
  r4.w = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r4.w = r4.w + -r1.z;
  r4.w = saturate(r4.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r4.w * r5.w + r2.z;
  r2.xy = r5.xy * r4.yz + r2.xy;
  r5.xyzw = float4(-9.542424e-001,-1.047257e+000,-2.723195e+000,-2.369090e-001) * g_Global_MinWeightExponent;
  r5.xyzw = exp2(r5.xyzw);
  r4.yz = r5.yw + -r5.xz;
  r5.xy = r0.ww * g_Global_MaxWeight + -r5.xz;
  r4.yz = float2(1.000000e+000,1.000000e+000) / r4.yz;
  r4.yz = saturate(r5.xy * r4.yz);
  r5.xy = r4.yz * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.yz = r4.yz * r4.yz;
  r5.zw = r5.xy * r4.yz;
  r6.xyzw = r3.zwzw * float4(-7.216500e-002,4.784760e-001,-2.617050e-001,8.071970e-001) + r1.xyxy;
  r4.w = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r4.w = r4.w + -r1.z;
  r4.w = saturate(r4.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r4.w * r5.z + r1.w;
  r4.w = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r4.w = r4.w + -r1.z;
  r4.w = saturate(r4.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r4.w * r5.w + r2.z;
  r2.xy = r5.xy * r4.yz + r2.xy;
  r5.xyzw = float4(-1.619569e+000,-5.679656e-001,-3.852466e+000,-1.035029e-001) * g_Global_MinWeightExponent;
  r5.xyzw = exp2(r5.xyzw);
  r4.yz = r5.yw + -r5.xz;
  r5.xy = r0.ww * g_Global_MaxWeight + -r5.xz;
  r4.yz = float2(1.000000e+000,1.000000e+000) / r4.yz;
  r4.yz = saturate(r5.xy * r4.yz);
  r5.xy = r4.yz * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.yz = r4.yz * r4.yz;
  r5.zw = r5.xy * r4.yz;
  r6.xyzw = r3.zwzw * float4(-4.019250e-001,5.417540e-001,4.576260e-001,-8.105010e-001) + r1.xyxy;
  r4.w = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r4.w = r4.w + -r1.z;
  r4.w = saturate(r4.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r4.w * r5.z + r1.w;
  r4.w = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r4.w = r4.w + -r1.z;
  r4.w = saturate(r4.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r4.w * r5.w + r2.z;
  r2.xy = r5.xy * r4.yz + r2.xy;
  r5.xyzw = float4(-2.325746e+000,-3.209752e-001,-9.322206e-001,-1.071121e+000) * g_Global_MinWeightExponent;
  r5.xyzw = exp2(r5.xyzw);
  r4.yz = r5.yw + -r5.xz;
  r5.xy = r0.ww * g_Global_MaxWeight + -r5.xz;
  r4.yz = float2(1.000000e+000,1.000000e+000) / r4.yz;
  r4.yz = saturate(r5.xy * r4.yz);
  r5.xy = r4.yz * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.yz = r4.yz * r4.yz;
  r5.zw = r5.xy * r4.yz;
  r6.xyzw = r3.zwzw * float4(4.814110e-001,-6.396010e-001,2.927350e-001,-3.752780e-001) + r1.xyxy;
  r4.w = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r4.w = r4.w + -r1.z;
  r4.w = saturate(r4.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r4.w * r5.z + r1.w;
  r4.w = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r4.w = r4.w + -r1.z;
  r4.w = saturate(r4.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r4.w * r5.w + r2.z;
  r2.xy = r5.xy * r4.yz + r2.xy;
  r5.xyzw = float4(-2.307422e-001,-2.758246e+000,-1.124923e+000,-8.850372e-001) * g_Global_MinWeightExponent;
  r5.xyzw = exp2(r5.xyzw);
  r4.yz = r5.yw + -r5.xz;
  r5.xy = r0.ww * g_Global_MaxWeight + -r5.xz;
  r4.yz = float2(1.000000e+000,1.000000e+000) / r4.yz;
  r4.yz = saturate(r5.xy * r4.yz);
  r5.xy = r4.yz * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.yz = r4.yz * r4.yz;
  r5.zw = r5.xy * r4.yz;
  r6.xyzw = r3.zwzw * float4(9.136000e-003,-1.475210e-001,4.981750e-001,2.121680e-001) + r1.xyxy;
  r4.w = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r4.w = r4.w + -r1.z;
  r4.w = saturate(r4.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r4.w * r5.z + r1.w;
  r4.w = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r4.w = r4.w + -r1.z;
  r4.w = saturate(r4.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r4.w * r5.w + r2.z;
  r2.xy = r5.xy * r4.yz + r2.xy;
  r5.xyzw = float4(-8.452450e-001,-1.173372e+000,-2.571431e+000,-2.657560e-001) * g_Global_MinWeightExponent;
  r5.xyzw = exp2(r5.xyzw);
  r4.yz = r5.yw + -r5.xz;
  r5.xy = r0.ww * g_Global_MaxWeight + -r5.xz;
  r4.yz = float2(1.000000e+000,1.000000e+000) / r4.yz;
  r4.yz = saturate(r5.xy * r4.yz);
  r5.xy = r4.yz * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.yz = r4.yz * r4.yz;
  r5.zw = r5.xy * r4.yz;
  r6.xyzw = r3.zwzw * float4(3.412490e-001,2.830870e-001,4.587000e-001,6.938470e-001) + r1.xyxy;
  r4.w = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r4.w = r4.w + -r1.z;
  r4.w = saturate(r4.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r4.w * r5.z + r1.w;
  r4.w = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r4.w = r4.w + -r1.z;
  r4.w = saturate(r4.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r4.w * r5.w + r2.z;
  r2.xy = r5.xy * r4.yz + r2.xy;
  r5.xyzw = float4(-1.463586e+000,-6.497079e-001,-2.534699e+000,-2.733006e-001) * g_Global_MinWeightExponent;
  r5.xyzw = exp2(r5.xyzw);
  r4.yz = r5.yw + -r5.xz;
  r5.xy = r0.ww * g_Global_MaxWeight + -r5.xz;
  r4.yz = float2(1.000000e+000,1.000000e+000) / r4.yz;
  r4.yz = saturate(r5.xy * r4.yz);
  r5.xy = r4.yz * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.yz = r4.yz * r4.yz;
  r5.zw = r5.xy * r4.yz;
  r6.xyzw = r3.zwzw * float4(1.238600e-002,6.372890e-001,7.120210e-001,-4.214940e-001) + r1.xyxy;
  r4.w = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r4.w = r4.w + -r1.z;
  r4.w = saturate(r4.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r4.w * r5.z + r1.w;
  r4.w = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r4.w = r4.w + -r1.z;
  r4.w = saturate(r4.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r4.w * r5.w + r2.z;
  r2.xy = r5.xy * r4.yz + r2.xy;
  r5.xyzw = float4(-1.678242e+000,-5.404912e-001,-3.674688e+000,-1.176441e-001) * g_Global_MinWeightExponent;
  r5.xyzw = exp2(r5.xyzw);
  r4.yz = r5.yw + -r5.xz;
  r5.xy = r0.ww * g_Global_MaxWeight + -r5.xz;
  r4.yz = float2(1.000000e+000,1.000000e+000) / r4.yz;
  r4.yz = saturate(r5.xy * r4.yz);
  r5.xy = r4.yz * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.yz = r4.yz * r4.yz;
  r5.zw = r5.xy * r4.yz;
  r6.xyzw = r3.zwzw * float4(5.148750e-001,-4.556430e-001,8.762840e-001,2.857300e-001) + r1.xyxy;
  r4.w = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r4.w = r4.w + -r1.z;
  r4.w = saturate(r4.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r4.w * r5.z + r1.w;
  r4.w = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r4.w = r4.w + -r1.z;
  r4.w = saturate(r4.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r4.w * r5.w + r2.z;
  r2.xy = r5.xy * r4.yz + r2.xy;
  r5.xyzw = float4(-2.041839e+000,-4.013564e-001,-2.845550e+000,-2.161237e-001) * g_Global_MinWeightExponent;
  r5.xyzw = exp2(r5.xyzw);
  r4.yz = r5.yw + -r5.xz;
  r5.xy = r0.ww * g_Global_MaxWeight + -r5.xz;
  r4.yz = float2(1.000000e+000,1.000000e+000) / r4.yz;
  r4.yz = saturate(r5.xy * r4.yz);
  r5.xy = r4.yz * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.yz = r4.yz * r4.yz;
  r5.zw = r5.xy * r4.yz;
  r6.xyzw = r3.zwzw * float4(6.770640e-001,3.389020e-001,6.046160e-001,6.128180e-001) + r1.xyxy;
  r4.w = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r4.w = r4.w + -r1.z;
  r4.w = saturate(r4.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r4.w * r5.z + r1.w;
  r4.w = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r4.w = r4.w + -r1.z;
  r4.w = saturate(r4.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r4.w * r5.w + r2.z;
  r2.xy = r5.xy * r4.yz + r2.xy;
  r5.xyzw = float4(-2.930848e+000,-2.028002e-001,-2.161618e+000,-3.649522e-001) * g_Global_MinWeightExponent;
  r5.xyzw = exp2(r5.xyzw);
  r4.yz = r5.yw + -r5.xz;
  r5.xy = r0.ww * g_Global_MaxWeight + -r5.xz;
  r4.yz = float2(1.000000e+000,1.000000e+000) / r4.yz;
  r4.yz = saturate(r5.xy * r4.yz);
  r5.xy = r4.yz * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.yz = r4.yz * r4.yz;
  r5.zw = r5.xy * r4.yz;
  r6.xyzw = r3.zwzw * float4(-8.652070e-001,-7.961700e-002,-7.532490e-001,-1.885730e-001) + r1.xyxy;
  r4.w = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r4.w = r4.w + -r1.z;
  r4.w = saturate(r4.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r4.w * r5.z + r1.w;
  r4.w = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r4.w = r4.w + -r1.z;
  r4.w = saturate(r4.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r4.w * r5.w + r2.z;
  r2.xy = r5.xy * r4.yz + r2.xy;
  r5.xyzw = float4(-1.428795e+000,-6.698800e-001,-4.456054e+000,-6.727525e-002) * g_Global_MinWeightExponent;
  r5.xyzw = exp2(r5.xyzw);
  r4.yz = r5.yw + -r5.xz;
  r5.xy = r0.ww * g_Global_MaxWeight + -r5.xz;
  r4.yz = float2(1.000000e+000,1.000000e+000) / r4.yz;
  r4.yz = saturate(r5.xy * r4.yz);
  r5.xy = r4.yz * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.yz = r4.yz * r4.yz;
  r5.zw = r5.xy * r4.yz;
  r6.xyzw = r3.zwzw * float4(-5.940550e-001,2.053900e-001,-9.517430e-001,7.168600e-002) + r1.xyxy;
  r4.w = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r4.w = r4.w + -r1.z;
  r4.w = saturate(r4.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r4.w * r5.z + r1.w;
  r4.w = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r4.w = r4.w + -r1.z;
  r4.w = saturate(r4.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r4.w * r5.w + r2.z;
  r2.xy = r5.xy * r4.yz + r2.xy;
  r5.xyzw = float4(-1.514670e+000,-6.214360e-001,-1.359379e+000,-7.125280e-001) * g_Global_MinWeightExponent;
  r5.xyzw = exp2(r5.xyzw);
  r4.yz = r5.yw + -r5.xz;
  r5.xy = r0.ww * g_Global_MaxWeight + -r5.xz;
  r4.yz = float2(1.000000e+000,1.000000e+000) / r4.yz;
  r4.yz = saturate(r5.xy * r4.yz);
  r5.xy = r4.yz * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.yz = r4.yz * r4.yz;
  r5.zw = r5.xy * r4.yz;
  r6.xyzw = r3.zwzw * float4(-2.053260e-001,-6.167430e-001,-4.802800e-002,-6.083570e-001) + r1.xyxy;
  r4.w = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r4.w = r4.w + -r1.z;
  r4.w = saturate(r4.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r4.w * r5.z + r1.w;
  r4.w = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r4.w = r4.w + -r1.z;
  r4.w = saturate(r4.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r4.w * r5.w + r2.z;
  r2.xy = r5.xy * r4.yz + r2.xy;
  r5.xyzw = float4(-4.544793e-001,-1.887759e+000,-7.866251e-001,-1.250504e+000) * g_Global_MinWeightExponent;
  r5.xyzw = exp2(r5.xyzw);
  r4.yz = r5.yw + -r5.xz;
  r5.xy = r0.ww * g_Global_MaxWeight + -r5.xz;
  r4.yz = float2(1.000000e+000,1.000000e+000) / r4.yz;
  r4.yz = saturate(r5.xy * r4.yz);
  r5.xy = r4.yz * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.yz = r4.yz * r4.yz;
  r5.zw = r5.xy * r4.yz;
  r6.xyzw = r3.zwzw * float4(-2.653060e-001,-5.133300e-002,-9.582500e-002,-4.092320e-001) + r1.xyxy;
  r4.w = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r4.w = r4.w + -r1.z;
  r4.w = saturate(r4.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r4.w * r5.z + r1.w;
  x0[0].x = r1.w;
  r2.xy = r5.xy * r4.yz + r2.xy;
  x1[0].x = r2.x;
  r4.y = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r4.y = r4.y + -r1.z;
  r4.y = saturate(r4.y * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r4.y * r5.w + r2.z;
  x0[1].x = r2.z;
  x1[1].x = r2.y;
  r1.w = r1.w / r2.x;
  r2.x = r2.z / r2.y;
  r1.w = -r2.x + r1.w;
  r1.w = 1.000000012e-007 >= abs(r1.w);
  r1.w = (int)r4.x | (int)r1.w;
  } else {
  r1.w = -1;
  }
  if (r1.w == 0) {
  r4.xyzw = float4(-4.549229e-001,-1.886562e+000,-4.887598e-001,-1.799056e+000) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r2.xy = r4.yw + -r4.xz;
  r4.xy = r0.ww * g_Global_MaxWeight + -r4.xz;
  r2.xy = float2(1.000000e+000,1.000000e+000) / r2.xy;
  r2.xy = saturate(r4.xy * r2.xy);
  r4.xy = r2.xy * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r2.xy = r2.xy * r2.xy;
  r4.zw = r4.xy * r2.xy;
  r5.xyzw = r3.zwzw * float4(-1.632000e-002,2.699580e-001,-2.490260e-001,1.433990e-001) + r1.xyxy;
  r1.w = tShadowMap.SampleLevel(PointSampler_s, r5.xy, 0.000000000e+000).x;
  r1.w = r1.w + -r1.z;
  r1.w = saturate(r1.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = x0[0].x;
  r1.w = r1.w * r4.z + r2.z;
  r2.z = x1[0].x;
  r2.x = r4.x * r2.x + r2.z;
  r2.z = tShadowMap.SampleLevel(PointSampler_s, r5.zw, 0.000000000e+000).x;
  r2.z = r2.z + -r1.z;
  r2.z = saturate(r2.z * g_Global_TransitionScaleZ + 1.000000000e+000);
  r4.x = x0[1].x;
  r2.z = r2.z * r4.w + r4.x;
  r4.x = x1[1].x;
  r2.y = r4.y * r2.y + r4.x;
  r4.xyzw = float4(-3.003686e+000,-1.921193e-001,-2.199383e+000,-3.542629e-001) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r4.yw = r4.yw + -r4.xz;
  r4.xz = r0.ww * g_Global_MaxWeight + -r4.xz;
  r4.yw = float2(1.000000e+000,1.000000e+000) / r4.yw;
  r4.xy = saturate(r4.xz * r4.yw);
  r4.zw = r4.xy * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.xy = r4.xy * r4.xy;
  r5.xy = r4.zw * r4.xy;
  r6.xyzw = r3.zwzw * float4(-7.740200e-002,8.718900e-001,3.208270e-001,-7.134530e-001) + r1.xyxy;
  r5.z = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r5.z = r5.z + -r1.z;
  r5.z = saturate(r5.z * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.z * r5.x + r1.w;
  r2.x = r4.z * r4.x + r2.x;
  r4.x = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r4.x = r4.x + -r1.z;
  r4.x = saturate(r4.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r4.x * r5.y + r2.z;
  r2.y = r4.w * r4.y + r2.y;
  r4.xyzw = float4(-2.643474e+000,-2.516116e-001,-2.137325e-001,-2.860435e+000) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r4.yw = r4.yw + -r4.xz;
  r4.xz = r0.ww * g_Global_MaxWeight + -r4.xz;
  r4.yw = float2(1.000000e+000,1.000000e+000) / r4.yw;
  r4.xy = saturate(r4.xz * r4.yw);
  r4.zw = r4.xy * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.xy = r4.xy * r4.xy;
  r5.xy = r4.zw * r4.xy;
  r6.xyzw = r3.zwzw * float4(1.762080e-001,-8.212670e-001,1.376870e-001,-1.624000e-003) + r1.xyxy;
  r5.z = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r5.z = r5.z + -r1.z;
  r5.z = saturate(r5.z * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.z * r5.x + r1.w;
  r2.x = r4.z * r4.x + r2.x;
  r4.x = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r4.x = r4.x + -r1.z;
  r4.x = saturate(r4.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r4.x * r5.y + r2.z;
  r2.y = r4.w * r4.y + r2.y;
  r4.xyzw = float4(-5.326968e-001,-1.695542e+000,-5.267230e-001,-1.709008e+000) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r4.yw = r4.yw + -r4.xz;
  r4.xz = r0.ww * g_Global_MaxWeight + -r4.xz;
  r4.yw = float2(1.000000e+000,1.000000e+000) / r4.yw;
  r4.xy = saturate(r4.xz * r4.yw);
  r4.zw = r4.xy * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.xy = r4.xy * r4.xy;
  r5.xy = r4.zw * r4.xy;
  r6.xyzw = r3.zwzw * float4(3.003950e-001,-7.129100e-002,2.732510e-001,1.374430e-001) + r1.xyxy;
  r5.z = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r5.z = r5.z + -r1.z;
  r5.z = saturate(r5.z * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.z * r5.x + r1.w;
  r2.x = r4.z * r4.x + r2.x;
  r4.x = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r4.x = r4.x + -r1.z;
  r4.x = saturate(r4.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r4.x * r5.y + r2.z;
  r2.y = r4.w * r4.y + r2.y;
  r4.xyzw = float4(-8.418809e-001,-1.177607e+000,-2.845301e+000,-2.161639e-001) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r4.yw = r4.yw + -r4.xz;
  r4.xz = r0.ww * g_Global_MaxWeight + -r4.xz;
  r4.yw = float2(1.000000e+000,1.000000e+000) / r4.yw;
  r4.xy = saturate(r4.xz * r4.yw);
  r4.zw = r4.xy * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.xy = r4.xy * r4.xy;
  r5.xy = r4.zw * r4.xy;
  r6.xyzw = r3.zwzw * float4(4.387880e-001,5.388500e-002,1.265620e-001,8.514970e-001) + r1.xyxy;
  r5.z = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r5.z = r5.z + -r1.z;
  r5.z = saturate(r5.z * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.z * r5.x + r1.w;
  r2.x = r4.z * r4.x + r2.x;
  r4.x = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r4.x = r4.x + -r1.z;
  r4.x = saturate(r4.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r4.x * r5.y + r2.z;
  r2.y = r4.w * r4.y + r2.y;
  r4.xyzw = float4(-4.226611e+000,-7.919607e-002,-3.857164e+000,-1.031540e-001) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r4.yw = r4.yw + -r4.xz;
  r4.xz = r0.ww * g_Global_MaxWeight + -r4.xz;
  r4.yw = float2(1.000000e+000,1.000000e+000) / r4.yw;
  r4.xy = saturate(r4.xz * r4.yw);
  r4.zw = r4.xy * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.xy = r4.xy * r4.xy;
  r5.xy = r4.zw * r4.xy;
  r6.xyzw = r3.zwzw * float4(4.216080e-001,8.475080e-001,8.931730e-001,-2.626680e-001) + r1.xyxy;
  r5.z = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r5.z = r5.z + -r1.z;
  r5.z = saturate(r5.z * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.z * r5.x + r1.w;
  r2.x = r4.z * r4.x + r2.x;
  r4.x = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r4.x = r4.x + -r1.z;
  r4.x = saturate(r4.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r4.x * r5.y + r2.z;
  r2.y = r4.w * r4.y + r2.y;
  r4.xyzw = float4(-2.675851e+000,-2.455242e-001,-2.050424e+000,-3.986138e-001) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r4.yw = r4.yw + -r4.xz;
  r4.xz = r0.ww * g_Global_MaxWeight + -r4.xz;
  r4.yw = float2(1.000000e+000,1.000000e+000) / r4.yw;
  r4.xy = saturate(r4.xz * r4.yw);
  r4.zw = r4.xy * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.xy = r4.xy * r4.xy;
  r5.xy = r4.zw * r4.xy;
  r6.xyzw = r3.zwzw * float4(8.374320e-001,-1.010720e-001,7.345230e-001,1.895520e-001) + r1.xyxy;
  r5.z = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r5.z = r5.z + -r1.z;
  r5.z = saturate(r5.z * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.z * r5.x + r1.w;
  r2.x = r4.z * r4.x + r2.x;
  r4.x = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r4.x = r4.x + -r1.z;
  r4.x = saturate(r4.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r4.x * r5.y + r2.z;
  r2.y = r4.w * r4.y + r2.y;
  r4.xyzw = float4(-3.108611e+000,-1.777757e-001,-1.781085e+000,-4.960704e-001) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r4.yw = r4.yw + -r4.xz;
  r4.xz = r0.ww * g_Global_MaxWeight + -r4.xz;
  r4.yw = float2(1.000000e+000,1.000000e+000) / r4.yw;
  r4.xy = saturate(r4.xz * r4.yw);
  r4.zw = r4.xy * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.xy = r4.xy * r4.xy;
  r5.xy = r4.zw * r4.xy;
  r6.xyzw = r3.zwzw * float4(8.807970e-001,7.594400e-002,-7.084200e-001,-2.953500e-002) + r1.xyxy;
  r5.z = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r5.z = r5.z + -r1.z;
  r5.z = saturate(r5.z * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.z * r5.x + r1.w;
  r2.x = r4.z * r4.x + r2.x;
  r4.x = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r4.x = r4.x + -r1.z;
  r4.x = saturate(r4.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r4.x * r5.y + r2.z;
  r2.y = r4.w * r4.y + r2.y;
  r4.xyzw = float4(-1.437416e+000,-6.648095e-001,-2.969294e+000,-1.970855e-001) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r4.yw = r4.yw + -r4.xz;
  r4.xz = r0.ww * g_Global_MaxWeight + -r4.xz;
  r4.yw = float2(1.000000e+000,1.000000e+000) / r4.yw;
  r4.xy = saturate(r4.xz * r4.yw);
  r4.zw = r4.xy * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.xy = r4.xy * r4.xy;
  r5.xy = r4.zw * r4.xy;
  r6.xyzw = r3.zwzw * float4(-5.555540e-001,-2.987190e-001,-4.575900e-002,-8.711100e-001) + r1.xyxy;
  r5.z = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r5.z = r5.z + -r1.z;
  r5.z = saturate(r5.z * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.z * r5.x + r1.w;
  r2.x = r4.z * r4.x + r2.x;
  r4.x = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r4.x = r4.x + -r1.z;
  r4.x = saturate(r4.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r4.x * r5.y + r2.z;
  r2.y = r4.w * r4.y + r2.y;
  r4.xyzw = float4(-4.279289e-001,-1.962003e+000,-9.815290e-001,-1.018710e+000) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r4.yw = r4.yw + -r4.xz;
  r4.xz = r0.ww * g_Global_MaxWeight + -r4.xz;
  r4.yw = float2(1.000000e+000,1.000000e+000) / r4.yw;
  r4.xy = saturate(r4.xz * r4.yw);
  r4.zw = r4.xy * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.xy = r4.xy * r4.xy;
  r5.xy = r4.zw * r4.xy;
  r6.xyzw = r3.zwzw * float4(-1.387550e-001,-2.159340e-001,-4.885850e-001,6.988200e-002) + r1.xyxy;
  r5.z = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r5.z = r5.z + -r1.z;
  r5.z = saturate(r5.z * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.z * r5.x + r1.w;
  r2.x = r4.z * r4.x + r2.x;
  r4.x = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r4.x = r4.x + -r1.z;
  r4.x = saturate(r4.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r4.x * r5.y + r2.z;
  r2.y = r4.w * r4.y + r2.y;
  r4.xyzw = float4(-1.837410e-001,-3.063916e+000,-1.486772e+000,-6.366831e-001) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r4.yw = r4.yw + -r4.xz;
  r4.xz = r0.ww * g_Global_MaxWeight + -r4.xz;
  r4.yw = float2(1.000000e+000,1.000000e+000) / r4.yw;
  r4.xy = saturate(r4.xz * r4.yw);
  r4.zw = r4.xy * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.xy = r4.xy * r4.xy;
  r5.xy = r4.zw * r4.xy;
  r6.xyzw = r3.zwzw * float4(-1.122100e-001,4.134000e-002,1.389220e-001,-6.280080e-001) + r1.xyxy;
  r5.z = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r5.z = r5.z + -r1.z;
  r5.z = saturate(r5.z * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.z * r5.x + r1.w;
  r2.x = r4.z * r4.x + r2.x;
  r4.x = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r4.x = r4.x + -r1.z;
  r4.x = saturate(r4.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r4.x * r5.y + r2.z;
  r2.y = r4.w * r4.y + r2.y;
  r4.xyzw = float4(-1.469493e+000,-6.463585e-001,-8.561975e-001,-1.159739e+000) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r4.yw = r4.yw + -r4.xz;
  r4.xz = r0.ww * g_Global_MaxWeight + -r4.xz;
  r4.yw = float2(1.000000e+000,1.000000e+000) / r4.yw;
  r4.xy = saturate(r4.xz * r4.yw);
  r4.zw = r4.xy * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.xy = r4.xy * r4.xy;
  r5.xy = r4.zw * r4.xy;
  r6.xyzw = r3.zwzw * float4(3.173400e-001,-5.545060e-001,3.752130e-001,-2.440390e-001) + r1.xyxy;
  r5.z = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r5.z = r5.z + -r1.z;
  r5.z = saturate(r5.z * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.z * r5.x + r1.w;
  r2.x = r4.z * r4.x + r2.x;
  r4.x = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r4.x = r4.x + -r1.z;
  r4.x = saturate(r4.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r4.x * r5.y + r2.z;
  r2.y = r4.w * r4.y + r2.y;
  r4.xyzw = float4(-1.738663e+000,-5.138465e-001,-1.127459e+000,-8.828937e-001) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r4.yw = r4.yw + -r4.xz;
  r4.xz = r0.ww * g_Global_MaxWeight + -r4.xz;
  r4.yw = float2(1.000000e+000,1.000000e+000) / r4.yw;
  r4.xy = saturate(r4.xz * r4.yw);
  r4.zw = r4.xy * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.xy = r4.xy * r4.xy;
  r5.xy = r4.zw * r4.xy;
  r6.xyzw = r3.zwzw * float4(2.565670e-001,6.516650e-001,1.351820e-001,5.251590e-001) + r1.xyxy;
  r5.z = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r5.z = r5.z + -r1.z;
  r5.z = saturate(r5.z * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.z * r5.x + r1.w;
  r2.x = r4.z * r4.x + r2.x;
  r4.x = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r4.x = r4.x + -r1.z;
  r4.x = saturate(r4.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r4.x * r5.y + r2.z;
  r2.y = r4.w * r4.y + r2.y;
  r4.xyzw = float4(-1.987747e+000,-4.191451e-001,-1.304964e+000,-7.483869e-001) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r4.yw = r4.yw + -r4.xz;
  r4.xz = r0.ww * g_Global_MaxWeight + -r4.xz;
  r4.yw = float2(1.000000e+000,1.000000e+000) / r4.yw;
  r4.xy = saturate(r4.xz * r4.yw);
  r4.zw = r4.xy * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.xy = r4.xy * r4.xy;
  r5.xy = r4.zw * r4.xy;
  r6.xyzw = r3.zwzw * float4(7.019110e-001,-2.581220e-001,5.494970e-001,-2.289060e-001) + r1.xyxy;
  r5.z = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r5.z = r5.z + -r1.z;
  r5.z = saturate(r5.z * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.z * r5.x + r1.w;
  r2.x = r4.z * r4.x + r2.x;
  r4.x = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r4.x = r4.x + -r1.z;
  r4.x = saturate(r4.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r4.x * r5.y + r2.z;
  r2.y = r4.w * r4.y + r2.y;
  r4.xyzw = float4(-1.359493e+000,-7.124550e-001,-1.304402e+000,-7.487690e-001) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r4.yw = r4.yw + -r4.xz;
  r4.xz = r0.ww * g_Global_MaxWeight + -r4.xz;
  r4.yw = float2(1.000000e+000,1.000000e+000) / r4.yw;
  r4.xy = saturate(r4.xz * r4.yw);
  r4.zw = r4.xy * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.xy = r4.xy * r4.xy;
  r5.xy = r4.zw * r4.xy;
  r6.xyzw = r3.zwzw * float4(6.057680e-001,7.407900e-002,-5.827590e-001,-1.206200e-001) + r1.xyxy;
  r5.z = tShadowMap.SampleLevel(PointSampler_s, r6.xy, 0.000000000e+000).x;
  r5.z = r5.z + -r1.z;
  r5.z = saturate(r5.z * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.z * r5.x + r1.w;
  r2.x = r4.z * r4.x + r2.x;
  r4.x = tShadowMap.SampleLevel(PointSampler_s, r6.zw, 0.000000000e+000).x;
  r4.x = r4.x + -r1.z;
  r4.x = saturate(r4.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r4.x * r5.y + r2.z;
  r2.y = r4.w * r4.y + r2.y;
  r4.xyzw = float4(-1.390656e+000,-6.929014e-001,-1.563919e+000,-5.956006e-001) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r4.yw = r4.yw + -r4.xz;
  r4.xz = r0.ww * g_Global_MaxWeight + -r4.xz;
  r4.yw = float2(1.000000e+000,1.000000e+000) / r4.yw;
  r4.xy = saturate(r4.xz * r4.yw);
  r4.zw = r4.xy * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r4.xy = r4.xy * r4.xy;
  r5.xy = r4.zw * r4.xy;
  r3.xyzw = r3.xyzw * float4(3.519290e-001,5.087460e-001,6.536620e-001,-1.032670e-001) + r1.xyxy;
  r0.w = tShadowMap.SampleLevel(PointSampler_s, r3.xy, 0.000000000e+000).x;
  r0.w = r0.w + -r1.z;
  r0.w = saturate(r0.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r0.w = r0.w * r5.x + r1.w;
  x0[0].x = r0.w;
  r0.w = r4.z * r4.x + r2.x;
  x1[0].x = r0.w;
  r0.w = tShadowMap.SampleLevel(PointSampler_s, r3.zw, 0.000000000e+000).x;
  r0.w = r0.w + -r1.z;
  r0.w = saturate(r0.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r0.w = r0.w * r5.y + r2.z;
  x0[1].x = r0.w;
  r0.w = r4.w * r4.y + r2.y;
  x1[1].x = r0.w;
  }
  r0.w = x0[0].x;
  r1.x = x0[1].x;
  r0.w = r1.x + r0.w;
  r1.x = x1[0].x;
  r1.y = x1[1].x;
  r1.x = r1.x + r1.y;
  r2.w = r0.w / r1.x;
  }
  r0.w = g_Global_FalloffParams.w == 1.000000;
  r1.xyzw = g_Global_InvView._m10_m11_m12_m13 * r0.zzzz;
  r1.xyzw = r0.yyyy * g_Global_InvView._m00_m01_m02_m03 + r1.xyzw;
  r1.xyzw = r0.xxxx * g_Global_InvView._m20_m21_m22_m23 + r1.xyzw;
  r1.xyzw = g_Global_InvView._m30_m31_m32_m33 + r1.xyzw;
  r0.xyz = r1.xyz / r1.www;
  r0.xyz = g_Global_LightPositionAndRadius.xyz + -r0.xyz;
  r0.xyz = g_Global_LightPositionAndRadius.www * r0.xyz;
  r0.x = dot(r0.xyz, r0.xyz);
  r0.x = sqrt(r0.x);
  r0.x = r0.x * g_Global_FalloffParams.x + g_Global_FalloffParams.y;
  r0.x = max(r0.x, 0.000000000e+000);
  r0.x = -r0.x * r0.x + 1.000000000e+000;
  r0.x = max(r0.x, 0.000000000e+000);
  r0.x = log2(r0.x);
  r0.x = g_Global_FalloffParams.z * r0.x;
  r0.x = exp2(r0.x);
  r0.y = -1.000000000e+000 + r2.w;
  r0.x = r0.x * r0.y + 1.000000000e+000;
  r0.x = r0.w ? r0.x : r2.w;
  r0.y = 1.000000000e+000 + -r0.x;
  r0.x = g_Global_ShadowIntensity * r0.y + r0.x;
  r0.y = r0.x == 1.000000;
  if (r0.y != 0) discard;
  o0.x = r0.x;
  return;
}