// Manually fix error: "invalid subscript xz"
//	used wrong part of the partial variable.

cbuffer SMAAFilterConstantscb : register(b1)
{

  struct
  {
    float2 m_OneOverWidthHeight;
    float2 m_ThresholdParams;
    int4 m_SubsampleIndices;
    float4 m_MiscParams;
  } g_SMAAFilterConstants : packoffset(c0);

}
SamplerState LinearSampler_s : register(s5);
SamplerState PointSampler_s : register(s6);
Texture2D<float4> g_EdgesTexture_NG : register(t5);
Texture2D<float4> g_AreaTexture_NG : register(t6);
Texture2D<float4> g_SearchTexture_NG : register(t7);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : SV_Position0,
  float2 v1 : TEXCOORD0,
  float2 w1 : TEXCOORD1,
  float4 v2 : TEXCOORD2,
  float4 v3 : TEXCOORD3,
  float4 v4 : TEXCOORD4,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5;
  uint4 bitmask;
  r0.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s, v1.xy, 0.000000000e+000).xyzw;
  r0.y = 0.000000000e+000 < r0.y;
  if (r0.y != 0) {
  r0.y = 0.000000000e+000 < r0.x;
  r1.xyzw = g_SMAAFilterConstants.m_OneOverWidthHeight.xyxy * float4(-1.000000e+000,1.000000e+000,1.000000e+000,-1.000000e+000) + v1.xyxy;
  r0.zw = r1.xy;
  r2.xy = float2(0.000000e+000,0.000000e+000);
  while (true) {
  r2.z = r2.y >= 8.000000000e+000;
  if (r2.z != 0) break;
  r3.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s, r0.zw, 0.000000000e+000).xyzw;
  r2.z = dot(r3.xy, float2(1.000000e+000,1.000000e+000));
  r2.z = r2.z < 1.899999976e+000;
  r2.x = r3.y;
  if (r2.z != 0) break;
  r0.zw = g_SMAAFilterConstants.m_OneOverWidthHeight.xy * float2(-1.000000e+000,1.000000e+000) + r0.zw;
  r2.y = 1.000000000e+000 + r2.y;
  r2.x = r3.y;
  }
  r0.z = 8.999999762e-001 < r2.x;
  r0.z = r0.z ? 0x3f800000 : 0;
  r0.z = r2.y + r0.z;
  r2.y = (int)r0.z & (int)r0.y;
  r0.yz = r1.zw;
  r0.w = 0.000000000e+000;
  while (true) {
  r1.x = r0.w >= 8.000000000e+000;
  if (r1.x != 0) break;
  r3.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s, r0.yz, 0.000000000e+000).xyzw;
  r1.x = dot(r3.xy, float2(1.000000e+000,1.000000e+000));
  r1.x = r1.x < 1.899999976e+000;
  if (r1.x != 0) break;
  r0.yz = g_SMAAFilterConstants.m_OneOverWidthHeight.xy * float2(1.000000e+000,-1.000000e+000) + r0.yz;
  r0.w = 1.000000000e+000 + r0.w;
  }
  r0.y = r2.y + r0.w;
  r0.y = 2.000000000e+000 < r0.y;
  if (r0.y != 0) {
  r2.x = -r2.y;
  r2.zw = float2(1.000000e+000,-1.000000e+000) * r0.ww;
  r1.xyzw = r2.xyzw * g_SMAAFilterConstants.m_OneOverWidthHeight.xyxy + v1.xyxy;
  r3.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s, r1.xy, 0.000000000e+000, int2(0, 0)).xyzw;
  r4.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s, r1.xy, 0.000000000e+000, int2(0, 0)).xyzw;
  r5.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s, r1.zw, 0.000000000e+000, int2(0, 0)).yxzw;
  r1.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s, r1.zw, 0.000000000e+000, int2(0, 0)).xyzw;
  r5.y = r3.y;
  r1.y = r4.x;
  r0.yz = r5.xy * float2(2.000000e+000,2.000000e+000) + r1.xy;
  r1.x = 7 >= r2.z;
  r1.y = 7 >= r2.y;
  r1.x = r1.x ? 0 : 0;
  r1.y = r1.y ? 0 : 0;
  r0.yz = r1.xy * r0.yz;
  r0.w = g_SMAAFilterConstants.m_SubsampleIndices.z;
  r0.yz = r0.yz * float2(2.000000e+001,2.000000e+001) + r2.zy;
  r1.xy = r0.yz * float2(1.785714e-003,6.250000e-003) + float2(8.928571e-004,5.031250e-001);
  r1.z = r0.w * 1.428571492e-001 + r1.x;
  r1.xyzw = g_AreaTexture_NG.SampleLevel(LinearSampler_s, r1.yz, 0.000000000e+000).xyzw;
  } else {
  r1.xy = float2(0.000000e+000,0.000000e+000);
  }
  r0.yz = -g_SMAAFilterConstants.m_OneOverWidthHeight.xy + v1.xy;
  r1.zw = r0.yz;
  r2.x = 0.000000000e+000;
  while (true) {
  r0.w = r2.x >= 8.000000000e+000;
  if (r0.w != 0) break;
  r3.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s, r1.zw, 0.000000000e+000).xyzw;
  r4.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s, r1.zw, 0.000000000e+000, int2(0, 0)).xyzw;
  r3.x = r4.x;
  r0.w = dot(r3.xy, float2(1.000000e+000,1.000000e+000));
  r0.w = r0.w < 1.899999976e+000;
  if (r0.w != 0) break;
  r1.zw = -g_SMAAFilterConstants.m_OneOverWidthHeight.xy + r1.zw;
  r2.x = 1.000000000e+000 + r2.x;
  }
  r3.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s, v1.xy, 0.000000000e+000, int2(0, 0)).xyzw;
  r0.y = 0.000000000e+000 < r3.x;
  r0.zw = g_SMAAFilterConstants.m_OneOverWidthHeight.xy + v1.xy;
  r1.zw = r0.zw;
  r2.w = 0.000000000e+000;
  r3.x = 0.000000000e+000;
  while (true) {
  r3.y = r3.x >= 8.000000000e+000;
  if (r3.y != 0) break;
  r4.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s, r1.zw, 0.000000000e+000).xyzw;
  r5.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s, r1.zw, 0.000000000e+000, int2(0, 0)).xyzw;
  r4.x = r5.x;
  r3.y = dot(r4.xy, float2(1.000000e+000,1.000000e+000));
  r3.y = r3.y < 1.899999976e+000;
  r2.w = r4.y;
  if (r3.y != 0) break;
  r1.zw = g_SMAAFilterConstants.m_OneOverWidthHeight.xy + r1.zw;
  r3.x = 1.000000000e+000 + r3.x;
  r2.w = r4.y;
  }
  r0.z = 8.999999762e-001 < r2.w;
  r0.z = r0.z ? 0x3f800000 : 0;
  r0.z = r3.x + r0.z;
  r2.z = (int)r0.z & (int)r0.y;
  r0.y = r2.x + r2.z;
  r0.y = 2.000000000e+000 < r0.y;
  if (r0.y != 0) {
  r2.y = -r2.x;
  r3.xyzw = r2.yyzz * g_SMAAFilterConstants.m_OneOverWidthHeight.xyxy + v1.xyxy;
  r4.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s, r3.xy, 0.000000000e+000, int2(0, 0)).xyzw;
  r5.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s, r3.xy, 0.000000000e+000, int2(0, 0)).yzwx;
  r3.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s, r3.zw, 0.000000000e+000, int2(0, 0)).xyzw;
  r5.y = r4.y;
  r5.xz = r3.yx;
  r0.yz = r5.xy * float2(2.000000e+000,2.000000e+000) + r5.zw;
  r1.z = 7 >= r2.z;
  r1.w = 7 >= r2.x;
  r1.z = r1.z ? 0 : 0;
  r1.w = r1.w ? 0 : 0;
  r0.yz = r1.zw * r0.yz;
  r0.w = g_SMAAFilterConstants.m_SubsampleIndices.w;
  r0.yz = r0.yz * float2(2.000000e+001,2.000000e+001) + r2.zx;
  r2.xy = r0.yz * float2(1.785714e-003,6.250000e-003) + float2(8.928571e-004,5.031250e-001);
  r2.z = r0.w * 1.428571492e-001 + r2.x;
  r2.xyzw = g_AreaTexture_NG.SampleLevel(LinearSampler_s, r2.yz, 0.000000000e+000).xyzw;
  r1.xy = r2.yx + r1.xy;
  }
  r0.y = dot(r1.xy, float2(1.000000e+000,1.000000e+000));
  r0.y = r0.y == 0.000000;
  if (r0.y != 0) {
  r2.xy = v2.yx;
  r2.z = 1.000000000e+000;
  r3.x = 0.000000000e+000;
  while (true) {
  r0.y = v4.x < r2.y;
  r0.z = 8.281000257e-001 < r2.z;
  r0.y = r0.z ? r0.y : 0;
  r0.z = r3.x == 0.000000;
  r0.y = r0.z ? r0.y : 0;
  if (r0.y == 0) break;
  r3.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s, r2.yx, 0.000000000e+000).xyzw;
  r2.xy = -g_SMAAFilterConstants.m_OneOverWidthHeight.yx * float2(0.000000e+000,2.000000e+000) + r2.xy;
  r2.z = r3.y;
  }
  r0.y = g_SMAAFilterConstants.m_OneOverWidthHeight.x * 3.250000000e+000 + r2.y;
  r2.x = 5.000000000e-001 * r3.x;
  r2.xyzw = g_SearchTexture_NG.SampleLevel(PointSampler_s, r2.xz, 0.000000000e+000).xyzw;
  r0.z = g_SMAAFilterConstants.m_OneOverWidthHeight.x * r2.x;
  r2.x = -r0.z * 2.550000000e+002 + r0.y;
  r2.y = v3.y;
  r3.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s, r2.xy, 0.000000000e+000).xyzw;
  r4.xy = v2.wz;
  r4.z = 1.000000000e+000;
  r5.x = 0.000000000e+000;
  while (true) {
	  r0.y = r4.y < v4.y;
	  r0.z = 8.281000257e-001 < r4.z;
	  r0.y = r0.z ? r0.y : 0;
	  r0.z = r5.x == 0.000000;
	  r0.y = r0.z ? r0.y : 0;
	  if (r0.y == 0) break;
	  r5.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s, r4.yx, 0.000000000e+000).xyzw;
	  r4.xy = g_SMAAFilterConstants.m_OneOverWidthHeight.yx * float2(0.000000e+000,2.000000e+000) + r4.xy;
	  r4.z = r5.y;
  }
  r0.y = -g_SMAAFilterConstants.m_OneOverWidthHeight.x * 2.500000000e-001 + r4.y;
  r0.y = g_SMAAFilterConstants.m_OneOverWidthHeight.x * -3.000000000e+000 + r0.y;
  r4.x = r5.x * 5.000000000e-001 + 5.000000000e-001;
  r4.xyzw = g_SearchTexture_NG.SampleLevel(PointSampler_s, r4.xz, 0.000000000e+000).xyzw;
  r0.z = g_SMAAFilterConstants.m_OneOverWidthHeight.x * r4.x;
  r2.z = r0.z * 2.550000000e+002 + r0.y;
  r0.yz = r2.xz / g_SMAAFilterConstants.m_OneOverWidthHeight.xx;
  
	// w1 is partial v1.wz, so w1.xx = v1.zz
	r0.yz = -w1.xx + r0.yz;
  r1.zw = sqrt(abs(r0.yz));
  r2.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s, r2.zy, 0.000000000e+000, int2(0, 0)).yxzw;
  r0.w = g_SMAAFilterConstants.m_SubsampleIndices.y;
  r2.x = r3.x;
  r2.xy = float2(4.000000e+000,4.000000e+000) * r2.xy;
  r2.x = round(r2.x * 0.5) * 2;
  r2.y = round(r2.y * 0.5) * 2;
  r1.zw = r2.xy * float2(1.600000e+001,1.600000e+001) + r1.zw;
  r2.xy = r1.zw * float2(6.250000e-003,1.785714e-003) + float2(3.125000e-003,8.928571e-004);
  r2.z = r0.w * 1.428571492e-001 + r2.y;
  r2.xyzw = g_AreaTexture_NG.SampleLevel(LinearSampler_s, r2.xz, 0.000000000e+000).xyzw;
  r3.xz = g_SMAAFilterConstants.m_OneOverWidthHeight.xx * r0.yz;
  r3.y = 0.000000000e+000;
  r3.xyz = v1.xyx + r3.xyz;
  r4.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s, r3.xy, 0.000000000e+000, int2(0, 0)).xyzw;
  r0.y = abs(r0.y) < abs(r0.z);
  r5.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s, r3.xy, 0.000000000e+000, int2(0, 0)).yxzw;
  r5.x = r4.x;
  r0.zw = saturate(float2(1.250000e+000,1.250000e+000) + -r5.xy);
  r0.zw = r2.xy * r0.zw;
  r1.z = r0.y ? r0.z : r2.x;
  r1.w = r0.y ? r0.w : r2.y;
  r2.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s, r3.zy, 0.000000000e+000, int2(0, 0)).xyzw;
  r3.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s, r3.zy, 0.000000000e+000, int2(0, 0)).yxzw;
  r3.x = r2.x;
  r2.xy = saturate(float2(1.250000e+000,1.250000e+000) + -r3.xy);
  r1.zw = r2.xy * r1.zw;
  o0.x = r0.y ? r0.z : r1.z;
  o0.y = r0.y ? r0.w : r1.w;
  } else {
  o0.xy = r1.xy;
  r0.x = 0.000000000e+000;
  }
  } else {
  o0.xy = float2(0.000000e+000,0.000000e+000);
  }
  r0.x = 0.000000000e+000 < r0.x;
  if (r0.x != 0) {
  r0.xy = v3.xy;
  r0.z = 1.000000000e+000;
  r1.x = 0.000000000e+000;
  while (true) {
  r0.w = v4.z < r0.y;
  r2.x = 8.281000257e-001 < r0.z;
  r0.w = r0.w ? r2.x : 0;
  r2.x = r1.x == 0.000000;
  r0.w = r0.w ? r2.x : 0;
  if (r0.w == 0) break;
  r1.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s, r0.xy, 0.000000000e+000).yxzw;
  r0.xy = -g_SMAAFilterConstants.m_OneOverWidthHeight.xy * float2(0.000000e+000,2.000000e+000) + r0.xy;
  r0.z = r1.y;
  }
  r0.y = g_SMAAFilterConstants.m_OneOverWidthHeight.y * 3.250000000e+000 + r0.y;
  r0.x = 5.000000000e-001 * r1.x;
  r1.xyzw = g_SearchTexture_NG.SampleLevel(PointSampler_s, r0.xz, 0.000000000e+000).xyzw;
  r0.x = g_SMAAFilterConstants.m_OneOverWidthHeight.y * r1.x;
  r0.x = -r0.x * 2.550000000e+002 + r0.y;
  r0.y = v2.x;
  r1.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s, r0.yx, 0.000000000e+000).xyzw;
  r2.xy = v3.zw;
  r2.z = 1.000000000e+000;
  r3.x = 0.000000000e+000;
  while (true) {
	  r0.w = r2.y < v4.w;
	  r1.x = 8.281000257e-001 < r2.z;
	  r0.w = r0.w ? r1.x : 0;
	  r1.x = r3.x == 0.000000;
	  r0.w = r0.w ? r1.x : 0;
	  if (r0.w == 0) break;
	  r3.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s, r2.xy, 0.000000000e+000).yxzw;
	  r2.xy = g_SMAAFilterConstants.m_OneOverWidthHeight.xy * float2(0.000000e+000,2.000000e+000) + r2.xy;
	  r2.z = r3.y;
  }
  r0.w = -g_SMAAFilterConstants.m_OneOverWidthHeight.y * 2.500000000e-001 + r2.y;
  r0.w = g_SMAAFilterConstants.m_OneOverWidthHeight.y * -3.000000000e+000 + r0.w;
  r2.x = r3.x * 5.000000000e-001 + 5.000000000e-001;
  r2.xyzw = g_SearchTexture_NG.SampleLevel(PointSampler_s, r2.xz, 0.000000000e+000).xyzw;
  r1.x = g_SMAAFilterConstants.m_OneOverWidthHeight.y * r2.x;
  r0.z = r1.x * 2.550000000e+002 + r0.w;
  r0.xw = r0.xz / g_SMAAFilterConstants.m_OneOverWidthHeight.yy;
	
	// w1 is partial of v1.zw, so w1.yy = v1.ww
	r2.yz = -w1.yy + r0.xw;
  r0.xw = sqrt(abs(r2.yz));
  r3.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s, r0.yz, 0.000000000e+000, int2(0, 0)).xyzw;
  r0.y = g_SMAAFilterConstants.m_SubsampleIndices.x;
  r3.x = r1.y;
  r1.xy = float2(4.000000e+000,4.000000e+000) * r3.xy;
  r1.x = round(r1.x * 0.5) * 2;
  r1.y = round(r1.y * 0.5) * 2;
  r0.xz = r1.xy * float2(1.600000e+001,1.600000e+001) + r0.xw;
  r1.xy = r0.xz * float2(6.250000e-003,1.785714e-003) + float2(3.125000e-003,8.928571e-004);
  r1.z = r0.y * 1.428571492e-001 + r1.y;
  r0.xyzw = g_AreaTexture_NG.SampleLevel(LinearSampler_s, r1.xz, 0.000000000e+000).xyzw;
  r2.x = 0.000000000e+000;
  r1.xyz = r2.xyz * g_SMAAFilterConstants.m_OneOverWidthHeight.xyy + v1.xyy;
  r3.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s, r1.xy, 0.000000000e+000, int2(0, 0)).xyzw;
  r0.z = abs(r2.y) < abs(r2.z);
  r2.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s, r1.xy, 0.000000000e+000, int2(0, 0)).xzwy;
  r2.z = r3.y;
  r1.yw = saturate(float2(1.250000e+000,1.250000e+000) + -r2.zw);
  r1.yw = r1.yw * r0.xy;
  r0.x = r0.z ? r1.y : r0.x;
  r0.y = r0.z ? r1.w : r0.y;
  r2.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s, r1.xz, 0.000000000e+000, int2(0, 0)).xyzw;
  r3.xyzw = g_EdgesTexture_NG.SampleLevel(LinearSampler_s, r1.xz, 0.000000000e+000, int2(0, 0)).xzwy;
  r3.z = r2.y;
  r1.xz = saturate(float2(1.250000e+000,1.250000e+000) + -r3.zw);
  r0.xy = r1.xz * r0.xy;
  o0.z = r0.z ? r1.y : r0.x;
  o0.w = r0.z ? r1.w : r0.y;
  } else {
  o0.zw = float2(0.000000e+000,0.000000e+000);
  }
  return;
}