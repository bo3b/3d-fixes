// Manually fixed shader.
//  As near as I can tell, this should be using the 0th element of that array.
// 	Using the 0 element gives me the same ASM.

cbuffer Global_Constants : register(b0)
{
  float4 g_Global_DepthRes : packoffset(c0);
  float4 g_Global_DepthChannel : packoffset(c1);
  float4 g_Global_ScreenRes : packoffset(c2);
  float4 g_Global_ShadowMapRes : packoffset(c3);
  float4 g_Global_LightPositionAndRadius : packoffset(c4);
  float4 g_Global_FalloffParams : packoffset(c5);
  row_major float4x4 g_Global_InvLightProj[6] : packoffset(c6);
  row_major float4x4 g_Global_InvProjection : packoffset(c30);
  row_major float4x4 g_Global_InvView : packoffset(c34);
  row_major float4x4 g_Global_EyeViewToLightView : packoffset(c38);
  float4 g_Global_NumCascades : packoffset(c42);
  row_major float4x4 g_Global_EyeViewToLightTex[6] : packoffset(c43);
  float4 g_Global_LightData[6] : packoffset(c67);
  float4 g_Global_LightRadiusUVScale[6] : packoffset(c73);
  float4 g_Global_ViewLocation[6] : packoffset(c79);
  float4 g_Global_MapID[6] : packoffset(c85);
  float4 g_Global_ZBias[6] : packoffset(c91);
  float4 g_Global_TransformToLHS[6] : packoffset(c97);
  float g_Global_LightSize : packoffset(c103);
  float g_Global_CascadeIndex : packoffset(c103.y);
  float g_Global_EyeZFar : packoffset(c103.z);
  float g_Global_EyeZNear : packoffset(c103.w);
  float g_Global_TransitionScaleZ : packoffset(c104);
  float g_Global_InvertEyeDepth : packoffset(c104.y);
  float g_Global_SpotLight : packoffset(c104.z);
  float g_Global_LightSizeMinPercent : packoffset(c104.w);
  float g_Global_ShadowIntensity : packoffset(c105);
  float g_Global_MinWeightExponent : packoffset(c105.y);
  float g_Global_MaxWeight : packoffset(c105.z);
  float Pad : packoffset(c105.w);
}
SamplerState PointSampler_s : register(s0);
Texture2D<float> tShadowMap : register(t0);
Texture2D<float4> tDepthBuffer : register(t6);
Texture2D<float4> tStereoFixUp : register(t10);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  float2 v2 : TEXCOORD1,
  out float o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5;
  uint4 bitmask;
  r0.xy = g_Global_ScreenRes.zw * v0.xy;
  r0.zw = tStereoFixUp.Sample(PointSampler_s, float2(6.250000e-002,5.000000e-001)).xy;
  r1.x = v1.w != 1.000000;
  r1.y = v1.w + -r0.w;
  r1.y = r0.z * r1.y + v1.x;
  r1.x = r1.x ? r1.y : v1.x;
  r1.y = v1.y;
  r1.xy = r1.xy / v1.ww;
  r1.zw = r1.xy * float2(5.000000e-001,-5.000000e-001) + float2(5.000000e-001,5.000000e-001);
  r2.x = g_Global_NumCascades.x == 1.000000;
  r0.x = r2.x ? r1.z : r0.x;
  r0.y = r2.x ? r1.w : r0.y;
  r1.zw = g_Global_ScreenRes.xy * g_Global_DepthRes.zw;
  r0.xy = r1.zw * r0.xy;
  r1.z = g_Global_DepthChannel.x == 1.000000;
  if (r1.z != 0) {
  r1.z = tDepthBuffer.SampleLevel(PointSampler_s, r0.xy, 0.000000000e+000).x;
  } else {
  r1.w = g_Global_DepthChannel.y == 1.000000;
  if (r1.w != 0) {
  r1.z = tDepthBuffer.SampleLevel(PointSampler_s, r0.xy, 0.000000000e+000).y;
  } else {
  r1.w = g_Global_DepthChannel.z == 1.000000;
  if (r1.w != 0) {
  r1.z = tDepthBuffer.SampleLevel(PointSampler_s, r0.xy, 0.000000000e+000).z;
  } else {
  r1.z = tDepthBuffer.SampleLevel(PointSampler_s, r0.xy, 0.000000000e+000).w;
  }
  }
  }
  r0.x = 0.000000e+000 != g_Global_InvertEyeDepth;
  r0.y = 1.000000000e+000 + -r1.z;
  r0.x = r0.x ? r0.y : r1.z;
  r0.xy = r0.xx * g_Global_InvProjection._m22_m23 + g_Global_InvProjection._m32_m33;
  r0.x = r0.x / r0.y;
  r1.xy = r1.xy * abs(r0.xx);
  r0.y = abs(r0.x) != 1.000000;
  r0.w = abs(r0.x) + -r0.w;
  r0.z = -r0.z * r0.w + r1.x;
  r0.y = r0.y ? r0.z : r1.x;
  r0.zw = g_Global_InvProjection._m10_m11 * r1.yy;
  r0.yz = r0.yy * g_Global_InvProjection._m00_m01 + r0.zw;
  r0.yz = g_Global_InvProjection._m30_m31 + r0.yz;
  r0.w = g_Global_EyeViewToLightView._m12 * r0.z;
  r0.w = r0.y * g_Global_EyeViewToLightView._m02 + r0.w;
  r0.w = r0.x * g_Global_EyeViewToLightView._m22 + r0.w;
  r0.w = g_Global_EyeViewToLightView._m32 + r0.w;
  r1.xyzw = g_Global_EyeViewToLightTex[0]._m10_m11_m12_m13 * r0.zzzz;
  r1.xyzw = r0.yyyy * g_Global_EyeViewToLightTex[0]._m00_m01_m02_m03 + r1.xyzw;
  r1.xyzw = r0.xxxx * g_Global_EyeViewToLightTex[0]._m20_m21_m22_m23 + r1.xyzw;
  r1.xyzw = g_Global_EyeViewToLightTex[0]._m30_m31_m33_m32 + r1.xywz;
  r2.x = g_Global_SpotLight == 1.000000;
  r1.xyz = r1.xyw / r1.zzz;
  r1.x = r2.x ? r1.x : r1.x;
  r1.y = r2.x ? r1.y : r1.y;
  r1.z = r2.x ? r1.z : r1.w;
  r1.z = g_Global_ZBias[0].x + r1.z;
  r1.z = min(r1.z, 1.000000000e+000);
  r0.w = g_Global_TransformToLHS[0].x + r0.w;
  r1.w = g_Global_TransformToLHS[0].y * r0.w;
  r2.x = r0.w * g_Global_TransformToLHS[0].y + -g_Global_LightData[0].x;
  r2.x = r2.x / r1.w;
  r2.xyzw = g_Global_LightData[0].zwzw * r2.xxxx;
  r3.xy = -g_Global_ShadowMapRes.zw + r1.xy;
  r3.y = tShadowMap.SampleLevel(PointSampler_s, r3.xy, 0.000000000e+000).x;
  r3.z = r3.y < r1.z;
  r3.x = 1.000000000e+000;
  r3.xy = (int2)r3.xy & (int2)r3.zz;
  r4.xyzw = g_Global_ShadowMapRes.zwzw * float4(-1.000000e+000,0.000000e+000,-1.000000e+000,1.000000e+000) + r1.xyxy;
  r3.w = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r4.x = r3.w < r1.z;
  r5.y = r3.y + r3.w;
  r5.x = r3.z ? 2.000000000e+000 : 1.000000000e+000;
  r3.x = r4.x ? r5.x : r3.x;
  r3.y = r4.x ? r5.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r4.xyzw = g_Global_ShadowMapRes.zwzw * float4(0.000000e+000,-1.000000e+000,0.000000e+000,1.000000e+000) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r1.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r4.xyzw = g_Global_ShadowMapRes.zwzw * float4(1.000000e+000,-1.000000e+000,1.000000e+000,0.000000e+000) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.zw = g_Global_ShadowMapRes.zw + r1.xy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r3.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r2.xyzw = g_Global_LightRadiusUVScale[0].xyxy * r2.xyzw;
  r4.xyzw = r2.zwzw * float4(-7.924740e-001,-7.799620e-001,-5.808590e-001,-2.087770e-001) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r4.xyzw = r2.zwzw * float4(-9.203470e-001,-4.114200e-001,-5.154270e-001,8.999900e-002) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r4.xyzw = r2.zwzw * float4(-6.148560e-001,3.865780e-001,-5.379500e-001,7.166660e-001) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r4.xyzw = r2.zwzw * float4(-8.119450e-001,9.052100e-001,-1.394390e-001,-8.886680e-001) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r4.xyzw = r2.zwzw * float4(-4.546340e-001,-7.079380e-001,-1.463360e-001,-2.591940e-001) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r4.xyzw = r2.zwzw * float4(-2.112190e-001,1.148410e-001,-2.611470e-001,5.884880e-001) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r4.xyzw = r2.zwzw * float4(-4.209420e-001,9.912720e-001,3.591720e-001,-6.337170e-001) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r4.xyzw = r2.zwzw * float4(1.694690e-001,-9.972530e-001,4.357130e-001,-2.508320e-001) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r4.xyzw = r2.zwzw * float4(3.205970e-001,2.910550e-001,1.255840e-001,4.690700e-002) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r4.xyzw = r2.zwzw * float4(3.805700e-002,6.254770e-001,8.720050e-001,-9.270000e-001) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r4.xyzw = r2.zwzw * float4(7.431560e-001,-5.051730e-001,7.364420e-001,-1.897340e-001) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r4.xyzw = r2.zwzw * float4(8.435620e-001,3.570360e-001,5.685900e-001,1.165500e-001) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r4.xyzw = r2.zwzw * float4(8.654130e-001,7.637260e-001,5.457630e-001,7.302160e-001) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r4.xyzw = r2.zwzw * float4(-9.754020e-001,-7.113900e-002,-8.839080e-001,2.178720e-001) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r4.xyzw = r2.zwzw * float4(-8.845180e-001,5.680410e-001,6.259300e-002,-5.085300e-001) + r1.xyxy;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r3.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r3.w = r3.z < r1.z;
  r4.y = r3.y + r3.z;
  r4.x = 1.000000000e+000 + r3.x;
  r3.x = r3.w ? r4.x : r3.x;
  r3.y = r3.w ? r4.y : r3.y;
  r2.xyzw = r2.xyzw * float4(1.168900e-002,3.263950e-001,5.077970e-001,-9.165620e-001) + r1.xyxy;
  r2.x = tShadowMap.SampleLevel(PointSampler_s, r2.xy, 0.000000000e+000).x;
  r2.y = r2.x < r1.z;
  r4.y = r3.y + r2.x;
  r4.x = 1.000000000e+000 + r3.x;
  r2.x = r2.y ? r4.x : r3.x;
  r2.y = r2.y ? r4.y : r3.y;
  r2.z = tShadowMap.SampleLevel(PointSampler_s, r2.zw, 0.000000000e+000).x;
  r2.w = r2.z < r1.z;
  r3.y = r2.y + r2.z;
  r3.x = 1.000000000e+000 + r2.x;
  r2.x = r2.w ? r3.x : r2.x;
  r2.y = r2.w ? r3.y : r2.y;
  r2.z = r2.x == 0.000000;
  if (r2.z != 0) {
  r2.w = 1.000000000e+000;
  }
  if (r2.z == 0) {
  r2.x = r2.y / r2.x;
  r2.y = r1.x * 2.000000000e+000 + -1.000000000e+000;
  r2.z = 1.000000000e+000 + -r1.y;
  r2.z = r2.z * 2.000000000e+000 + -1.000000000e+000;
  r3.xy = g_Global_InvLightProj[0]._m12_m13 * r2.zz;
  r2.yz = r2.yy * g_Global_InvLightProj[0]._m02_m03 + r3.xy;
  r2.xy = r2.xx * g_Global_InvLightProj[0]._m22_m23 + r2.yz;
  r2.xy = g_Global_InvLightProj[0]._m32_m33 + r2.xy;
  r2.x = r2.x / r2.y;
  r2.x = g_Global_TransformToLHS[0].x + r2.x;
  r2.x = g_Global_TransformToLHS[0].y * r2.x;
  r3.xyzw = g_Global_LightSizeMinPercent * g_Global_LightData[0].zwzw;
  r0.w = r0.w * g_Global_TransformToLHS[0].y + -r2.x;
  r0.w = r0.w / r2.x;
  r2.x = g_Global_MaxWeight * r0.w;
  r4.xyzw = -g_Global_LightData[0].zwzw * g_Global_LightSizeMinPercent + g_Global_LightData[0].zwzw;
  r3.xyzw = r2.xxxx * r4.xyzw + r3.xyzw;
  r3.xyzw = g_Global_LightData[0].xxxx * r3.xyzw;
  r3.xyzw = r3.xyzw / r1.wwww;
  r3.xyzw = g_Global_LightRadiusUVScale[0].xyxy * r3.xyzw;
  r4.xyzw = float4(-3.159520e+000,1.530470e-001,-1.385487e+000,-6.960969e-001) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r2.xy = r4.yw + -r4.xz;
  r4.xy = r0.ww * g_Global_MaxWeight + -r4.xz;
  r2.xy = float2(1.000000e+000,1.000000e+000) / r2.xy;
  r2.xy = saturate(r4.xy * r2.xy);
  r4.xy = r2.xy * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r2.xy = r2.xy * r2.xy;
  r2.xy = r4.xy * r2.xy;
  r4.xyzw = r3.zwzw * float4(-7.924740e-001,-7.799620e-001,-5.808590e-001,-2.087770e-001) + r1.xyxy;
  r1.w = tShadowMap.SampleLevel(PointSampler_s, r4.xy, 0.000000000e+000).x;
  r1.w = r1.w + -r1.z;
  r1.w = saturate(r1.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = tShadowMap.SampleLevel(PointSampler_s, r4.zw, 0.000000000e+000).x;
  r2.z = r2.z + -r1.z;
  r2.z = saturate(r2.z * g_Global_TransitionScaleZ + 1.000000000e+000);
  r2.z = r2.z * r2.y;
  r1.w = r1.w * r2.x + r2.z;
  r2.x = r2.x + r2.y;
  r4.xyzw = float4(-6.944386e+000,1.166673e-002,-1.068621e+000,-9.344955e-001) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r2.yz = r4.yw + -r4.xz;
  r4.xy = r0.ww * g_Global_MaxWeight + -r4.xz;
  r2.yz = float2(1.000000e+000,1.000000e+000) / r2.yz;
  r2.yz = saturate(r4.xy * r2.yz);
  r4.xy = r2.yz * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r2.yz = r2.yz * r2.yz;
  r4.zw = r4.xy * r2.yz;
  r5.xyzw = r3.zwzw * float4(-9.203470e-001,-4.114200e-001,-5.154270e-001,8.999900e-002) + r1.xyxy;
  r5.x = tShadowMap.SampleLevel(PointSampler_s, r5.xy, 0.000000000e+000).x;
  r5.x = r5.x + -r1.z;
  r5.x = saturate(r5.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.x * r4.z + r1.w;
  r2.x = r4.x * r2.y + r2.x;
  r2.y = tShadowMap.SampleLevel(PointSampler_s, r5.zw, 0.000000000e+000).x;
  r2.y = r2.y + -r1.z;
  r2.y = saturate(r2.y * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r2.y * r4.w + r1.w;
  r2.x = r4.y * r2.z + r2.x;
  r4.xyzw = float4(-1.869256e+000,-4.613916e-001,-3.266772e+000,-1.582637e-001) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r2.yz = r4.yw + -r4.xz;
  r4.xy = r0.ww * g_Global_MaxWeight + -r4.xz;
  r2.yz = float2(1.000000e+000,1.000000e+000) / r2.yz;
  r2.yz = saturate(r4.xy * r2.yz);
  r4.xy = r2.yz * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r2.yz = r2.yz * r2.yz;
  r4.zw = r4.xy * r2.yz;
  r5.xyzw = r3.zwzw * float4(-6.148560e-001,3.865780e-001,-5.379500e-001,7.166660e-001) + r1.xyxy;
  r5.x = tShadowMap.SampleLevel(PointSampler_s, r5.xy, 0.000000000e+000).x;
  r5.x = r5.x + -r1.z;
  r5.x = saturate(r5.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.x * r4.z + r1.w;
  r2.x = r4.x * r2.y + r2.x;
  r2.y = tShadowMap.SampleLevel(PointSampler_s, r5.zw, 0.000000000e+000).x;
  r2.y = r2.y + -r1.z;
  r2.y = saturate(r2.y * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r2.y * r4.w + r1.w;
  r2.x = r4.y * r2.z + r2.x;
  r4.xyzw = float4(-2.210886e+000,2.821451e-001,-3.315322e+000,-1.527390e-001) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r2.yz = r4.yw + -r4.xz;
  r4.xy = r0.ww * g_Global_MaxWeight + -r4.xz;
  r2.yz = float2(1.000000e+000,1.000000e+000) / r2.yz;
  r2.yz = saturate(r4.xy * r2.yz);
  r4.xy = r2.yz * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r2.yz = r2.yz * r2.yz;
  r4.zw = r4.xy * r2.yz;
  r5.xyzw = r3.zwzw * float4(-8.119450e-001,9.052100e-001,-1.394390e-001,-8.886680e-001) + r1.xyxy;
  r5.x = tShadowMap.SampleLevel(PointSampler_s, r5.xy, 0.000000000e+000).x;
  r5.x = r5.x + -r1.z;
  r5.x = saturate(r5.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.x * r4.z + r1.w;
  r2.x = r4.x * r2.y + r2.x;
  r2.y = tShadowMap.SampleLevel(PointSampler_s, r5.zw, 0.000000000e+000).x;
  r2.y = r2.y + -r1.z;
  r2.y = saturate(r2.y * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r2.y * r4.w + r1.w;
  r2.x = r4.y * r2.z + r2.x;
  r4.xyzw = float4(-2.656072e+000,-2.492236e-001,-5.097387e-001,-1.748309e+000) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r2.yz = r4.yw + -r4.xz;
  r4.xy = r0.ww * g_Global_MaxWeight + -r4.xz;
  r2.yz = float2(1.000000e+000,1.000000e+000) / r2.yz;
  r2.yz = saturate(r4.xy * r2.yz);
  r4.xy = r2.yz * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r2.yz = r2.yz * r2.yz;
  r4.zw = r4.xy * r2.yz;
  r5.xyzw = r3.zwzw * float4(-4.546340e-001,-7.079380e-001,-1.463360e-001,-2.591940e-001) + r1.xyxy;
  r5.x = tShadowMap.SampleLevel(PointSampler_s, r5.xy, 0.000000000e+000).x;
  r5.x = r5.x + -r1.z;
  r5.x = saturate(r5.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.x * r4.z + r1.w;
  r2.x = r4.x * r2.y + r2.x;
  r2.y = tShadowMap.SampleLevel(PointSampler_s, r5.zw, 0.000000000e+000).x;
  r2.y = r2.y + -r1.z;
  r2.y = saturate(r2.y * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r2.y * r4.w + r1.w;
  r2.x = r4.y * r2.z + r2.x;
  r4.xyzw = float4(-3.967268e-001,-2.056369e+000,-1.489358e+000,-6.352503e-001) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r2.yz = r4.yw + -r4.xz;
  r4.xy = r0.ww * g_Global_MaxWeight + -r4.xz;
  r2.yz = float2(1.000000e+000,1.000000e+000) / r2.yz;
  r2.yz = saturate(r4.xy * r2.yz);
  r4.xy = r2.yz * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r2.yz = r2.yz * r2.yz;
  r4.zw = r4.xy * r2.yz;
  r5.xyzw = r3.zwzw * float4(-2.112190e-001,1.148410e-001,-2.611470e-001,5.884880e-001) + r1.xyxy;
  r5.x = tShadowMap.SampleLevel(PointSampler_s, r5.xy, 0.000000000e+000).x;
  r5.x = r5.x + -r1.z;
  r5.x = saturate(r5.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.x * r4.z + r1.w;
  r2.x = r4.x * r2.y + r2.x;
  r2.y = tShadowMap.SampleLevel(PointSampler_s, r5.zw, 0.000000000e+000).x;
  r2.y = r2.y + -r1.z;
  r2.y = saturate(r2.y * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r2.y * r4.w + r1.w;
  r2.x = r4.y * r2.z + r2.x;
  r4.xyzw = float4(-3.700013e+000,1.069457e-001,-1.880573e+000,-4.571493e-001) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r2.yz = r4.yw + -r4.xz;
  r4.xy = r0.ww * g_Global_MaxWeight + -r4.xz;
  r2.yz = float2(1.000000e+000,1.000000e+000) / r2.yz;
  r2.yz = saturate(r4.xy * r2.yz);
  r4.xy = r2.yz * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r2.yz = r2.yz * r2.yz;
  r4.zw = r4.xy * r2.yz;
  r5.xyzw = r3.zwzw * float4(-4.209420e-001,9.912720e-001,3.591720e-001,-6.337170e-001) + r1.xyxy;
  r5.x = tShadowMap.SampleLevel(PointSampler_s, r5.xy, 0.000000000e+000).x;
  r5.x = r5.x + -r1.z;
  r5.x = saturate(r5.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.x * r4.z + r1.w;
  r2.x = r4.x * r2.y + r2.x;
  r2.y = tShadowMap.SampleLevel(PointSampler_s, r5.zw, 0.000000000e+000).x;
  r2.y = r2.y + -r1.z;
  r2.y = saturate(r2.y * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r2.y * r4.w + r1.w;
  r2.x = r4.y * r2.z + r2.x;
  r4.xyzw = float4(-6.435970e+000,1.656755e-002,-1.007971e+000,-9.920728e-001) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r2.yz = r4.yw + -r4.xz;
  r4.xy = r0.ww * g_Global_MaxWeight + -r4.xz;
  r2.yz = float2(1.000000e+000,1.000000e+000) / r2.yz;
  r2.yz = saturate(r4.xy * r2.yz);
  r4.xy = r2.yz * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r2.yz = r2.yz * r2.yz;
  r4.zw = r4.xy * r2.yz;
  r5.xyzw = r3.zwzw * float4(1.694690e-001,-9.972530e-001,4.357130e-001,-2.508320e-001) + r1.xyxy;
  r5.x = tShadowMap.SampleLevel(PointSampler_s, r5.xy, 0.000000000e+000).x;
  r5.x = r5.x + -r1.z;
  r5.x = saturate(r5.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.x * r4.z + r1.w;
  r2.x = r4.x * r2.y + r2.x;
  r2.y = tShadowMap.SampleLevel(PointSampler_s, r5.zw, 0.000000000e+000).x;
  r2.y = r2.y + -r1.z;
  r2.y = saturate(r2.y * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r2.y * r4.w + r1.w;
  r2.x = r4.y * r2.z + r2.x;
  r4.xyzw = float4(-8.185983e-001,-1.207536e+000,-2.076581e-001,-2.899068e+000) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r2.yz = r4.yw + -r4.xz;
  r4.xy = r0.ww * g_Global_MaxWeight + -r4.xz;
  r2.yz = float2(1.000000e+000,1.000000e+000) / r2.yz;
  r2.yz = saturate(r4.xy * r2.yz);
  r4.xy = r2.yz * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r2.yz = r2.yz * r2.yz;
  r4.zw = r4.xy * r2.yz;
  r5.xyzw = r3.zwzw * float4(3.205970e-001,2.910550e-001,1.255840e-001,4.690700e-002) + r1.xyxy;
  r5.x = tShadowMap.SampleLevel(PointSampler_s, r5.xy, 0.000000000e+000).x;
  r5.x = r5.x + -r1.z;
  r5.x = saturate(r5.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.x * r4.z + r1.w;
  r2.x = r4.x * r2.y + r2.x;
  r2.y = tShadowMap.SampleLevel(PointSampler_s, r5.zw, 0.000000000e+000).x;
  r2.y = r2.y + -r1.z;
  r2.y = saturate(r2.y * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r2.y * r4.w + r1.w;
  r2.x = r4.y * r2.z + r2.x;
  r4.xyzw = float4(-1.421336e+000,-6.743057e-001,-1.874704e+000,3.478730e-001) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r2.yz = r4.yw + -r4.xz;
  r4.xy = r0.ww * g_Global_MaxWeight + -r4.xz;
  r2.yz = float2(1.000000e+000,1.000000e+000) / r2.yz;
  r2.yz = saturate(r4.xy * r2.yz);
  r4.xy = r2.yz * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r2.yz = r2.yz * r2.yz;
  r4.zw = r4.xy * r2.yz;
  r5.xyzw = r3.zwzw * float4(3.805700e-002,6.254770e-001,8.720050e-001,-9.270000e-001) + r1.xyxy;
  r5.x = tShadowMap.SampleLevel(PointSampler_s, r5.xy, 0.000000000e+000).x;
  r5.x = r5.x + -r1.z;
  r5.x = saturate(r5.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.x * r4.z + r1.w;
  r2.x = r4.x * r2.y + r2.x;
  r2.y = tShadowMap.SampleLevel(PointSampler_s, r5.zw, 0.000000000e+000).x;
  r2.y = r2.y + -r1.z;
  r2.y = saturate(r2.y * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r2.y * r4.w + r1.w;
  r2.x = r4.y * r2.z + r2.x;
  r4.xyzw = float4(-3.301860e+000,-1.542502e-001,-2.061845e+000,-3.949979e-001) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r2.yz = r4.yw + -r4.xz;
  r4.xy = r0.ww * g_Global_MaxWeight + -r4.xz;
  r2.yz = float2(1.000000e+000,1.000000e+000) / r2.yz;
  r2.yz = saturate(r4.xy * r2.yz);
  r4.xy = r2.yz * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r2.yz = r2.yz * r2.yz;
  r4.zw = r4.xy * r2.yz;
  r5.xyzw = r3.zwzw * float4(7.431560e-001,-5.051730e-001,7.364420e-001,-1.897340e-001) + r1.xyxy;
  r5.x = tShadowMap.SampleLevel(PointSampler_s, r5.xy, 0.000000000e+000).x;
  r5.x = r5.x + -r1.z;
  r5.x = saturate(r5.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.x * r4.z + r1.w;
  r2.x = r4.x * r2.y + r2.x;
  r2.y = tShadowMap.SampleLevel(PointSampler_s, r5.zw, 0.000000000e+000).x;
  r2.y = r2.y + -r1.z;
  r2.y = saturate(r2.y * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r2.y * r4.w + r1.w;
  r2.x = r4.y * r2.z + r2.x;
  r4.xyzw = float4(-3.573613e+000,-1.265671e-001,-1.252956e+000,-7.848499e-001) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r2.yz = r4.yw + -r4.xz;
  r4.xy = r0.ww * g_Global_MaxWeight + -r4.xz;
  r2.yz = float2(1.000000e+000,1.000000e+000) / r2.yz;
  r2.yz = saturate(r4.xy * r2.yz);
  r4.xy = r2.yz * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r2.yz = r2.yz * r2.yz;
  r4.zw = r4.xy * r2.yz;
  r5.xyzw = r3.zwzw * float4(8.435620e-001,3.570360e-001,5.685900e-001,1.165500e-001) + r1.xyxy;
  r5.x = tShadowMap.SampleLevel(PointSampler_s, r5.xy, 0.000000000e+000).x;
  r5.x = r5.x + -r1.z;
  r5.x = saturate(r5.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.x * r4.z + r1.w;
  r2.x = r4.x * r2.y + r2.x;
  r2.y = tShadowMap.SampleLevel(PointSampler_s, r5.zw, 0.000000000e+000).x;
  r2.y = r2.y + -r1.z;
  r2.y = saturate(r2.y * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r2.y * r4.w + r1.w;
  r2.x = r4.y * r2.z + r2.x;
  r4.xyzw = float4(-2.696965e+000,2.069146e-001,-3.500330e+000,-1.334767e-001) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r2.yz = r4.yw + -r4.xz;
  r4.xy = r0.ww * g_Global_MaxWeight + -r4.xz;
  r2.yz = float2(1.000000e+000,1.000000e+000) / r2.yz;
  r2.yz = saturate(r4.xy * r2.yz);
  r4.xy = r2.yz * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r2.yz = r2.yz * r2.yz;
  r4.zw = r4.xy * r2.yz;
  r5.xyzw = r3.zwzw * float4(8.654130e-001,7.637260e-001,5.457630e-001,7.302160e-001) + r1.xyxy;
  r5.x = tShadowMap.SampleLevel(PointSampler_s, r5.xy, 0.000000000e+000).x;
  r5.x = r5.x + -r1.z;
  r5.x = saturate(r5.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.x * r4.z + r1.w;
  r2.x = r4.x * r2.y + r2.x;
  r2.y = tShadowMap.SampleLevel(PointSampler_s, r5.zw, 0.000000000e+000).x;
  r2.y = r2.y + -r1.z;
  r2.y = saturate(r2.y * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r2.y * r4.w + r1.w;
  r2.x = r4.y * r2.z + r2.x;
  r4.xyzw = float4(-5.505877e+000,-3.210432e-002,-3.479769e+000,-1.354855e-001) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r2.yz = r4.yw + -r4.xz;
  r4.xy = r0.ww * g_Global_MaxWeight + -r4.xz;
  r2.yz = float2(1.000000e+000,1.000000e+000) / r2.yz;
  r2.yz = saturate(r4.xy * r2.yz);
  r4.xy = r2.yz * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r2.yz = r2.yz * r2.yz;
  r4.zw = r4.xy * r2.yz;
  r5.xyzw = r3.zwzw * float4(-9.754020e-001,-7.113900e-002,-8.839080e-001,2.178720e-001) + r1.xyxy;
  r5.x = tShadowMap.SampleLevel(PointSampler_s, r5.xy, 0.000000000e+000).x;
  r5.x = r5.x + -r1.z;
  r5.x = saturate(r5.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.x * r4.z + r1.w;
  r2.x = r4.x * r2.y + r2.x;
  r2.y = tShadowMap.SampleLevel(PointSampler_s, r5.zw, 0.000000000e+000).x;
  r2.y = r2.y + -r1.z;
  r2.y = saturate(r2.y * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r2.y * r4.w + r1.w;
  r2.x = r4.y * r2.z + r2.x;
  r4.xyzw = float4(-4.287428e+000,7.205104e-002,-1.036134e+000,-9.647486e-001) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r2.yz = r4.yw + -r4.xz;
  r4.xy = r0.ww * g_Global_MaxWeight + -r4.xz;
  r2.yz = float2(1.000000e+000,1.000000e+000) / r2.yz;
  r2.yz = saturate(r4.xy * r2.yz);
  r4.xy = r2.yz * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r2.yz = r2.yz * r2.yz;
  r4.zw = r4.xy * r2.yz;
  r5.xyzw = r3.zwzw * float4(-8.845180e-001,5.680410e-001,6.259300e-002,-5.085300e-001) + r1.xyxy;
  r5.x = tShadowMap.SampleLevel(PointSampler_s, r5.xy, 0.000000000e+000).x;
  r5.x = r5.x + -r1.z;
  r5.x = saturate(r5.x * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r5.x * r4.z + r1.w;
  r2.x = r4.x * r2.y + r2.x;
  r2.y = tShadowMap.SampleLevel(PointSampler_s, r5.zw, 0.000000000e+000).x;
  r2.y = r2.y + -r1.z;
  r2.y = saturate(r2.y * g_Global_TransitionScaleZ + 1.000000000e+000);
  r1.w = r2.y * r4.w + r1.w;
  r2.x = r4.y * r2.z + r2.x;
  r4.xyzw = float4(-5.704734e-001,-1.614385e+000,-4.385998e+000,6.740203e-002) * g_Global_MinWeightExponent;
  r4.xyzw = exp2(r4.xyzw);
  r2.yz = r4.yw + -r4.xz;
  r4.xy = r0.ww * g_Global_MaxWeight + -r4.xz;
  r2.yz = float2(1.000000e+000,1.000000e+000) / r2.yz;
  r2.yz = saturate(r4.xy * r2.yz);
  r4.xy = r2.yz * float2(-2.000000e+000,-2.000000e+000) + float2(3.000000e+000,3.000000e+000);
  r2.yz = r2.yz * r2.yz;
  r4.zw = r4.xy * r2.yz;
  r3.xyzw = r3.xyzw * float4(1.168900e-002,3.263950e-001,5.077970e-001,-9.165620e-001) + r1.xyxy;
  r0.w = tShadowMap.SampleLevel(PointSampler_s, r3.xy, 0.000000000e+000).x;
  r0.w = r0.w + -r1.z;
  r0.w = saturate(r0.w * g_Global_TransitionScaleZ + 1.000000000e+000);
  r0.w = r0.w * r4.z + r1.w;
  r1.x = r4.x * r2.y + r2.x;
  r1.y = tShadowMap.SampleLevel(PointSampler_s, r3.zw, 0.000000000e+000).x;
  r1.y = r1.y + -r1.z;
  r1.y = saturate(r1.y * g_Global_TransitionScaleZ + 1.000000000e+000);
  r0.w = r1.y * r4.w + r0.w;
  r1.x = r4.y * r2.z + r1.x;
  r2.w = r0.w / r1.x;
  }
  r0.w = g_Global_FalloffParams.w == 1.000000;
  r1.xyzw = g_Global_InvView._m10_m11_m12_m13 * r0.zzzz;
  r1.xyzw = r0.yyyy * g_Global_InvView._m00_m01_m02_m03 + r1.xyzw;
  r1.xyzw = r0.xxxx * g_Global_InvView._m20_m21_m22_m23 + r1.xyzw;
  r1.xyzw = g_Global_InvView._m30_m31_m32_m33 + r1.xyzw;
  r0.xyz = r1.xyz / r1.www;
  r0.xyz = g_Global_LightPositionAndRadius.xyz + -r0.xyz;
  r0.xyz = g_Global_LightPositionAndRadius.www * r0.xyz;
  r0.x = dot(r0.xyz, r0.xyz);
  r0.x = sqrt(r0.x);
  r0.x = r0.x * g_Global_FalloffParams.x + g_Global_FalloffParams.y;
  r0.x = max(r0.x, 0.000000000e+000);
  r0.x = -r0.x * r0.x + 1.000000000e+000;
  r0.x = max(r0.x, 0.000000000e+000);
  r0.x = log2(r0.x);
  r0.x = g_Global_FalloffParams.z * r0.x;
  r0.x = exp2(r0.x);
  r0.y = -1.000000000e+000 + r2.w;
  r0.x = r0.x * r0.y + 1.000000000e+000;
  r0.x = r0.w ? r0.x : r2.w;
  r0.y = 1.000000000e+000 + -r0.x;
  r0.x = g_Global_ShadowIntensity * r0.y + r0.x;
  r0.y = r0.x == 1.000000;
  if (r0.y != 0) discard;
  o0.x = r0.x;
  return;
}