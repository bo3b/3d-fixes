// Manually fixed shader.
//	needed to be const[] to make it icb, and not 4x4, just float4

//	The fxc generates bad code for the bitmask, where it makes a -0 (0x80000000)
//	which the -1 is then ignored.  It's not handling uint properly.
//	By inverting the starting mask, I can get exact matching ASM.

Texture2D<float4> StereoParams : register(t125);

void main(
  uint v0 : SV_VertexID0,
  out float4 o0 : SV_Position0)
{
  const float4 icb[] = { { -1.000000, 0, 0, 0},
                              { -1.000000, 0, 0, 0},
                              { -1.000000, 0, 0, 0},
                              { 1.000000, 0, 0, 0},
                              { 1.000000, 0, 0, 0},
                              { -1.000000, 0, 0, 0},
                              { 1.000000, 0, 0, 0},
                              { 1.000000, 0, 0, 0} };
  float4 r0;
  uint4 bitmask;
  
  // was backwards shift
  r0.x = (uint)v0.x << 1;
  
  o0.x = icb[r0.x].x;
  // bitmask.x = (((1 << 31)-1) << 1) & 0xffffffff;
	bitmask.x = ((~(-1 << 31)) << 1) & 0xffffffff;
  r0.x = (((uint)v0.x << 1) & bitmask.x) | ((uint)1 & ~bitmask.x);
  o0.y = icb[r0.x].x;
  o0.zw = float2(0.000000e+000,1.000000e+000);
  return;
}