
cbuffer _Globals : register(b0)
{
  float k_fInvLightRadius : packoffset(c0);
  row_major float3x4 k_mCubeProjector_LightTransform : packoffset(c1);
  row_major float3x4 k_mDirectional_ObjectToTex : packoffset(c4);
  row_major float4x4 k_mSpotProjector_LightTransform : packoffset(c7);
  float4 k_vSpotProjector_TanXYRadiusZW : packoffset(c11);
  row_major float3x4 k_mWorldToVolume : packoffset(c12);
  float3 k_vDirectional_Dir : packoffset(c15);
  float4 k_vObjectLightColor : packoffset(c16);
  float3 k_vObjectSpaceLightPos : packoffset(c17);
  float4 k_vSpecularColor : packoffset(c18);
  float4 k_vSpotProjector_ClipFar : packoffset(c19);
  float4 k_vSpotProjector_ClipNear : packoffset(c20);
  float3 k_vHalfDims : packoffset(c21);
  float4 k_vShadowMapParams : packoffset(c22);
  float4 k_vShadowMapParams2 : packoffset(c23);
  row_major float4x4 k_mShadowMapMatrix : packoffset(c24);
  float4 k_vShadowCascadeOffsetX : packoffset(c28);
  float4 k_vShadowCascadeOffsetZ : packoffset(c29);
  float k_fStaticLightVolume_Mip : packoffset(c30);
  float4 k_vShadowSplitDistSquared : packoffset(c31);
  float4 k_vShadowSplitDistSelect : packoffset(c32);
  float4 k_vShadowMoveX : packoffset(c33);
  float4 k_vShadowMoveY : packoffset(c34);
  float4 k_vShadowMoveZ : packoffset(c35);
  float4 k_vShadowScaleXY : packoffset(c36);
  float4 k_vShadowScaleX : packoffset(c37);
  float4 k_vShadowScaleY : packoffset(c38);
  float4 k_vShadowScaleZ : packoffset(c39);
  float3 k_vLightBleed_Offset : packoffset(c40);
  float4 k_vStaticLightVolume_PivotContrast : packoffset(c41);
  float k_fLightLayer : packoffset(c42);
  row_major float3x4 k_mViewToLight : packoffset(c43);
  row_major float4x4 k_mObjectToClip : packoffset(c46);
  row_major float3x4 k_mObjectToView : packoffset(c50);
  row_major float3x4 k_mObjectToWorld : packoffset(c53);
  float4 k_vObjectColor : packoffset(c56);
  float3 k_vObjectSpaceEyePos : packoffset(c57);
  row_major float4x4 k_mPrevObjectToClip : packoffset(c58);
  row_major float3x4 k_mPrevObjectToView : packoffset(c62);
  row_major float3x4 k_mPrevObjectToWorld : packoffset(c65);
}

Texture2D<float4> StereoParams : register(t125);

void main(
  float3 v0 : SV_POSITION0,
  out float4 o0 : SV_POSITION0)
{
  float4 r0,r1;
  uint4 bitmask;
  r0.xy = k_vHalfDims.xy * k_vSpotProjector_TanXYRadiusZW.ww;
  r1.xyz = float3(0.000000e+000,0.000000e+000,1.000000e+000) + v0.xyz;
  r0.z = k_vSpotProjector_TanXYRadiusZW.w;
  r0.xyz = r1.xyz * r0.xyz;
  r1.xy = k_vHalfDims.xy * k_vHalfDims.zz;
  r1.z = -k_vHalfDims.z;
  r1.xyz = v0.xyz * r1.xyz;
  r0.w = v0.z < -5.000000000e-001;
  r0.xyz = r0.www ? r1.xyz : r0.xyz;
  r0.w = 5.000000000e-001 < v0.z;
  r1.xyz = k_vSpotProjector_TanXYRadiusZW.xyz * v0.xyz;
  r0.xyz = r0.www ? r1.xyz : r0.xyz;
  r0.w = 1.000000000e+000;
  r1.x = dot(k_mObjectToWorld._m00_m01_m02_m03, r0.xyzw);
  r1.y = dot(k_mObjectToWorld._m10_m11_m12_m13, r0.xyzw);
  r1.z = dot(k_mObjectToWorld._m20_m21_m22_m23, r0.xyzw);
  r1.w = 1.000000000e+000;
  o0.x = dot(k_mObjectToClip._m00_m01_m02_m03, r1.xyzw);
  o0.y = dot(k_mObjectToClip._m10_m11_m12_m13, r1.xyzw);
  o0.z = dot(k_mObjectToClip._m20_m21_m22_m23, r1.xyzw);
  o0.w = dot(k_mObjectToClip._m30_m31_m32_m33, r1.xyzw);
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20546
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float k_fInvLightRadius;           // Offset:    0 Size:     4 [unused]
//   row_major float3x4 k_mCubeProjector_LightTransform;// Offset:   16 Size:    48 [unused]
//   row_major float3x4 k_mDirectional_ObjectToTex;// Offset:   64 Size:    48 [unused]
//   row_major float4x4 k_mSpotProjector_LightTransform;// Offset:  112 Size:    64 [unused]
//   float4 k_vSpotProjector_TanXYRadiusZW;// Offset:  176 Size:    16
//   row_major float3x4 k_mWorldToVolume;// Offset:  192 Size:    48 [unused]
//   float3 k_vDirectional_Dir;         // Offset:  240 Size:    12 [unused]
//   float4 k_vObjectLightColor;        // Offset:  256 Size:    16 [unused]
//   float3 k_vObjectSpaceLightPos;     // Offset:  272 Size:    12 [unused]
//   float4 k_vSpecularColor;           // Offset:  288 Size:    16 [unused]
//   float4 k_vSpotProjector_ClipFar;   // Offset:  304 Size:    16 [unused]
//   float4 k_vSpotProjector_ClipNear;  // Offset:  320 Size:    16 [unused]
//   float3 k_vHalfDims;                // Offset:  336 Size:    12
//   float4 k_vShadowMapParams;         // Offset:  352 Size:    16 [unused]
//   float4 k_vShadowMapParams2;        // Offset:  368 Size:    16 [unused]
//   row_major float4x4 k_mShadowMapMatrix;// Offset:  384 Size:    64 [unused]
//   float4 k_vShadowCascadeOffsetX;    // Offset:  448 Size:    16 [unused]
//   float4 k_vShadowCascadeOffsetZ;    // Offset:  464 Size:    16 [unused]
//   float k_fStaticLightVolume_Mip;    // Offset:  480 Size:     4 [unused]
//   float4 k_vShadowSplitDistSquared;  // Offset:  496 Size:    16 [unused]
//   float4 k_vShadowSplitDistSelect;   // Offset:  512 Size:    16 [unused]
//   float4 k_vShadowMoveX;             // Offset:  528 Size:    16 [unused]
//   float4 k_vShadowMoveY;             // Offset:  544 Size:    16 [unused]
//   float4 k_vShadowMoveZ;             // Offset:  560 Size:    16 [unused]
//   float4 k_vShadowScaleXY;           // Offset:  576 Size:    16 [unused]
//   float4 k_vShadowScaleX;            // Offset:  592 Size:    16 [unused]
//   float4 k_vShadowScaleY;            // Offset:  608 Size:    16 [unused]
//   float4 k_vShadowScaleZ;            // Offset:  624 Size:    16 [unused]
//   float3 k_vLightBleed_Offset;       // Offset:  640 Size:    12 [unused]
//   float4 k_vStaticLightVolume_PivotContrast;// Offset:  656 Size:    16 [unused]
//   float k_fLightLayer;               // Offset:  672 Size:     4 [unused]
//   row_major float3x4 k_mViewToLight; // Offset:  688 Size:    48 [unused]
//   row_major float4x4 k_mObjectToClip;// Offset:  736 Size:    64
//   row_major float3x4 k_mObjectToView;// Offset:  800 Size:    48 [unused]
//   row_major float3x4 k_mObjectToWorld;// Offset:  848 Size:    48
//   float4 k_vObjectColor;             // Offset:  896 Size:    16 [unused]
//   float3 k_vObjectSpaceEyePos;       // Offset:  912 Size:    12 [unused]
//   row_major float4x4 k_mPrevObjectToClip;// Offset:  928 Size:    64 [unused]
//   row_major float3x4 k_mPrevObjectToView;// Offset:  992 Size:    48 [unused]
//   row_major float3x4 k_mPrevObjectToWorld;// Offset: 1040 Size:    48 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// $Globals                          cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyz         0     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[56], immediateIndexed
dcl_input v0.xyz
dcl_output_siv o0.xyzw, position
dcl_temps 2
mul r0.xy, cb0[11].wwww, cb0[21].xyxx
add r1.xyz, v0.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
mov r0.z, cb0[11].w
mul r0.xyz, r0.xyzx, r1.xyzx
mul r1.xy, cb0[21].zzzz, cb0[21].xyxx
mov r1.z, -cb0[21].z
mul r1.xyz, r1.xyzx, v0.xyzx
lt r0.w, v0.z, l(-0.500000)
movc r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
lt r0.w, l(0.500000), v0.z
mul r1.xyz, v0.xyzx, cb0[11].xyzx
movc r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
mov r0.w, l(1.000000)
dp4 r1.x, cb0[53].xyzw, r0.xyzw
dp4 r1.y, cb0[54].xyzw, r0.xyzw
dp4 r1.z, cb0[55].xyzw, r0.xyzw
mov r1.w, l(1.000000)
dp4 o0.x, cb0[46].xyzw, r1.xyzw
dp4 o0.y, cb0[47].xyzw, r1.xyzw
dp4 o0.z, cb0[48].xyzw, r1.xyzw
dp4 o0.w, cb0[49].xyzw, r1.xyzw
ret 
// Approximately 22 instruction slots used
 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
