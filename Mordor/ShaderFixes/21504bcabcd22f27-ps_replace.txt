
cbuffer _Globals : register(b0)
{
  float DefaultHeight : packoffset(c0) = float(1.000000e+002);
  float DefaultWidth : packoffset(c0.y) = float(1.000000e+002);

  struct
  {
    float3 m_Position;
  } MaterialVertexDef_Rigid : packoffset(c1);


  struct
  {
    float3 m_Position;
    float4 m_Weights;
    float4 m_Indices;
  } MaterialVertexDef_Skeletal : packoffset(c2);

  float k_fIntensityScale : packoffset(c5) = float(1.000000e+000);
  float k_fPanNormalU : packoffset(c5.y) = float(0.000000e+000);
  float k_fPanNormalV : packoffset(c5.z) = float(0.000000e+000);
  float k_fPanSampleGreenU : packoffset(c5.w) = float(0.000000e+000);
  float k_fPanSampleGreenV : packoffset(c6) = float(0.000000e+000);
  float k_fPanSampleRedU : packoffset(c6.y) = float(0.000000e+000);
  float k_fPanSampleRedV : packoffset(c6.z) = float(0.000000e+000);
  float k_fRefractStrength : packoffset(c6.w) = float(5.000000e-002);
  float k_fTextureBlend : packoffset(c7) = float(5.000000e-001);
  float2 k_vNormalTile : packoffset(c7.y) = float2(1.000000e+000,1.000000e+000);
  float2 k_vSampleGreenTile : packoffset(c8) = float2(1.000000e+000,1.000000e+000);
  float2 k_vSampleRedTile : packoffset(c8.z) = float2(1.000000e+000,1.000000e+000);
  float3 k_vSlopeBlend : packoffset(c9) = float3(-1.000000e+000,-1.000000e+000,1.000000e+000);
  float k_fTime : packoffset(c9.w);
  row_major float3x4 k_mDirectional_ObjectToTex : packoffset(c10);
  row_major float4x4 k_mObjectToClip : packoffset(c13);
  row_major float3x4 k_mObjectToWorld : packoffset(c17);
  row_major float4x4 k_mShadowMapMatrix : packoffset(c20);
  float3 k_vDirectional_Dir : packoffset(c24);
  float4 k_vFullViewPlane : packoffset(c25);
  float4 k_vHDRLuminanceWeights : packoffset(c26);
  float3 k_vHalfDims : packoffset(c27);
  float4 k_vObjectColor : packoffset(c28);
  float4 k_vObjectLightColor : packoffset(c29);
  float3 k_vObjectSpaceEyePos : packoffset(c30);
  float2 k_vPerspOrthoMask : packoffset(c31);
  float2 k_vScene_TexCoordScale : packoffset(c31.z);
  float4 k_vShadowCascadeOffsetZ : packoffset(c32);
  float4 k_vShadowMapParams2 : packoffset(c33);
}
SamplerState sAttenuationTextureSampler_s : register(s0);
SamplerState sNormalMapSampler_s : register(s1);
SamplerState sPackedTextureSampler_s : register(s2);
SamplerState sDeferredNormalsSampler_s : register(s3);
SamplerState sDepthMapSampler_s : register(s4);
SamplerState sShadowMaskSampler_s : register(s5);
Texture2D<float4> tAttenuationTexture : register(t0);
Texture2D<float4> tNormalMap : register(t1);
Texture2D<float4> tPackedTexture : register(t2);
Texture2D<float4> tDeferredNormals : register(t3);
Texture2D<float4> tDepthMap : register(t4);
Texture2D<float4> tShadowMask : register(t5);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : SV_POSITION0,
  float4 v1 : TEXCOORD0,
  float3 v2 : TEXCOORD1,
  float2 v3 : TEXCOORD2,
  float4 v4 : TEXCOORD3,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4;
  uint4 bitmask;
  r0.xy = v1.xy / v1.ww;
  r1.xyzw = tDeferredNormals.Sample(sDeferredNormalsSampler_s, r0.xy).xyzw;
  r0.z = -5.019608140e-001 + r1.w;
  r1.xyz = r1.xyz * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r0.z = -r0.z < 0.000000000e+000;
  if (r0.z != 0) discard;
  r2.z = tDepthMap.Sample(sDepthMapSampler_s, r0.xy).x;
  r0.x = tShadowMask.Sample(sShadowMaskSampler_s, r0.xy).x;
  r0.yz = v3.xy / v1.ww;
  r2.w = 1.000000000e+000;
  r0.w = dot(r2.zw, k_vPerspOrthoMask.xy);
  r2.xy = r0.ww * r0.yz;
  
float4 stereo = StereoParams.Load(0);
r2.x -= stereo.x * (r2.z - stereo.y)*v4.z/2;  
  
  r3.x = saturate(dot(k_mDirectional_ObjectToTex._m00_m01_m02_m03, r2.xyzw));
  r3.y = saturate(dot(k_mDirectional_ObjectToTex._m10_m11_m12_m13, r2.xyzw));
  r3.z = saturate(dot(k_mDirectional_ObjectToTex._m20_m21_m22_m23, r2.xyzw));
  r2.xyz = k_fTime * k_fPanNormalU;
  r0.yz = r3.xy * k_vNormalTile.xy + r2.xy;
  r0.yz = tNormalMap.Sample(sNormalMapSampler_s, r0.yz).yw;
  r4.xy = r0.yz * float2(2.000000e+000,2.000000e+000) + float2(-1.000000e+000,-1.000000e+000);
  r4.z = -r4.y;
  r0.yz = r4.xz * k_fRefractStrength + r3.xy;
  r2.w = k_fTime * k_fPanSampleGreenV;
  r2.xy = r0.yz * k_vSampleGreenTile.xy + r2.zw;
  r0.w = tPackedTexture.Sample(sPackedTextureSampler_s, r2.xy).y;
  r2.xy = k_vSampleRedTile.xy * r0.yz;
  r4.w = tPackedTexture.Sample(sPackedTextureSampler_s, r0.yz).w;
  r0.yz = k_fTime * k_fPanSampleRedU + r2.xy;
  r0.y = tPackedTexture.Sample(sPackedTextureSampler_s, r0.yz).x;
  r0.z = r0.w + -r0.y;
  r4.xyz = k_fTextureBlend * r0.zzz + r0.yyy;
  r3.w = 0.000000000e+000;
  r2.xyzw = tAttenuationTexture.Sample(sAttenuationTextureSampler_s, r3.wz).xyzw;
  r2.xyzw = r4.xyzw * r2.xyzw;
  r0.yzw = k_vObjectColor.xyz * r2.xyz;
  r0.yzw = k_vObjectColor.www * r0.yzw;
  r0.yzw = r0.yzw * r2.www;
  r0.yzw = k_fIntensityScale * r0.yzw;
  r1.w = dot(r1.xyz, r1.xyz);
  r1.w = rsqrt(r1.w);
  r1.xyz = r1.xyz * r1.www;
  r2.x = dot(k_mObjectToWorld._m00_m01_m02, -k_vDirectional_Dir.xyz);
  r2.y = dot(k_mObjectToWorld._m10_m11_m12, -k_vDirectional_Dir.xyz);
  r2.z = dot(k_mObjectToWorld._m20_m21_m22, -k_vDirectional_Dir.xyz);
  r1.x = dot(r2.xyz, r1.xyz);
  r1.x = -k_vSlopeBlend.x + r1.x;
  r1.y = k_vSlopeBlend.y + -k_vSlopeBlend.x;
  r1.x = saturate(r1.x / r1.y);
  r0.yzw = r1.xxx * r0.yzw;
  r1.x = 1.000000000e+000 + -k_vObjectLightColor.w;
  r0.x = saturate(r1.x + r0.x);
  r0.xyz = r0.yzw * r0.xxx;
  o0.w = dot(r0.xyz, k_vHDRLuminanceWeights.xyz);
  o0.xyz = r0.xyz;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20546
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float DefaultHeight;               // Offset:    0 Size:     4 [unused]
//      = 0x42c80000 
//   float DefaultWidth;                // Offset:    4 Size:     4 [unused]
//      = 0x42c80000 
//   
//   struct MaterialVertex_Rigid
//   {
//       
//       float3 m_Position;             // Offset:   16
//
//   } MaterialVertexDef_Rigid;         // Offset:   16 Size:    12 [unused]
//   
//   struct MaterialVertex_Skeletal
//   {
//       
//       float3 m_Position;             // Offset:   32
//       float4 m_Weights;              // Offset:   48
//       float4 m_Indices;              // Offset:   64
//
//   } MaterialVertexDef_Skeletal;      // Offset:   32 Size:    48 [unused]
//   float k_fIntensityScale;           // Offset:   80 Size:     4
//      = 0x3f800000 
//   float k_fPanNormalU;               // Offset:   84 Size:     4
//      = 0x00000000 
//   float k_fPanNormalV;               // Offset:   88 Size:     4
//      = 0x00000000 
//   float k_fPanSampleGreenU;          // Offset:   92 Size:     4
//      = 0x00000000 
//   float k_fPanSampleGreenV;          // Offset:   96 Size:     4
//      = 0x00000000 
//   float k_fPanSampleRedU;            // Offset:  100 Size:     4
//      = 0x00000000 
//   float k_fPanSampleRedV;            // Offset:  104 Size:     4
//      = 0x00000000 
//   float k_fRefractStrength;          // Offset:  108 Size:     4
//      = 0x3d4ccccd 
//   float k_fTextureBlend;             // Offset:  112 Size:     4
//      = 0x3f000000 
//   float2 k_vNormalTile;              // Offset:  116 Size:     8
//      = 0x3f800000 0x3f800000 
//   float2 k_vSampleGreenTile;         // Offset:  128 Size:     8
//      = 0x3f800000 0x3f800000 
//   float2 k_vSampleRedTile;           // Offset:  136 Size:     8
//      = 0x3f800000 0x3f800000 
//   float3 k_vSlopeBlend;              // Offset:  144 Size:    12
//      = 0xbf800000 0xbf800000 0x3f800000 
//   float k_fTime;                     // Offset:  156 Size:     4
//   row_major float3x4 k_mDirectional_ObjectToTex;// Offset:  160 Size:    48
//   row_major float4x4 k_mObjectToClip;// Offset:  208 Size:    64 [unused]
//   row_major float3x4 k_mObjectToWorld;// Offset:  272 Size:    48
//   row_major float4x4 k_mShadowMapMatrix;// Offset:  320 Size:    64 [unused]
//   float3 k_vDirectional_Dir;         // Offset:  384 Size:    12
//   float4 k_vFullViewPlane;           // Offset:  400 Size:    16 [unused]
//   float4 k_vHDRLuminanceWeights;     // Offset:  416 Size:    16
//   float3 k_vHalfDims;                // Offset:  432 Size:    12 [unused]
//   float4 k_vObjectColor;             // Offset:  448 Size:    16
//   float4 k_vObjectLightColor;        // Offset:  464 Size:    16
//   float3 k_vObjectSpaceEyePos;       // Offset:  480 Size:    12 [unused]
//   float2 k_vPerspOrthoMask;          // Offset:  496 Size:     8
//   float2 k_vScene_TexCoordScale;     // Offset:  504 Size:     8 [unused]
//   float4 k_vShadowCascadeOffsetZ;    // Offset:  512 Size:    16 [unused]
//   float4 k_vShadowMapParams2;        // Offset:  528 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// sAttenuationTextureSampler        sampler      NA          NA    0        1
// sNormalMapSampler                 sampler      NA          NA    1        1
// sPackedTextureSampler             sampler      NA          NA    2        1
// sDeferredNormalsSampler           sampler      NA          NA    3        1
// sDepthMapSampler                  sampler      NA          NA    4        1
// sShadowMaskSampler                sampler      NA          NA    5        1
// tAttenuationTexture               texture  float4          2d    0        1
// tNormalMap                        texture  float4          2d    1        1
// tPackedTexture                    texture  float4          2d    2        1
// tDeferredNormals                  texture  float4          2d    3        1
// tDepthMap                         texture  float4          2d    4        1
// tShadowMask                       texture  float4          2d    5        1
// $Globals                          cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[32], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps linear v1.xyw
dcl_input_ps linear v3.xy
dcl_output o0.xyzw
dcl_temps 5
div r0.xy, v1.xyxx, v1.wwww
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r0.xyxx, t3.xyzw, s3
add r0.z, r1.w, l(-0.501961)
mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
lt r0.z, -r0.z, l(0.000000)
discard_nz r0.z
sample_indexable(texture2d)(float,float,float,float) r2.z, r0.xyxx, t4.yzxw, s4
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t5.xyzw, s5
div r0.yz, v3.xxyx, v1.wwww
mov r2.w, l(1.000000)
dp2 r0.w, r2.zwzz, cb0[31].xyxx
mul r2.xy, r0.yzyy, r0.wwww
dp4_sat r3.x, cb0[10].xyzw, r2.xyzw
dp4_sat r3.y, cb0[11].xyzw, r2.xyzw
dp4_sat r3.z, cb0[12].xyzw, r2.xyzw
mul r2.xyz, cb0[5].yzwy, cb0[9].wwww
mad r0.yz, r3.xxyx, cb0[7].yyzy, r2.xxyx
sample_indexable(texture2d)(float,float,float,float) r0.yz, r0.yzyy, t1.xywz, s1
mad r4.xy, r0.yzyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mov r4.z, -r4.y
mad r0.yz, r4.xxzx, cb0[6].wwww, r3.xxyx
mul r2.w, cb0[6].x, cb0[9].w
mad r2.xy, r0.yzyy, cb0[8].xyxx, r2.zwzz
sample_indexable(texture2d)(float,float,float,float) r0.w, r2.xyxx, t2.xzwy, s2
mul r2.xy, r0.yzyy, cb0[8].zwzz
sample_indexable(texture2d)(float,float,float,float) r4.w, r0.yzyy, t2.xyzw, s2
mad r0.yz, cb0[9].wwww, cb0[6].yyzy, r2.xxyx
sample_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t2.yxzw, s2
add r0.z, -r0.y, r0.w
mad r4.xyz, cb0[7].xxxx, r0.zzzz, r0.yyyy
mov r3.w, l(0)
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r3.wzww, t0.xyzw, s0
mul r2.xyzw, r2.xyzw, r4.xyzw
mul r0.yzw, r2.xxyz, cb0[28].xxyz
mul r0.yzw, r0.yyzw, cb0[28].wwww
mul r0.yzw, r2.wwww, r0.yyzw
mul r0.yzw, r0.yyzw, cb0[5].xxxx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
dp3 r2.x, cb0[17].xyzx, -cb0[24].xyzx
dp3 r2.y, cb0[18].xyzx, -cb0[24].xyzx
dp3 r2.z, cb0[19].xyzx, -cb0[24].xyzx
dp3 r1.x, r2.xyzx, r1.xyzx
add r1.x, r1.x, -cb0[9].x
add r1.y, -cb0[9].x, cb0[9].y
div_sat r1.x, r1.x, r1.y
mul r0.yzw, r0.yyzw, r1.xxxx
add r1.x, -cb0[29].w, l(1.000000)
add_sat r0.x, r0.x, r1.x
mul r0.xyz, r0.xxxx, r0.yzwy
dp3 o0.w, r0.xyzx, cb0[26].xyzx
mov o0.xyz, r0.xyzx
ret 
// Approximately 54 instruction slots used
 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Recompiled ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20789
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float DefaultHeight;               // Offset:    0 Size:     4 [unused]
//      = 0x42c80000 
//   float DefaultWidth;                // Offset:    4 Size:     4 [unused]
//      = 0x42c80000 
//   
//   struct <unnamed>
//   {
//       
//       float3 m_Position;             // Offset:   16
//
//   } MaterialVertexDef_Rigid;         // Offset:   16 Size:    12 [unused]
//   
//   struct <unnamed>
//   {
//       
//       float3 m_Position;             // Offset:   32
//       float4 m_Weights;              // Offset:   48
//       float4 m_Indices;              // Offset:   64
//
//   } MaterialVertexDef_Skeletal;      // Offset:   32 Size:    48 [unused]
//   float k_fIntensityScale;           // Offset:   80 Size:     4
//      = 0x3f800000 
//   float k_fPanNormalU;               // Offset:   84 Size:     4
//      = 0x00000000 
//   float k_fPanNormalV;               // Offset:   88 Size:     4 [unused]
//      = 0x00000000 
//   float k_fPanSampleGreenU;          // Offset:   92 Size:     4 [unused]
//      = 0x00000000 
//   float k_fPanSampleGreenV;          // Offset:   96 Size:     4
//      = 0x00000000 
//   float k_fPanSampleRedU;            // Offset:  100 Size:     4
//      = 0x00000000 
//   float k_fPanSampleRedV;            // Offset:  104 Size:     4 [unused]
//      = 0x00000000 
//   float k_fRefractStrength;          // Offset:  108 Size:     4
//      = 0x3d4ccccd 
//   float k_fTextureBlend;             // Offset:  112 Size:     4
//      = 0x3f000000 
//   float2 k_vNormalTile;              // Offset:  116 Size:     8
//      = 0x3f800000 0x3f800000 
//   float2 k_vSampleGreenTile;         // Offset:  128 Size:     8
//      = 0x3f800000 0x3f800000 
//   float2 k_vSampleRedTile;           // Offset:  136 Size:     8
//      = 0x3f800000 0x3f800000 
//   float3 k_vSlopeBlend;              // Offset:  144 Size:    12
//      = 0xbf800000 0xbf800000 0x3f800000 
//   float k_fTime;                     // Offset:  156 Size:     4
//   row_major float3x4 k_mDirectional_ObjectToTex;// Offset:  160 Size:    48
//   row_major float4x4 k_mObjectToClip;// Offset:  208 Size:    64 [unused]
//   row_major float3x4 k_mObjectToWorld;// Offset:  272 Size:    48
//   row_major float4x4 k_mShadowMapMatrix;// Offset:  320 Size:    64 [unused]
//   float3 k_vDirectional_Dir;         // Offset:  384 Size:    12
//   float4 k_vFullViewPlane;           // Offset:  400 Size:    16 [unused]
//   float4 k_vHDRLuminanceWeights;     // Offset:  416 Size:    16
//   float3 k_vHalfDims;                // Offset:  432 Size:    12 [unused]
//   float4 k_vObjectColor;             // Offset:  448 Size:    16
//   float4 k_vObjectLightColor;        // Offset:  464 Size:    16
//   float3 k_vObjectSpaceEyePos;       // Offset:  480 Size:    12 [unused]
//   float2 k_vPerspOrthoMask;          // Offset:  496 Size:     8
//   float2 k_vScene_TexCoordScale;     // Offset:  504 Size:     8 [unused]
//   float4 k_vShadowCascadeOffsetZ;    // Offset:  512 Size:    16 [unused]
//   float4 k_vShadowMapParams2;        // Offset:  528 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// sAttenuationTextureSampler_s      sampler      NA          NA    0        1
// sNormalMapSampler_s               sampler      NA          NA    1        1
// sPackedTextureSampler_s           sampler      NA          NA    2        1
// sDeferredNormalsSampler_s         sampler      NA          NA    3        1
// sDepthMapSampler_s                sampler      NA          NA    4        1
// sShadowMaskSampler_s              sampler      NA          NA    5        1
// tAttenuationTexture               texture  float4          2d    0        1
// tNormalMap                        texture  float4          2d    1        1
// tPackedTexture                    texture  float4          2d    2        1
// tDeferredNormals                  texture  float4          2d    3        1
// tDepthMap                         texture  float4          2d    4        1
// tShadowMask                       texture  float4          2d    5        1
// _Globals                          cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[32], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps linear v1.xyw
dcl_input_ps linear v3.xy
dcl_output o0.xyzw
dcl_temps 6
div r0.xy, v1.xyxx, v1.wwww
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r0.xyxx, t3.xyzw, s3
add r0.z, r1.w, l(-0.501961)
lt r0.z, -r0.z, l(0.000000)
discard_nz r0.z
mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r2.z, r0.xyxx, t4.yzxw, s4
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t5.xyzw, s5
div r0.yz, v3.xxyx, v1.wwww
mov r2.w, l(1.000000)
dp2 r0.w, r2.zwzz, cb0[31].xyxx
mul r2.xy, r0.yzyy, r0.wwww
dp4_sat r3.x, cb0[10].xyzw, r2.xyzw
dp4_sat r3.y, cb0[11].xyzw, r2.xyzw
dp4_sat r2.y, cb0[12].xyzw, r2.xyzw
mul r4.x, cb0[5].y, cb0[9].w
mad r0.yz, r3.xxyx, cb0[7].yyzy, r4.xxxx
sample_indexable(texture2d)(float,float,float,float) r0.yz, r0.yzyy, t1.xywz, s1
mad r5.xy, r0.yzyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mov r5.z, -r5.y
mad r0.yz, r5.xxzx, cb0[6].wwww, r3.xxyx
mul r4.yz, cb0[6].xxyx, cb0[9].wwww
mad r3.xyzw, r0.yzyz, cb0[8].xyzw, r4.xyzz
sample_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t2.xzwy, s2
sample_indexable(texture2d)(float,float,float,float) r4.w, r0.yzyy, t2.xyzw, s2
sample_indexable(texture2d)(float,float,float,float) r0.y, r3.zwzz, t2.yxzw, s2
add r0.z, -r0.y, r0.w
mad r4.xyz, cb0[7].xxxx, r0.zzzz, r0.yyyy
mov r2.x, l(0)
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r2.xyxx, t0.xyzw, s0
mul r2.xyzw, r2.xyzw, r4.xyzw
mul r0.yzw, r2.xxyz, cb0[28].xxyz
mul r0.yzw, r0.yyzw, cb0[28].wwww
mul r0.yzw, r2.wwww, r0.yyzw
mul r0.yzw, r0.yyzw, cb0[5].xxxx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
dp3 r2.x, cb0[17].xyzx, -cb0[24].xyzx
dp3 r2.y, cb0[18].xyzx, -cb0[24].xyzx
dp3 r2.z, cb0[19].xyzx, -cb0[24].xyzx
dp3 r1.x, r2.xyzx, r1.xyzx
add r1.x, r1.x, -cb0[9].x
add r1.y, -cb0[9].x, cb0[9].y
div_sat r1.x, r1.x, r1.y
mul r0.yzw, r0.yyzw, r1.xxxx
add r0.x, r0.x, -cb0[29].w
add_sat r0.x, r0.x, l(1.000000)
mul r0.xyz, r0.xxxx, r0.yzwy
dp3 o0.w, r0.xyzx, cb0[26].xyzx
mov o0.xyz, r0.xyzx
ret 
// Approximately 52 instruction slots used
 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
