
cbuffer _Globals : register(b0)
{
  float DefaultHeight : packoffset(c0) = float(1.000000e+002);
  float DefaultWidth : packoffset(c0.y) = float(1.000000e+002);

  struct
  {
    float3 m_Position;
    float3 m_Normal;
    float2 m_TexCoord;
    float3 m_Tangent;
    float3 m_Binormal;
    float4 m_Color;
  } MaterialVertexDef_Rigid : packoffset(c1);


  struct
  {
    float3 m_Position;
    float3 m_Normal;
    float2 m_TexCoord;
    float3 m_Tangent;
    float3 m_Binormal;
    float4 m_Color;
    float4 m_Weights;
    float4 m_Indices;
  } MaterialVertexDef_Skeletal : packoffset(c7);

  int WorldEdit_AlphaRef : packoffset(c15) = int(0.000000e+000);
  int WorldEdit_RenderType : packoffset(c15.y) = int(2.802597e-045);
  float k_fOffsetNormalU : packoffset(c15.z) = float(0.000000e+000);
  float k_fOffsetNormalV : packoffset(c15.w) = float(0.000000e+000);
  float k_fPanNormalU : packoffset(c16) = float(0.000000e+000);
  float k_fPanNormalV : packoffset(c16.y) = float(0.000000e+000);
  float3 k_vDiffuseTile : packoffset(c17) = float3(1.000000e+000,1.000000e+000,0.000000e+000);
  float3 k_vNormalTile : packoffset(c18) = float3(1.000000e+000,1.000000e+000,0.000000e+000);
  float3 k_vRefractStrength : packoffset(c19) = float3(1.000000e-001,1.000000e-001,0.000000e+000);
  float k_fTime : packoffset(c19.w);
  row_major float4x4 k_mObjectToClip : packoffset(c20);
  row_major float3x4 k_mObjectToWorld : packoffset(c24);
  float4 k_vFogMieA : packoffset(c27);
  float4 k_vFogMieB : packoffset(c28);
  float4 k_vFogMieC : packoffset(c29);
  float4 k_vFogRayleigh : packoffset(c30);
  float4 k_vFogSky : packoffset(c31);
  float4 k_vFogSunColor : packoffset(c32);
  float3 k_vFogSunDir : packoffset(c33);
  float4 k_vHDRLuminanceWeights : packoffset(c34);
  float4 k_vObjectColor : packoffset(c35);
  float4 k_vObjectLightColor : packoffset(c36);
  float3 k_vObjectSpaceEyePos : packoffset(c37);
  float2 k_vScene_TexCoordScale : packoffset(c38);
}
SamplerState sDiffuseMapSampler_s : register(s0);
SamplerState sNormalMapSampler_s : register(s1);
Texture2D<float4> tDiffuseMap : register(t0);
Texture2D<float4> tNormalMap : register(t1);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : SV_POSITION0,
  float3 v1 : TEXCOORD0,
  float2 v2 : TEXCOORD1,
  float4 v3 : TEXCOORD2,
  float3 v4 : TEXCOORD3,
  float4 v5 : TEXCOORD4,
  float3 v6 : TEXCOORD5,
  float4 v7 : TEXCOORD6,
  float4 v8 : COLOR0,
  out float4 o0 : SV_Target0)
{
  float4 r0;
  uint4 bitmask;
  r0.xy = v2.xy * k_vNormalTile.xy + k_fOffsetNormalU;
  r0.xy = k_fTime * k_fPanNormalU + r0.xy;
  r0.xy = tNormalMap.Sample(sNormalMapSampler_s, r0.xy).yw;
  r0.xy = r0.xy * float2(2.000000e+000,2.000000e+000) + float2(-1.000000e+000,-1.000000e+000);
  r0.z = -r0.y;
  r0.xy = k_vRefractStrength.xy * r0.xz;
  r0.xy = v2.xy * k_vDiffuseTile.xy + r0.xy;
  r0.xyzw = tDiffuseMap.Sample(sDiffuseMapSampler_s, r0.xy).xyzw;
  r0.xyzw = v8.xyzw * r0.xyzw;
  r0.xyzw = v5.xyzw * r0.xyzw;
  r0.xyz = v7.www * r0.xyz;
  r0.xyz = r0.xyz * r0.www;
  o0.w = dot(r0.xyz, k_vHDRLuminanceWeights.xyz);
  o0.xyz = r0.xyz;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20546
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float DefaultHeight;               // Offset:    0 Size:     4 [unused]
//      = 0x42c80000 
//   float DefaultWidth;                // Offset:    4 Size:     4 [unused]
//      = 0x42c80000 
//   
//   struct MaterialVertex_Rigid
//   {
//       
//       float3 m_Position;             // Offset:   16
//       float3 m_Normal;               // Offset:   32
//       float2 m_TexCoord;             // Offset:   48
//       float3 m_Tangent;              // Offset:   64
//       float3 m_Binormal;             // Offset:   80
//       float4 m_Color;                // Offset:   96
//
//   } MaterialVertexDef_Rigid;         // Offset:   16 Size:    96 [unused]
//   
//   struct MaterialVertex_Skeletal
//   {
//       
//       float3 m_Position;             // Offset:  112
//       float3 m_Normal;               // Offset:  128
//       float2 m_TexCoord;             // Offset:  144
//       float3 m_Tangent;              // Offset:  160
//       float3 m_Binormal;             // Offset:  176
//       float4 m_Color;                // Offset:  192
//       float4 m_Weights;              // Offset:  208
//       float4 m_Indices;              // Offset:  224
//
//   } MaterialVertexDef_Skeletal;      // Offset:  112 Size:   128 [unused]
//   int WorldEdit_AlphaRef;            // Offset:  240 Size:     4 [unused]
//      = 0x00000000 
//   int WorldEdit_RenderType;          // Offset:  244 Size:     4 [unused]
//      = 0x00000002 
//   float k_fOffsetNormalU;            // Offset:  248 Size:     4
//      = 0x00000000 
//   float k_fOffsetNormalV;            // Offset:  252 Size:     4
//      = 0x00000000 
//   float k_fPanNormalU;               // Offset:  256 Size:     4
//      = 0x00000000 
//   float k_fPanNormalV;               // Offset:  260 Size:     4
//      = 0x00000000 
//   float3 k_vDiffuseTile;             // Offset:  272 Size:    12
//      = 0x3f800000 0x3f800000 0x00000000 
//   float3 k_vNormalTile;              // Offset:  288 Size:    12
//      = 0x3f800000 0x3f800000 0x00000000 
//   float3 k_vRefractStrength;         // Offset:  304 Size:    12
//      = 0x3dcccccd 0x3dcccccd 0x00000000 
//   float k_fTime;                     // Offset:  316 Size:     4
//   row_major float4x4 k_mObjectToClip;// Offset:  320 Size:    64 [unused]
//   row_major float3x4 k_mObjectToWorld;// Offset:  384 Size:    48 [unused]
//   float4 k_vFogMieA;                 // Offset:  432 Size:    16 [unused]
//   float4 k_vFogMieB;                 // Offset:  448 Size:    16 [unused]
//   float4 k_vFogMieC;                 // Offset:  464 Size:    16 [unused]
//   float4 k_vFogRayleigh;             // Offset:  480 Size:    16 [unused]
//   float4 k_vFogSky;                  // Offset:  496 Size:    16 [unused]
//   float4 k_vFogSunColor;             // Offset:  512 Size:    16 [unused]
//   float3 k_vFogSunDir;               // Offset:  528 Size:    12 [unused]
//   float4 k_vHDRLuminanceWeights;     // Offset:  544 Size:    16
//   float4 k_vObjectColor;             // Offset:  560 Size:    16 [unused]
//   float4 k_vObjectLightColor;        // Offset:  576 Size:    16 [unused]
//   float3 k_vObjectSpaceEyePos;       // Offset:  592 Size:    12 [unused]
//   float2 k_vScene_TexCoordScale;     // Offset:  608 Size:     8 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// sDiffuseMapSampler                sampler      NA          NA    0        1
// sNormalMapSampler                 sampler      NA          NA    1        1
// tDiffuseMap                       texture  float4          2d    0        1
// tNormalMap                        texture  float4          2d    1        1
// $Globals                          cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xy          2     NONE   float   xy  
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float      w
// COLOR                    0   xyzw        8     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[35], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v2.xy
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v7.w
dcl_input_ps linear v8.xyzw
dcl_output o0.xyzw
dcl_temps 1
mad r0.xy, v2.xyxx, cb0[18].xyxx, cb0[15].zwzz
mad r0.xy, cb0[19].wwww, cb0[16].xyxx, r0.xyxx
sample_indexable(texture2d)(float,float,float,float) r0.xy, r0.xyxx, t1.ywxz, s1
mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mov r0.z, -r0.y
mul r0.xy, r0.xzxx, cb0[19].xyxx
mad r0.xy, v2.xyxx, cb0[17].xyxx, r0.xyxx
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, r0.xyxx, t0.xyzw, s0
mul r0.xyzw, r0.xyzw, v8.xyzw
mul r0.xyzw, r0.xyzw, v5.xyzw
mul r0.xyz, r0.xyzx, v7.wwww
mul r0.xyz, r0.wwww, r0.xyzx
dp3 o0.w, r0.xyzx, cb0[34].xyzx
mov o0.xyz, r0.xyzx
ret 
// Approximately 15 instruction slots used
 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
