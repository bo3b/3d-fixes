
cbuffer _Globals : register(b0)
{
  float DefaultHeight : packoffset(c0) = float(1.000000e+002);
  float DefaultWidth : packoffset(c0.y) = float(1.000000e+002);

  struct
  {
    float3 m_Position;
    float3 m_Normal;
    float2 m_TexCoord;
    float3 m_Tangent;
    float3 m_Binormal;
    float4 m_Color;
  } MaterialVertexDef_Rigid : packoffset(c1);


  struct
  {
    float3 m_Position;
    float3 m_Normal;
    float2 m_TexCoord;
    float3 m_Tangent;
    float3 m_Binormal;
    float4 m_Color;
    float4 m_Weights;
    float4 m_Indices;
  } MaterialVertexDef_Skeletal : packoffset(c7);

  float3 k_cFireInnerColor : packoffset(c15) = float3(1.000000e+000,1.000000e-001,2.000000e-002);
  float3 k_cFireOuterColor : packoffset(c16) = float3(1.000000e+000,8.000000e-001,2.000000e-002);
  float k_fAlphaFloor : packoffset(c16.w) = float(1.000000e-002);
  float k_fFireInnerBrightness : packoffset(c17) = float(1.000000e+000);
  float k_fFireOuterBrightness : packoffset(c17.y) = float(1.000000e+000);
  float k_fStepCeil : packoffset(c17.z) = float(1.100000e+000);
  float k_fStepWidth : packoffset(c17.w) = float(1.000000e-001);
  row_major float4x4 k_mObjectToClip : packoffset(c18);
  row_major float3x4 k_mObjectToWorld : packoffset(c22);
  float4 k_vFogMieA : packoffset(c25);
  float4 k_vFogMieB : packoffset(c26);
  float4 k_vFogMieC : packoffset(c27);
  float4 k_vFogRayleigh : packoffset(c28);
  float4 k_vFogSky : packoffset(c29);
  float4 k_vFogSunColor : packoffset(c30);
  float3 k_vFogSunDir : packoffset(c31);
  float4 k_vObjectColor : packoffset(c32);
  float4 k_vObjectLightColor : packoffset(c33);
  float3 k_vObjectSpaceEyePos : packoffset(c34);
  float2 k_vScene_TexCoordScale : packoffset(c35);
}
SamplerState sDiffuseMapSampler_s : register(s0);
Texture2D<float4> tDiffuseMap : register(t0);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : SV_POSITION0,
  float3 v1 : TEXCOORD0,
  float2 v2 : TEXCOORD1,
  float4 v3 : TEXCOORD2,
  float3 v4 : TEXCOORD3,
  float4 v5 : TEXCOORD4,
  float3 v6 : TEXCOORD5,
  float4 v7 : TEXCOORD6,
  float4 v8 : COLOR0,
  out float4 o0 : SV_Target0,
  out float4 o1 : SV_Target1,
  out float4 o2 : SV_Target2,
  out float4 o3 : SV_Target3)
{
  float4 r0,r1,r2;
  uint4 bitmask;
  r0.xyzw = tDiffuseMap.Sample(sDiffuseMapSampler_s, v2.xy).xyzw;
  r1.x = -1.000000015e-001 + r0.w;
  r1.x = r1.x < 0.000000000e+000;
  if (r1.x != 0) discard;
  r0.w = v8.w + r0.w;
  r1.x = k_fStepCeil + -k_fStepWidth;
  r0.w = -r1.x + r0.w;
  r1.x = k_fStepCeil + -r1.x;
  r1.x = 1.000000e+000 / r1.x;
  r0.w = saturate(r1.x * r0.w);
  r1.x = r0.w * -2.000000000e+000 + 3.000000000e+000;
  r0.w = r0.w * r0.w;
  r1.y = r1.x * r0.w + -k_fAlphaFloor;
  r1.y = r1.y < 0.000000000e+000;
  if (r1.y != 0) discard;
  r1.y = r1.x * r0.w;
  r0.w = -r1.x * r0.w + 1.000000000e+000;
  r1.xzw = k_fFireOuterBrightness * k_cFireOuterColor.xyz;
  r2.xyz = k_cFireInnerColor.xyz * k_fFireInnerBrightness + -r1.xzw;
  r1.xyz = r1.yyy * r2.xyz + r1.xzw;
  o0.xyz = r0.www * r1.xyz + r0.xyz;
  o0.w = 1.000000000e+000;
  o1.xyzw = float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
  o2.xyzw = float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
  o3.xyzw = float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20546
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float DefaultHeight;               // Offset:    0 Size:     4 [unused]
//      = 0x42c80000 
//   float DefaultWidth;                // Offset:    4 Size:     4 [unused]
//      = 0x42c80000 
//   
//   struct MaterialVertex_Rigid
//   {
//       
//       float3 m_Position;             // Offset:   16
//       float3 m_Normal;               // Offset:   32
//       float2 m_TexCoord;             // Offset:   48
//       float3 m_Tangent;              // Offset:   64
//       float3 m_Binormal;             // Offset:   80
//       float4 m_Color;                // Offset:   96
//
//   } MaterialVertexDef_Rigid;         // Offset:   16 Size:    96 [unused]
//   
//   struct MaterialVertex_Skeletal
//   {
//       
//       float3 m_Position;             // Offset:  112
//       float3 m_Normal;               // Offset:  128
//       float2 m_TexCoord;             // Offset:  144
//       float3 m_Tangent;              // Offset:  160
//       float3 m_Binormal;             // Offset:  176
//       float4 m_Color;                // Offset:  192
//       float4 m_Weights;              // Offset:  208
//       float4 m_Indices;              // Offset:  224
//
//   } MaterialVertexDef_Skeletal;      // Offset:  112 Size:   128 [unused]
//   float3 k_cFireInnerColor;          // Offset:  240 Size:    12
//      = 0x3f800000 0x3dcccccd 0x3ca3d70a 
//   float3 k_cFireOuterColor;          // Offset:  256 Size:    12
//      = 0x3f800000 0x3f4ccccd 0x3ca3d70a 
//   float k_fAlphaFloor;               // Offset:  268 Size:     4
//      = 0x3c23d70a 
//   float k_fFireInnerBrightness;      // Offset:  272 Size:     4
//      = 0x3f800000 
//   float k_fFireOuterBrightness;      // Offset:  276 Size:     4
//      = 0x3f800000 
//   float k_fStepCeil;                 // Offset:  280 Size:     4
//      = 0x3f8ccccd 
//   float k_fStepWidth;                // Offset:  284 Size:     4
//      = 0x3dcccccd 
//   row_major float4x4 k_mObjectToClip;// Offset:  288 Size:    64 [unused]
//   row_major float3x4 k_mObjectToWorld;// Offset:  352 Size:    48 [unused]
//   float4 k_vFogMieA;                 // Offset:  400 Size:    16 [unused]
//   float4 k_vFogMieB;                 // Offset:  416 Size:    16 [unused]
//   float4 k_vFogMieC;                 // Offset:  432 Size:    16 [unused]
//   float4 k_vFogRayleigh;             // Offset:  448 Size:    16 [unused]
//   float4 k_vFogSky;                  // Offset:  464 Size:    16 [unused]
//   float4 k_vFogSunColor;             // Offset:  480 Size:    16 [unused]
//   float3 k_vFogSunDir;               // Offset:  496 Size:    12 [unused]
//   float4 k_vObjectColor;             // Offset:  512 Size:    16 [unused]
//   float4 k_vObjectLightColor;        // Offset:  528 Size:    16 [unused]
//   float3 k_vObjectSpaceEyePos;       // Offset:  544 Size:    12 [unused]
//   float2 k_vScene_TexCoordScale;     // Offset:  560 Size:     8 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// sDiffuseMapSampler                sampler      NA          NA    0        1
// tDiffuseMap                       texture  float4          2d    0        1
// $Globals                          cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
// TEXCOORD                 1   xy          2     NONE   float   xy  
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// COLOR                    0   xyzw        8     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[18], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v2.xy
dcl_input_ps linear v8.w
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 3
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v2.xyxx, t0.xyzw, s0
add r1.x, r0.w, l(-0.100000)
lt r1.x, r1.x, l(0.000000)
discard_nz r1.x
add r0.w, r0.w, v8.w
add r1.x, -cb0[17].w, cb0[17].z
add r0.w, r0.w, -r1.x
add r1.x, -r1.x, cb0[17].z
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
mul_sat r0.w, r0.w, r1.x
mad r1.x, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mad r1.y, r1.x, r0.w, -cb0[16].w
lt r1.y, r1.y, l(0.000000)
discard_nz r1.y
mul r1.y, r0.w, r1.x
mad r0.w, -r1.x, r0.w, l(1.000000)
mul r1.xzw, cb0[16].xxyz, cb0[17].yyyy
mad r2.xyz, cb0[15].xyzx, cb0[17].xxxx, -r1.xzwx
mad r1.xyz, r1.yyyy, r2.xyzx, r1.xzwx
mad o0.xyz, r0.wwww, r1.xyzx, r0.xyzx
mov o0.w, l(1.000000)
mov o1.xyzw, l(0,0,0,0)
mov o2.xyzw, l(0,0,0,0)
mov o3.xyzw, l(0,0,0,0)
ret 
// Approximately 26 instruction slots used
 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
