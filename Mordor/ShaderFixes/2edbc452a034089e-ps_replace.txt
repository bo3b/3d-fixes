
cbuffer _Globals : register(b0)
{
  row_major float4x4 k_mObjectToClip : packoffset(c0);
  row_major float3x4 k_mObjectToView : packoffset(c4);
  row_major float3x4 k_mObjectToWorld : packoffset(c7);
  float4 k_vObjectColor : packoffset(c10);
  float3 k_vObjectSpaceEyePos : packoffset(c11);
  row_major float4x4 k_mPrevObjectToClip : packoffset(c12);
  row_major float3x4 k_mPrevObjectToView : packoffset(c16);
  row_major float3x4 k_mPrevObjectToWorld : packoffset(c19);
  float k_fMaxSpecularPower : packoffset(c22) = float(6.400000e+001);
  float k_fRenderObjectID : packoffset(c22.y);
  float k_fInvLightRadius : packoffset(c22.z);
  row_major float3x4 k_mCubeProjector_LightTransform : packoffset(c23);
  row_major float3x4 k_mDirectional_ObjectToTex : packoffset(c26);
  row_major float4x4 k_mSpotProjector_LightTransform : packoffset(c29);
  float4 k_vSpotProjector_TanXYRadiusZW : packoffset(c33);
  row_major float3x4 k_mWorldToVolume : packoffset(c34);
  float3 k_vDirectional_Dir : packoffset(c37);
  float4 k_vObjectLightColor : packoffset(c38);
  float3 k_vObjectSpaceLightPos : packoffset(c39);
  float4 k_vSpecularColor : packoffset(c40);
  float4 k_vSpotProjector_ClipFar : packoffset(c41);
  float4 k_vSpotProjector_ClipNear : packoffset(c42);
  float3 k_vHalfDims : packoffset(c43);
  float4 k_vShadowMapParams : packoffset(c44);
  float4 k_vShadowMapParams2 : packoffset(c45);
  row_major float4x4 k_mShadowMapMatrix : packoffset(c46);
  float4 k_vShadowCascadeOffsetX : packoffset(c50);
  float4 k_vShadowCascadeOffsetZ : packoffset(c51);
  float k_fStaticLightVolume_Mip : packoffset(c52);
  float4 k_vShadowSplitDistSquared : packoffset(c53);
  float4 k_vShadowSplitDistSelect : packoffset(c54);
  float4 k_vShadowMoveX : packoffset(c55);
  float4 k_vShadowMoveY : packoffset(c56);
  float4 k_vShadowMoveZ : packoffset(c57);
  float4 k_vShadowScaleXY : packoffset(c58);
  float4 k_vShadowScaleX : packoffset(c59);
  float4 k_vShadowScaleY : packoffset(c60);
  float4 k_vShadowScaleZ : packoffset(c61);
  float3 k_vLightBleed_Offset : packoffset(c62);
  float4 k_vStaticLightVolume_PivotContrast : packoffset(c63);
  float k_fLightLayer : packoffset(c64);
  row_major float3x4 k_mViewToLight : packoffset(c65);
}
SamplerState sAniso4X_WRAPWRAPCLAMP_Sampler_s : register(s0);
SamplerState sAniso8X_WRAPWRAPCLAMP_Sampler_s : register(s1);
Texture2D<float4> tNormalMap : register(t0);
Texture2D<float4> tDiffuseMap : register(t1);
Texture2D<float4> tSpecularMap : register(t2);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : SV_POSITION0,
  float2 v1 : TEXCOORD0,
  float3 v2 : TEXCOORD2,
  float3 v3 : TEXCOORD3,
  float3 v4 : TEXCOORD4,
  float4 v5 : COLOR0,
  out float4 o0 : SV_Target0,
  out float4 o1 : SV_Target1,
  out float4 o2 : SV_Target2)
{
  float4 r0,r1;
  uint4 bitmask;
  r0.xy = tNormalMap.Sample(sAniso4X_WRAPWRAPCLAMP_Sampler_s, v1.xy).yw;
  r0.xy = r0.xy * float2(2.000000e+000,2.000000e+000) + float2(-1.000000e+000,-1.000000e+000);
  r0.w = -r0.x * r0.x + 1.000000000e+000;
  r0.w = -r0.y * r0.y + r0.w;
  r0.z = sqrt(r0.w);
  r1.x = dot(v2.xyz, r0.xyz);
  r1.y = dot(v3.xyz, r0.xyz);
  r1.z = dot(v4.xyz, r0.xyz);
  r0.x = dot(r1.xyz, r1.xyz);
  r0.x = rsqrt(r0.x);
  r0.xyz = r1.xyz * r0.xxx;
  o0.xyz = r0.xyz * float3(5.000000e-001,5.000000e-001,5.000000e-001) + float3(5.000000e-001,5.000000e-001,5.000000e-001);
  o0.w = k_fRenderObjectID;
  r0.xyzw = tDiffuseMap.Sample(sAniso8X_WRAPWRAPCLAMP_Sampler_s, v1.xy).xyzw;
  o1.xyz = v5.xyz * r0.xyz;
  o1.w = r0.w;
  o2.w = 0.000000000e+000;
  r0.xyz = tSpecularMap.Sample(sAniso4X_WRAPWRAPCLAMP_Sampler_s, v1.xy).xyz;
  o2.x = k_fMaxSpecularPower * r0.z;
  o2.yz = r0.yx;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20546
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   row_major float4x4 k_mObjectToClip;// Offset:    0 Size:    64 [unused]
//   row_major float3x4 k_mObjectToView;// Offset:   64 Size:    48 [unused]
//   row_major float3x4 k_mObjectToWorld;// Offset:  112 Size:    48 [unused]
//   float4 k_vObjectColor;             // Offset:  160 Size:    16 [unused]
//   float3 k_vObjectSpaceEyePos;       // Offset:  176 Size:    12 [unused]
//   row_major float4x4 k_mPrevObjectToClip;// Offset:  192 Size:    64 [unused]
//   row_major float3x4 k_mPrevObjectToView;// Offset:  256 Size:    48 [unused]
//   row_major float3x4 k_mPrevObjectToWorld;// Offset:  304 Size:    48 [unused]
//   float k_fMaxSpecularPower;         // Offset:  352 Size:     4
//      = 0x42800000 
//   float k_fRenderObjectID;           // Offset:  356 Size:     4
//   float k_fInvLightRadius;           // Offset:  360 Size:     4 [unused]
//   row_major float3x4 k_mCubeProjector_LightTransform;// Offset:  368 Size:    48 [unused]
//   row_major float3x4 k_mDirectional_ObjectToTex;// Offset:  416 Size:    48 [unused]
//   row_major float4x4 k_mSpotProjector_LightTransform;// Offset:  464 Size:    64 [unused]
//   float4 k_vSpotProjector_TanXYRadiusZW;// Offset:  528 Size:    16 [unused]
//   row_major float3x4 k_mWorldToVolume;// Offset:  544 Size:    48 [unused]
//   float3 k_vDirectional_Dir;         // Offset:  592 Size:    12 [unused]
//   float4 k_vObjectLightColor;        // Offset:  608 Size:    16 [unused]
//   float3 k_vObjectSpaceLightPos;     // Offset:  624 Size:    12 [unused]
//   float4 k_vSpecularColor;           // Offset:  640 Size:    16 [unused]
//   float4 k_vSpotProjector_ClipFar;   // Offset:  656 Size:    16 [unused]
//   float4 k_vSpotProjector_ClipNear;  // Offset:  672 Size:    16 [unused]
//   float3 k_vHalfDims;                // Offset:  688 Size:    12 [unused]
//   float4 k_vShadowMapParams;         // Offset:  704 Size:    16 [unused]
//   float4 k_vShadowMapParams2;        // Offset:  720 Size:    16 [unused]
//   row_major float4x4 k_mShadowMapMatrix;// Offset:  736 Size:    64 [unused]
//   float4 k_vShadowCascadeOffsetX;    // Offset:  800 Size:    16 [unused]
//   float4 k_vShadowCascadeOffsetZ;    // Offset:  816 Size:    16 [unused]
//   float k_fStaticLightVolume_Mip;    // Offset:  832 Size:     4 [unused]
//   float4 k_vShadowSplitDistSquared;  // Offset:  848 Size:    16 [unused]
//   float4 k_vShadowSplitDistSelect;   // Offset:  864 Size:    16 [unused]
//   float4 k_vShadowMoveX;             // Offset:  880 Size:    16 [unused]
//   float4 k_vShadowMoveY;             // Offset:  896 Size:    16 [unused]
//   float4 k_vShadowMoveZ;             // Offset:  912 Size:    16 [unused]
//   float4 k_vShadowScaleXY;           // Offset:  928 Size:    16 [unused]
//   float4 k_vShadowScaleX;            // Offset:  944 Size:    16 [unused]
//   float4 k_vShadowScaleY;            // Offset:  960 Size:    16 [unused]
//   float4 k_vShadowScaleZ;            // Offset:  976 Size:    16 [unused]
//   float3 k_vLightBleed_Offset;       // Offset:  992 Size:    12 [unused]
//   float4 k_vStaticLightVolume_PivotContrast;// Offset: 1008 Size:    16 [unused]
//   float k_fLightLayer;               // Offset: 1024 Size:     4 [unused]
//   row_major float3x4 k_mViewToLight; // Offset: 1040 Size:    48 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// sAniso4X_WRAPWRAPCLAMP_Sampler    sampler      NA          NA    0        1
// sAniso8X_WRAPWRAPCLAMP_Sampler    sampler      NA          NA    1        1
// tNormalMap                        texture  float4          2d    0        1
// tDiffuseMap                       texture  float4          2d    1        1
// tSpecularMap                      texture  float4          2d    2        1
// $Globals                          cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 2   xyz         2     NONE   float   xyz 
// TEXCOORD                 3   xyz         3     NONE   float   xyz 
// TEXCOORD                 4   xyz         4     NONE   float   xyz 
// COLOR                    0   xyzw        5     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[23], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 2
sample_indexable(texture2d)(float,float,float,float) r0.xy, v1.xyxx, t0.ywxz, s0
mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mad r0.w, -r0.x, r0.x, l(1.000000)
mad r0.w, -r0.y, r0.y, r0.w
sqrt r0.z, r0.w
dp3 r1.x, v2.xyzx, r0.xyzx
dp3 r1.y, v3.xyzx, r0.xyzx
dp3 r1.z, v4.xyzx, r0.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r1.xyzx
mad o0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mov o0.w, cb0[22].y
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t1.xyzw, s1
mul o1.xyz, r0.xyzx, v5.xyzx
mov o1.w, r0.w
mov o2.w, l(0)
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t2.xyzw, s0
mul o2.x, r0.z, cb0[22].x
mov o2.yz, r0.yyxy
ret 
// Approximately 21 instruction slots used
 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
