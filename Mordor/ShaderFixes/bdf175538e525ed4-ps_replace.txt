
cbuffer _Globals : register(b0)
{
  row_major float4x4 k_mObjectToClip : packoffset(c0);
  row_major float3x4 k_mObjectToView : packoffset(c4);
  row_major float3x4 k_mObjectToWorld : packoffset(c7);
  float4 k_vObjectColor : packoffset(c10);
  float3 k_vObjectSpaceEyePos : packoffset(c11);
  row_major float4x4 k_mPrevObjectToClip : packoffset(c12);
  row_major float3x4 k_mPrevObjectToView : packoffset(c16);
  row_major float3x4 k_mPrevObjectToWorld : packoffset(c19);
  float3 k_cEmissiveColor : packoffset(c22) = float3(1.961000e-002,2.353000e-002,2.745000e-002);
  float k_fSkyLerp : packoffset(c22.w) = float(0.000000e+000);
  float k_fHDRScale : packoffset(c23) = float(1.000000e+000);
  float k_fRenderObjectID : packoffset(c23.y);
  float k_fInvLightRadius : packoffset(c23.z);
  row_major float3x4 k_mCubeProjector_LightTransform : packoffset(c24);
  row_major float3x4 k_mDirectional_ObjectToTex : packoffset(c27);
  row_major float4x4 k_mSpotProjector_LightTransform : packoffset(c30);
  float4 k_vSpotProjector_TanXYRadiusZW : packoffset(c34);
  row_major float3x4 k_mWorldToVolume : packoffset(c35);
  float3 k_vDirectional_Dir : packoffset(c38);
  float4 k_vObjectLightColor : packoffset(c39);
  float3 k_vObjectSpaceLightPos : packoffset(c40);
  float4 k_vSpecularColor : packoffset(c41);
  float4 k_vSpotProjector_ClipFar : packoffset(c42);
  float4 k_vSpotProjector_ClipNear : packoffset(c43);
  float3 k_vHalfDims : packoffset(c44);
  float4 k_vShadowMapParams : packoffset(c45);
  float4 k_vShadowMapParams2 : packoffset(c46);
  row_major float4x4 k_mShadowMapMatrix : packoffset(c47);
  float4 k_vShadowCascadeOffsetX : packoffset(c51);
  float4 k_vShadowCascadeOffsetZ : packoffset(c52);
  float k_fStaticLightVolume_Mip : packoffset(c53);
  float4 k_vShadowSplitDistSquared : packoffset(c54);
  float4 k_vShadowSplitDistSelect : packoffset(c55);
  float4 k_vShadowMoveX : packoffset(c56);
  float4 k_vShadowMoveY : packoffset(c57);
  float4 k_vShadowMoveZ : packoffset(c58);
  float4 k_vShadowScaleXY : packoffset(c59);
  float4 k_vShadowScaleX : packoffset(c60);
  float4 k_vShadowScaleY : packoffset(c61);
  float4 k_vShadowScaleZ : packoffset(c62);
  float3 k_vLightBleed_Offset : packoffset(c63);
  float4 k_vStaticLightVolume_PivotContrast : packoffset(c64);
  float k_fLightLayer : packoffset(c65);
  row_major float3x4 k_mViewToLight : packoffset(c66);
}

cbuffer CBuffer_View : register(b12)
{
  row_major float4x4 k_mWorldToClip : packoffset(c0);
  row_major float3x4 k_mViewToWorld : packoffset(c4);
  row_major float3x4 k_mWorldToView : packoffset(c7);
  row_major float4x4 k_mDrawPrimToClip : packoffset(c10);
  float4 k_vFogRayleigh : packoffset(c14);
  float4 k_vFogMieA : packoffset(c15);
  float4 k_vFogMieB : packoffset(c16);
  float4 k_vFogMieC : packoffset(c17);
  float4 k_vFogSky : packoffset(c18);
  float4 k_vFogSunColor : packoffset(c19);
  float3 k_vFogSunDir : packoffset(c20);
  float4 k_vFullViewPlane : packoffset(c21);
  float2 k_vPerspOrthoMask : packoffset(c22);
  float2 k_vScene_ScreenRes : packoffset(c23);
  float2 k_vScene_TexCoordScale : packoffset(c24);
  float3 k_vScene_ZRange : packoffset(c25);
  float3 k_vWorldSpaceCameraDir : packoffset(c26);
  float4 k_vHDRLuminanceWeights : packoffset(c27);
  float4 k_vHDRBloomParams : packoffset(c28);
  float4 k_vHDRBloomParams2 : packoffset(c29);
  float4 k_vWindDirection : packoffset(c30);
  float4 k_vVegetationForce1 : packoffset(c31);
  float4 k_vVegetationForce2 : packoffset(c32);
  float4 k_vVegetationRadius : packoffset(c33);
  row_major float4x4 k_mSkyShadowMapMatrix : packoffset(c34);
  float4 k_vSkyShadowParams : packoffset(c38);
  float4 k_vParaboloidShadowParams : packoffset(c39);
  row_major float4x4 k_mPrevWorldToClip : packoffset(c40);
  row_major float3x4 k_mPrevViewToWorld : packoffset(c44);
  row_major float3x4 k_mPrevWorldToView : packoffset(c47);
  float4 k_vMotionBlurParams : packoffset(c50);
}
SamplerState sAniso4X_WRAPWRAPCLAMP_Sampler_s : register(s0);
Texture2D<float4> tEmissiveMap : register(t0);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : SV_POSITION0,
  float2 v1 : TEXCOORD0,
  float3 v2 : TEXCOORD2,
  float3 v3 : TEXCOORD3,
  float3 v4 : TEXCOORD4,
  float4 v5 : COLOR0,
  out float4 o0 : SV_Target0,
  out float4 o1 : SV_Target1)
{
  float4 r0,r1;
  uint4 bitmask;
  r0.xyz = tEmissiveMap.Sample(sAniso4X_WRAPWRAPCLAMP_Sampler_s, v1.xy).xyz;
  r1.xyz = k_cEmissiveColor.xyz + -r0.xyz;
  r0.xyz = k_fSkyLerp * r1.xyz + r0.xyz;
  r0.xyz = k_vHDRLuminanceWeights.www * r0.xyz;
  o0.xyz = k_fHDRScale * r0.xyz;
  o0.w = 0.000000000e+000;
  o1.xyz = float3(5.000000e-001,5.000000e-001,1.000000e+000);
  o1.w = k_fRenderObjectID;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20546
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   row_major float4x4 k_mObjectToClip;// Offset:    0 Size:    64 [unused]
//   row_major float3x4 k_mObjectToView;// Offset:   64 Size:    48 [unused]
//   row_major float3x4 k_mObjectToWorld;// Offset:  112 Size:    48 [unused]
//   float4 k_vObjectColor;             // Offset:  160 Size:    16 [unused]
//   float3 k_vObjectSpaceEyePos;       // Offset:  176 Size:    12 [unused]
//   row_major float4x4 k_mPrevObjectToClip;// Offset:  192 Size:    64 [unused]
//   row_major float3x4 k_mPrevObjectToView;// Offset:  256 Size:    48 [unused]
//   row_major float3x4 k_mPrevObjectToWorld;// Offset:  304 Size:    48 [unused]
//   float3 k_cEmissiveColor;           // Offset:  352 Size:    12
//      = 0x3ca0a527 0x3cc0c1fd 0x3ce0ded3 
//   float k_fSkyLerp;                  // Offset:  364 Size:     4
//      = 0x00000000 
//   float k_fHDRScale;                 // Offset:  368 Size:     4
//      = 0x3f800000 
//   float k_fRenderObjectID;           // Offset:  372 Size:     4
//   float k_fInvLightRadius;           // Offset:  376 Size:     4 [unused]
//   row_major float3x4 k_mCubeProjector_LightTransform;// Offset:  384 Size:    48 [unused]
//   row_major float3x4 k_mDirectional_ObjectToTex;// Offset:  432 Size:    48 [unused]
//   row_major float4x4 k_mSpotProjector_LightTransform;// Offset:  480 Size:    64 [unused]
//   float4 k_vSpotProjector_TanXYRadiusZW;// Offset:  544 Size:    16 [unused]
//   row_major float3x4 k_mWorldToVolume;// Offset:  560 Size:    48 [unused]
//   float3 k_vDirectional_Dir;         // Offset:  608 Size:    12 [unused]
//   float4 k_vObjectLightColor;        // Offset:  624 Size:    16 [unused]
//   float3 k_vObjectSpaceLightPos;     // Offset:  640 Size:    12 [unused]
//   float4 k_vSpecularColor;           // Offset:  656 Size:    16 [unused]
//   float4 k_vSpotProjector_ClipFar;   // Offset:  672 Size:    16 [unused]
//   float4 k_vSpotProjector_ClipNear;  // Offset:  688 Size:    16 [unused]
//   float3 k_vHalfDims;                // Offset:  704 Size:    12 [unused]
//   float4 k_vShadowMapParams;         // Offset:  720 Size:    16 [unused]
//   float4 k_vShadowMapParams2;        // Offset:  736 Size:    16 [unused]
//   row_major float4x4 k_mShadowMapMatrix;// Offset:  752 Size:    64 [unused]
//   float4 k_vShadowCascadeOffsetX;    // Offset:  816 Size:    16 [unused]
//   float4 k_vShadowCascadeOffsetZ;    // Offset:  832 Size:    16 [unused]
//   float k_fStaticLightVolume_Mip;    // Offset:  848 Size:     4 [unused]
//   float4 k_vShadowSplitDistSquared;  // Offset:  864 Size:    16 [unused]
//   float4 k_vShadowSplitDistSelect;   // Offset:  880 Size:    16 [unused]
//   float4 k_vShadowMoveX;             // Offset:  896 Size:    16 [unused]
//   float4 k_vShadowMoveY;             // Offset:  912 Size:    16 [unused]
//   float4 k_vShadowMoveZ;             // Offset:  928 Size:    16 [unused]
//   float4 k_vShadowScaleXY;           // Offset:  944 Size:    16 [unused]
//   float4 k_vShadowScaleX;            // Offset:  960 Size:    16 [unused]
//   float4 k_vShadowScaleY;            // Offset:  976 Size:    16 [unused]
//   float4 k_vShadowScaleZ;            // Offset:  992 Size:    16 [unused]
//   float3 k_vLightBleed_Offset;       // Offset: 1008 Size:    12 [unused]
//   float4 k_vStaticLightVolume_PivotContrast;// Offset: 1024 Size:    16 [unused]
//   float k_fLightLayer;               // Offset: 1040 Size:     4 [unused]
//   row_major float3x4 k_mViewToLight; // Offset: 1056 Size:    48 [unused]
//
// }
//
// cbuffer CBuffer_View
// {
//
//   row_major float4x4 k_mWorldToClip; // Offset:    0 Size:    64 [unused]
//   row_major float3x4 k_mViewToWorld; // Offset:   64 Size:    48 [unused]
//   row_major float3x4 k_mWorldToView; // Offset:  112 Size:    48 [unused]
//   row_major float4x4 k_mDrawPrimToClip;// Offset:  160 Size:    64 [unused]
//   float4 k_vFogRayleigh;             // Offset:  224 Size:    16 [unused]
//   float4 k_vFogMieA;                 // Offset:  240 Size:    16 [unused]
//   float4 k_vFogMieB;                 // Offset:  256 Size:    16 [unused]
//   float4 k_vFogMieC;                 // Offset:  272 Size:    16 [unused]
//   float4 k_vFogSky;                  // Offset:  288 Size:    16 [unused]
//   float4 k_vFogSunColor;             // Offset:  304 Size:    16 [unused]
//   float3 k_vFogSunDir;               // Offset:  320 Size:    12 [unused]
//   float4 k_vFullViewPlane;           // Offset:  336 Size:    16 [unused]
//   float2 k_vPerspOrthoMask;          // Offset:  352 Size:     8 [unused]
//   float2 k_vScene_ScreenRes;         // Offset:  368 Size:     8 [unused]
//   float2 k_vScene_TexCoordScale;     // Offset:  384 Size:     8 [unused]
//   float3 k_vScene_ZRange;            // Offset:  400 Size:    12 [unused]
//   float3 k_vWorldSpaceCameraDir;     // Offset:  416 Size:    12 [unused]
//   float4 k_vHDRLuminanceWeights;     // Offset:  432 Size:    16
//   float4 k_vHDRBloomParams;          // Offset:  448 Size:    16 [unused]
//   float4 k_vHDRBloomParams2;         // Offset:  464 Size:    16 [unused]
//   float4 k_vWindDirection;           // Offset:  480 Size:    16 [unused]
//   float4 k_vVegetationForce1;        // Offset:  496 Size:    16 [unused]
//   float4 k_vVegetationForce2;        // Offset:  512 Size:    16 [unused]
//   float4 k_vVegetationRadius;        // Offset:  528 Size:    16 [unused]
//   row_major float4x4 k_mSkyShadowMapMatrix;// Offset:  544 Size:    64 [unused]
//   float4 k_vSkyShadowParams;         // Offset:  608 Size:    16 [unused]
//   float4 k_vParaboloidShadowParams;  // Offset:  624 Size:    16 [unused]
//   row_major float4x4 k_mPrevWorldToClip;// Offset:  640 Size:    64 [unused]
//   row_major float3x4 k_mPrevViewToWorld;// Offset:  704 Size:    48 [unused]
//   row_major float3x4 k_mPrevWorldToView;// Offset:  752 Size:    48 [unused]
//   float4 k_vMotionBlurParams;        // Offset:  800 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// sAniso4X_WRAPWRAPCLAMP_Sampler    sampler      NA          NA    0        1
// tEmissiveMap                      texture  float4          2d    0        1
// $Globals                          cbuffer      NA          NA    0        1
// CBuffer_View                      cbuffer      NA          NA   12        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 2   xyz         2     NONE   float       
// TEXCOORD                 3   xyz         3     NONE   float       
// TEXCOORD                 4   xyz         4     NONE   float       
// COLOR                    0   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[24], immediateIndexed
dcl_constantbuffer cb12[28], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 2
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t0.xyzw, s0
add r1.xyz, -r0.xyzx, cb0[22].xyzx
mad r0.xyz, cb0[22].wwww, r1.xyzx, r0.xyzx
mul r0.xyz, r0.xyzx, cb12[27].wwww
mul o0.xyz, r0.xyzx, cb0[23].xxxx
mov o0.w, l(0)
mov o1.xyz, l(0.500000,0.500000,1.000000,0)
mov o1.w, cb0[23].y
ret 
// Approximately 9 instruction slots used
 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
