
cbuffer PER_MATERIAL : register(b0)
{
  float4 reflection_parameters : packoffset(c0);
  float4 material_mipmap_parameters : packoffset(c1);
  float4x4 color_matrix : packoffset(c2);
  float4 material_lighting_parameters : packoffset(c6);
  float4 textureblending_parameters4 : packoffset(c7);
  float4 material_parameters : packoffset(c8);
}

cbuffer PER_STAGE : register(b1)
{
  float4x4 inverse_view_matrix : packoffset(c0);
  float3 camera_upvector : packoffset(c4);
  float4 camera_clip_distances : packoffset(c5);
  float3 camera_position_worldspace : packoffset(c6);
}

cbuffer PER_FRAME : register(b2)
{
  float4 time_parameters : packoffset(c0);
  float4 fog_linear_color : packoffset(c1);
  float4 fog_linear_parameters : packoffset(c2);
  float4 fog_layered_parameters : packoffset(c3);
  float4 fog_layered_color : packoffset(c4);
  float4 light_hemispheric_color_bottom : packoffset(c5);
  float4 light_hemispheric_color_top : packoffset(c6);
}

cbuffer PER_LIGHT : register(b3)
{
  float3 light_direction_viewspace : packoffset(c0);
  float4 light_color_diffuse : packoffset(c1);
  float4 light_color_diffuse_back : packoffset(c2);
  float4 light_specular_parameters : packoffset(c3);
  float4 shadow_parameters : packoffset(c4);
  float4 light_position_viewspace1 : packoffset(c5);
  float4 light_color_diffuse1 : packoffset(c6);
  float4 light_color_diffuse_back1 : packoffset(c7);
  float4 light_specular_parameters1 : packoffset(c8);
  float4 light_direction_viewspace1 : packoffset(c9);
  float4 light_parameters1 : packoffset(c10);
  float4 light_attenuation_parameters1 : packoffset(c11);
  float4 light_box_parameters1 : packoffset(c12);
  float4 light_position_viewspace2 : packoffset(c13);
  float4 light_color_diffuse2 : packoffset(c14);
  float4 light_color_diffuse_back2 : packoffset(c15);
  float4 light_specular_parameters2 : packoffset(c16);
  float4 light_direction_viewspace2 : packoffset(c17);
  float4 light_parameters2 : packoffset(c18);
  float4 light_attenuation_parameters2 : packoffset(c19);
  float4 light_box_parameters2 : packoffset(c20);
  float4 light_position_viewspace3 : packoffset(c21);
  float4 light_color_diffuse3 : packoffset(c22);
  float4 light_color_diffuse_back3 : packoffset(c23);
  float4 light_specular_parameters3 : packoffset(c24);
  float4 light_direction_viewspace3 : packoffset(c25);
  float4 light_parameters3 : packoffset(c26);
  float4 light_attenuation_parameters3 : packoffset(c27);
  float4 light_box_parameters3 : packoffset(c28);
  float4 light_position_viewspace4 : packoffset(c29);
  float4 light_color_diffuse4 : packoffset(c30);
  float4 light_color_diffuse_back4 : packoffset(c31);
  float4 light_specular_parameters4 : packoffset(c32);
  float4 light_direction_viewspace4 : packoffset(c33);
  float4 light_parameters4 : packoffset(c34);
  float4 light_attenuation_parameters4 : packoffset(c35);
  float4 light_box_parameters4 : packoffset(c36);
  float4 light_subsurface_scattering_parameters : packoffset(c37);
  float4 light_subsurface_scattering_color : packoffset(c38);
}

cbuffer PER_INSTANCE : register(b4)
{
  float4 rendertarget_size : packoffset(c0);
  float4 enlighten_parameters : packoffset(c1);
  float4 enlighten_lightmap_uvlineartransform : packoffset(c2);
  float4 enlighten_lightmap_uvtranslation : packoffset(c3);
  float4 enlighten_sh_coeffs[3] : packoffset(c4);
  float4 alpha_parameters : packoffset(c7);
}
SamplerState sampler_point_clamp_s : register(s1);
SamplerState sampler_bilinear_wrap_s : register(s2);
SamplerState sampler_anisotropic_wrap_s : register(s5);
Texture2D<float4> diffuseSampler : register(t0);
Texture2D<float4> depthSampler : register(t1);
Texture2D<float4> colorControlsMaskSampler : register(t2);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  float3 v2 : TEXCOORD1,
  float3 v3 : TEXCOORD2,
  float3 v4 : TEXCOORD3,
  float4 v5 : TEXCOORD4,
  float4 v6 : TEXCOORD9,
  uint v7 : SV_IsFrontFace0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2;
  uint4 bitmask;
  r0.x = dot(v5.xyz, v5.xyz);
  r0.x = rsqrt(r0.x);
  r0.xyz = v5.xyz * r0.xxx;
  r0.x = dot(r0.xyz, -light_direction_viewspace.xyz);
  r0.x = max(r0.x, 0.000000000e+000);
  r0.x = r0.x * r0.x;
  r0.x = r0.x * r0.x;
  r0.x = r0.x * r0.x;
  r0.yzw = -camera_position_worldspace.xyz + v6.xyz;
  r1.x = fog_layered_parameters.y * r0.z;
  r1.y = -1.442695022e+000 * r1.x;
  r1.y = exp2(r1.y);
  r1.y = 1.000000000e+000 + -r1.y;
  r1.x = r1.y / r1.x;
  r0.y = dot(r0.yzw, r0.yzw);
  r0.z = 9.999999776e-003 < abs(r0.z);
  r0.y = sqrt(r0.y);
  r0.xy = fog_layered_parameters.zw * r0.xy;
  r0.w = r0.y * r1.x;
  r0.y = r0.z ? r0.w : r0.y;
  r0.y = -1.442695022e+000 * r0.y;
  r0.y = exp2(r0.y);
  r0.y = 1.000000000e+000 + -r0.y;
  r0.y = fog_layered_parameters.x * r0.y;
  r0.z = r0.y >= 0.000000000e+000;
  r0.y = r0.z ? r0.y : fog_layered_parameters.x;
  r0.x = saturate(r0.x * r0.y);
  r1.xyz = light_color_diffuse.xyz + -fog_layered_color.xyz;
  r0.xzw = r0.xxx * r1.xyz + fog_layered_color.xyz;
  r1.xyzw = textureblending_parameters4.zzzz * v1.xyzw;
  r2.x = -material_mipmap_parameters.x;
  r2.yzw = diffuseSampler.SampleBias(sampler_anisotropic_wrap_s, r1.zw, r2.x).xyz;
  r1.x = diffuseSampler.SampleBias(sampler_anisotropic_wrap_s, r1.xy, r2.x).w;
  r1.yzw = color_matrix._m01_m11_m21 * r2.zzz;
  r1.yzw = color_matrix._m00_m10_m20 * r2.yyy + r1.yzw;
  r1.yzw = color_matrix._m02_m12_m22 * r2.www + r1.yzw;
  r1.yzw = color_matrix._m03_m13_m23 * r1.xxx + r1.yzw;
  r1.yzw = r1.yzw + -r2.yzw;
  r2.x = colorControlsMaskSampler.Sample(sampler_bilinear_wrap_s, v1.xy).x;
  r1.yzw = r2.xxx * r1.yzw + r2.yzw;
  r2.xyz = material_lighting_parameters.zzz * r1.yzw;
  r1.yzw = -r1.yzw * material_lighting_parameters.zzz + fog_linear_color.xyz;
  r2.w = -fog_linear_parameters.x + -v5.z;
  r2.w = saturate(fog_linear_parameters.w * r2.w);
  r2.w = fog_linear_parameters.z * r2.w;
  r1.yzw = r2.www * r1.yzw + r2.xyz;
  r0.xzw = -r1.yzw + r0.xzw;
  r0.xyz = r0.yyy * r0.xzw + r1.yzw;
  r1.yz = rendertarget_size.zw * v0.xy;
  r1.y = depthSampler.SampleLevel(sampler_point_clamp_s, r1.yz, 0.000000000e+000).x;
  r1.y = -camera_clip_distances.z + r1.y;
  r1.y = camera_clip_distances.w / r1.y;
  r1.y = v5.z + -r1.y;
  r1.y = saturate(r1.y / alpha_parameters.w);
  r1.y = alpha_parameters.x * r1.y;
  r1.x = r1.x * r1.y;
  r0.w = 1.000000000e+000;
  o0.xyzw = r1.xxxx * r0.xyzw;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20499
//
//
// Buffer Definitions: 
//
// cbuffer PER_MATERIAL
// {
//
//   float4 reflection_parameters;      // Offset:    0 Size:    16 [unused]
//   float4 material_mipmap_parameters; // Offset:   16 Size:    16
//   float4x4 color_matrix;             // Offset:   32 Size:    64
//   float4 material_lighting_parameters;// Offset:   96 Size:    16
//   float4 textureblending_parameters4;// Offset:  112 Size:    16
//   float4 material_parameters;        // Offset:  128 Size:    16 [unused]
//
// }
//
// cbuffer PER_STAGE
// {
//
//   float4x4 inverse_view_matrix;      // Offset:    0 Size:    64 [unused]
//   float3 camera_upvector;            // Offset:   64 Size:    12 [unused]
//   float4 camera_clip_distances;      // Offset:   80 Size:    16
//   float3 camera_position_worldspace; // Offset:   96 Size:    12
//
// }
//
// cbuffer PER_FRAME
// {
//
//   float4 time_parameters;            // Offset:    0 Size:    16 [unused]
//   float4 fog_linear_color;           // Offset:   16 Size:    16
//   float4 fog_linear_parameters;      // Offset:   32 Size:    16
//   float4 fog_layered_parameters;     // Offset:   48 Size:    16
//   float4 fog_layered_color;          // Offset:   64 Size:    16
//   float4 light_hemispheric_color_bottom;// Offset:   80 Size:    16 [unused]
//   float4 light_hemispheric_color_top;// Offset:   96 Size:    16 [unused]
//
// }
//
// cbuffer PER_LIGHT
// {
//
//   float3 light_direction_viewspace;  // Offset:    0 Size:    12
//   float4 light_color_diffuse;        // Offset:   16 Size:    16
//   float4 light_color_diffuse_back;   // Offset:   32 Size:    16 [unused]
//   float4 light_specular_parameters;  // Offset:   48 Size:    16 [unused]
//   float4 shadow_parameters;          // Offset:   64 Size:    16 [unused]
//   float4 light_position_viewspace1;  // Offset:   80 Size:    16 [unused]
//   float4 light_color_diffuse1;       // Offset:   96 Size:    16 [unused]
//   float4 light_color_diffuse_back1;  // Offset:  112 Size:    16 [unused]
//   float4 light_specular_parameters1; // Offset:  128 Size:    16 [unused]
//   float4 light_direction_viewspace1; // Offset:  144 Size:    16 [unused]
//   float4 light_parameters1;          // Offset:  160 Size:    16 [unused]
//   float4 light_attenuation_parameters1;// Offset:  176 Size:    16 [unused]
//   float4 light_box_parameters1;      // Offset:  192 Size:    16 [unused]
//   float4 light_position_viewspace2;  // Offset:  208 Size:    16 [unused]
//   float4 light_color_diffuse2;       // Offset:  224 Size:    16 [unused]
//   float4 light_color_diffuse_back2;  // Offset:  240 Size:    16 [unused]
//   float4 light_specular_parameters2; // Offset:  256 Size:    16 [unused]
//   float4 light_direction_viewspace2; // Offset:  272 Size:    16 [unused]
//   float4 light_parameters2;          // Offset:  288 Size:    16 [unused]
//   float4 light_attenuation_parameters2;// Offset:  304 Size:    16 [unused]
//   float4 light_box_parameters2;      // Offset:  320 Size:    16 [unused]
//   float4 light_position_viewspace3;  // Offset:  336 Size:    16 [unused]
//   float4 light_color_diffuse3;       // Offset:  352 Size:    16 [unused]
//   float4 light_color_diffuse_back3;  // Offset:  368 Size:    16 [unused]
//   float4 light_specular_parameters3; // Offset:  384 Size:    16 [unused]
//   float4 light_direction_viewspace3; // Offset:  400 Size:    16 [unused]
//   float4 light_parameters3;          // Offset:  416 Size:    16 [unused]
//   float4 light_attenuation_parameters3;// Offset:  432 Size:    16 [unused]
//   float4 light_box_parameters3;      // Offset:  448 Size:    16 [unused]
//   float4 light_position_viewspace4;  // Offset:  464 Size:    16 [unused]
//   float4 light_color_diffuse4;       // Offset:  480 Size:    16 [unused]
//   float4 light_color_diffuse_back4;  // Offset:  496 Size:    16 [unused]
//   float4 light_specular_parameters4; // Offset:  512 Size:    16 [unused]
//   float4 light_direction_viewspace4; // Offset:  528 Size:    16 [unused]
//   float4 light_parameters4;          // Offset:  544 Size:    16 [unused]
//   float4 light_attenuation_parameters4;// Offset:  560 Size:    16 [unused]
//   float4 light_box_parameters4;      // Offset:  576 Size:    16 [unused]
//   float4 light_subsurface_scattering_parameters;// Offset:  592 Size:    16 [unused]
//   float4 light_subsurface_scattering_color;// Offset:  608 Size:    16 [unused]
//
// }
//
// cbuffer PER_INSTANCE
// {
//
//   float4 rendertarget_size;          // Offset:    0 Size:    16
//   float4 enlighten_parameters;       // Offset:   16 Size:    16 [unused]
//   float4 enlighten_lightmap_uvlineartransform;// Offset:   32 Size:    16 [unused]
//   float4 enlighten_lightmap_uvtranslation;// Offset:   48 Size:    16 [unused]
//   float4 enlighten_sh_coeffs[3];     // Offset:   64 Size:    48 [unused]
//   float4 alpha_parameters;           // Offset:  112 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// sampler_point_clamp               sampler      NA          NA    1        1
// sampler_bilinear_wrap             sampler      NA          NA    2        1
// sampler_anisotropic_wrap          sampler      NA          NA    5        1
// diffuseSampler                    texture  float4          2d    0        1
// depthSampler                      texture  float4          2d    1        1
// colorControlsMaskSampler          texture  float4          2d    2        1
// PER_MATERIAL                      cbuffer      NA          NA    0        1
// PER_STAGE                         cbuffer      NA          NA    1        1
// PER_FRAME                         cbuffer      NA          NA    2        1
// PER_LIGHT                         cbuffer      NA          NA    3        1
// PER_INSTANCE                      cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyz         3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 9   xyzw        6     NONE   float   xyz 
// SV_IsFrontFace           0   x           7    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[7], immediateIndexed
dcl_constantbuffer cb2[5], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 3
dp3 r0.x, v5.xyzx, v5.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v5.xyzx
dp3 r0.x, r0.xyzx, -cb3[0].xyzx
max r0.x, r0.x, l(0.000000)
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, r0.x
add r0.yzw, v6.xxyz, -cb1[6].xxyz
mul r1.x, r0.z, cb2[3].y
mul r1.y, r1.x, l(-1.442695)
exp r1.y, r1.y
add r1.y, -r1.y, l(1.000000)
div r1.x, r1.y, r1.x
dp3 r0.y, r0.yzwy, r0.yzwy
lt r0.z, l(0.010000), |r0.z|
sqrt r0.y, r0.y
mul r0.xy, r0.xyxx, cb2[3].zwzz
mul r0.w, r1.x, r0.y
movc r0.y, r0.z, r0.w, r0.y
mul r0.y, r0.y, l(-1.442695)
exp r0.y, r0.y
add r0.y, -r0.y, l(1.000000)
mul r0.y, r0.y, cb2[3].x
ge r0.z, r0.y, l(0.000000)
movc r0.y, r0.z, r0.y, cb2[3].x
mul_sat r0.x, r0.y, r0.x
add r1.xyz, -cb2[4].xyzx, cb3[1].xyzx
mad r0.xzw, r0.xxxx, r1.xxyz, cb2[4].xxyz
mul r1.xyzw, v1.xyzw, cb0[7].zzzz
mov r2.x, -cb0[1].x
sample_b_indexable(texture2d)(float,float,float,float) r2.yzw, r1.zwzz, t0.wxyz, s5, r2.x
sample_b_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t0.wxyz, s5, r2.x
mul r1.yzw, r2.zzzz, cb0[3].xxyz
mad r1.yzw, cb0[2].xxyz, r2.yyyy, r1.yyzw
mad r1.yzw, cb0[4].xxyz, r2.wwww, r1.yyzw
mad r1.yzw, cb0[5].xxyz, r1.xxxx, r1.yyzw
add r1.yzw, -r2.yyzw, r1.yyzw
sample_indexable(texture2d)(float,float,float,float) r2.x, v1.xyxx, t2.xyzw, s2
mad r1.yzw, r2.xxxx, r1.yyzw, r2.yyzw
mul r2.xyz, r1.yzwy, cb0[6].zzzz
mad r1.yzw, -r1.yyzw, cb0[6].zzzz, cb2[1].xxyz
add r2.w, -v5.z, -cb2[2].x
mul_sat r2.w, r2.w, cb2[2].w
mul r2.w, r2.w, cb2[2].z
mad r1.yzw, r2.wwww, r1.yyzw, r2.xxyz
add r0.xzw, r0.xxzw, -r1.yyzw
mad r0.xyz, r0.yyyy, r0.xzwx, r1.yzwy
mul r1.yz, v0.xxyx, cb4[0].zzwz
sample_l_indexable(texture2d)(float,float,float,float) r1.y, r1.yzyy, t1.yxzw, s1, l(0.000000)
add r1.y, r1.y, -cb1[5].z
div r1.y, cb1[5].w, r1.y
add r1.y, -r1.y, v5.z
div_sat r1.y, r1.y, cb4[7].w
mul r1.y, r1.y, cb4[7].x
mul r1.x, r1.y, r1.x
mov r0.w, l(1.000000)
mul o0.xyzw, r0.xyzw, r1.xxxx
ret 
// Approximately 59 instruction slots used
 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
