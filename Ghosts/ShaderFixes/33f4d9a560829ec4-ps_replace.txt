// Water in basement. Top layer, reflects light.

Texture2D<float4> t7 : register(t7);

Texture2D<float4> t6 : register(t6);

Texture2D<float4> t5 : register(t5);

Texture2D<float4> t4 : register(t4);

Texture2D<float4> t3 : register(t3);

Texture2D<float4> t2 : register(t2);

Texture2D<float4> t0 : register(t0);

SamplerState s7 : register(s7);

SamplerState s6 : register(s6);

SamplerState s5 : register(s5);

SamplerState s4 : register(s4);

SamplerState s3 : register(s3);

SamplerState s2 : register(s2);

SamplerState s1 : register(s1);

SamplerState s0 : register(s0);

cbuffer cb3 : register(b3)
{
  float4 cb3[4];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[35];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[14];
}


Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : SV_POSITION0,
  float4 v1 : COLOR0,
  float4 v2 : TEXCOORD0,
  float4 v3 : TEXCOORD1,
  float4 v4 : TEXCOORD2,
  float3 v5 : TEXCOORD5,
  out float4 o0 : SV_TARGET0,
  out float4 o1 : SV_TARGET1)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10;
  uint4 bitmask;
  r0.xyzw = t0.Sample(s0, v2.xy).xyzw;
  r1.x = v1.w * r0.w;
  r0.w = -r0.w * v1.w + 1.000000000e+000;
  r0.w = 1.000000000e+000 + -r0.w;
  r1.y = 3.921568859e-003 >= r0.w;
  if (r1.y != 0) discard;
  r1.yzw = v4.yzx * v3.zxy;
  r1.yzw = v3.yzx * v4.zxy + -r1.yzw;
  r1.yzw = v4.www * r1.yzw;
  r2.xyz = v5.xyz;
  r2.w = 1.000000000e+000;
  r3.x = dot(r2.xyzw, cb1[4].xyzw);
  r3.y = dot(r2.xyzw, cb1[5].xyzw);
  r3.z = dot(r2.xyzw, cb1[6].xyzw);
  r3.w = dot(r2.xyzw, cb1[7].xyzw);
  r2.xyzw = t6.Sample(s6, v2.xy).xyzw;
  r0.xyz = v1.xyz * r0.xyz;
  r0.xyz = r0.xyz * r0.xyz;
  r4.xy = t5.Sample(s5, v2.xy).xy;
  r4.xy = r4.yx * r1.xx;
  r2.xyz = r2.xyz * r2.xyz;
  r0.xyz = r1.xxx * r0.xyz;
  r4.xy = r4.xy + r4.xy;
  r5.xyz = v1.www * r2.xyz;
  r2.x = dot(r2.xyz, float3(1.000000e+001,1.000000e+001,1.000000e+001));
  r2.x = min(r2.x, 1.000000000e+000);
  r2.y = v1.w * r2.x;
  r2.x = -v1.w * r2.x + 1.000000000e+000;
  r2.x = r1.x * r2.x + r2.y;
  r6.xy = float2(0.000000e+000,0.000000e+000);
  r6.z = cb3[0].z;
  r7.xyz = cb3[0].xyz + -r6.yyz;
  r2.xyz = r2.xxx * r7.xyz + r6.xyz;
  o0.w = cb3[3].x * r1.x;
  r6.xyz = r4.xxx * v4.xyz + v3.xyz;
  r1.xyz = r4.yyy * r1.yzw + r6.xyz;
  r1.w = dot(r1.xyz, r1.xyz);
  r1.w = rsqrt(r1.w);
  r1.xyz = r1.xyz * r1.www;
  r1.w = dot(v5.xyz, v5.xyz);
  r1.w = rsqrt(r1.w);
  r6.xyz = v5.xyz * r1.www;
  r1.w = dot(r6.xyz, r1.xyz);
  r4.z = 1.000000000e+000 + -abs(-r1.w);
  r4.z = max(r4.z, 0.000000000e+000);
  r4.z = log2(r4.z);
  r2.z = r4.z * r2.z;
  r2.z = exp2(r2.z);
  r2.y = r2.y + -r2.x;
  r2.x = r2.z * r2.y + r2.x;
  r1.w = r1.w + r1.w;
  r7.xyz = r1.xyz * -r1.www + r6.xyz;
  r1.w = 9.377517700e+000 * r2.w;
  r2.y = r2.w * -5.000000000e+000 + 4.500000000e+000;
  
// float4 zpos4 = .SampleLevel(s1, r7.xyzx, r2.y);
// float zTex = zpos4.Í;
// float zpos = ;
// float wpos = 1.0 / zpos;
  // r2.yzw = .SampleLevel(s1, r7.xyzx, r2.y).xyz;

// Hand patch broken code for:
// sample_l_indexable(texturecube)(float,float,float,float) r2.yzw, r7.xyzx, t1.wxyz, s1, r2.y
r2.yzw = t1.Sample(s1, r7.xyzx, r2.y).wxyz;

  r8.x = cb2[0].w;
  r8.y = cb2[1].w;
  r8.z = cb2[2].w;
  r4.z = dot(r8.xyz, r7.xyz);
  r8.x = 2.500000e-001 < r4.z;
  r8.y = 0 < r4.z;
  r4.z = 1.000000e+000 / r4.z;
  r4.z = r8.x ? r4.z : 4.000000000e+000;
  r8.xzw = cb2[4].xyz + v5.xyz;
  r4.w = dot(r8.xzw, r8.xzw);
  r4.w = rsqrt(r4.w);
  r9.xyz = r8.xzw * r4.www;
  r4.w = dot(r9.xyz, r1.xyz);
  r5.w = r4.w + r4.w;
  r9.xyz = r1.xyz * -r5.www + r9.xyz;
  r4.w = 1.000000000e+002 * abs(r4.w);
  r4.w = min(r4.w, 1.000000000e+000);
  r9.xyz = cb3[1].xxx * r9.xyz;
  r8.xzw = r9.xyz * r4.zzz + r8.xzw;
  r9.xyz = cb2[1].xyw * r8.zzz;
  r9.xyz = r8.xxx * cb2[0].xyw + r9.xyz;
  r8.xzw = r8.www * cb2[2].xyw + r9.xyz;
  r8.xzw = cb2[3].xyw + r8.xzw;
  r8.xz = r8.xz / r8.ww;
  r9.xy = r8.xz * cb2[6].xy + cb2[6].zw;
  r8.xz = r8.xz * cb2[34].xy + cb2[34].zw;
  r4.z = abs(r8.x) < 1.000000000e+000;
  r5.w = -r8.z * r8.z + 1.000000000e+000;
  r5.w = max(r5.w, 0.000000000e+000);
  r4.z = r4.z ? r8.y : 0;
  r5.w = cb2[5].x * r5.w;
  r4.z = r4.z ? r5.w : 0;
  r8.xyz = t7.Sample(s7, r9.xyxx).xyz;
  r4.z = r4.z * r4.w;
  r8.xyz = r8.xyz + -r2.yzw;
  r2.yzw = r4.zzz * r8.xyz + r2.yzw;
  r4.zw = float2(1.000000e+000,5.000000e-001) * v2.zw;
  r8.xyzw = t3.Sample(s3, r4.zwzz).xyzw;
  r4.zw = v2.zw * float2(1.000000e+000,5.000000e-001) + float2(0.000000e+000,5.000000e-001);
  r9.xyzw = t3.Sample(s3, r4.zwzz).xyzw;
  r4.z = dot(r4.xy, r4.xy);
  r4.z = 1.000000000e+000 + r4.z;
  r4.z = sqrt(r4.z);
  r10.z = 1.000000e+000 / r4.z;
  r10.xy = r10.zz * r4.xy;
  r4.x = r8.w;
  r4.y = r9.w;
  r4.w = dot(r4.xy, r4.xy);
  r4.w = 1.000000000e+000 + -r4.w;
  r4.w = max(r4.w, 0.000000000e+000);
  r4.z = sqrt(r4.w);
  r4.x = saturate(dot(r10.xyz, r4.xyz));
  r4.xyz = r9.xyz * r4.xxx;
  r4.xyz = r8.xyz * r10.zzz + r4.xyz;
  r8.xyz = cb1[9].xyz + -v5.xyz;
  r4.w = dot(r8.xyz, r8.xyz);
  r5.w = rsqrt(r4.w);
  r8.xyz = r8.xyz * r5.www;
  r5.w = dot(r7.xyz, r8.xyz);
  r1.w = exp2(r1.w);
  r1.w = 7.000000000e+000 + r1.w;
  r5.w = -9.992499948e-001 + r5.w;
  r1.w = r5.w * r1.w;
  r1.w = 1.442695022e+000 * r1.w;
  r1.w = exp2(r1.w);
  r1.w = min(r1.w, 1.000000000e+000);
  r7.xyz = cb1[11].xyz * r1.www;
  r1.x = saturate(dot(r8.xyz, r1.xyz));
  r1.xyz = cb1[10].xyz * r1.xxx;
  r1.w = t2.Sample(s2, v2.zwzz).x;
  r5.w = dot(r8.xyz, cb1[12].xyz);
  r5.w = saturate(r5.w * cb1[13].x + cb1[13].y);
  r5.w = cb1[13].w * r5.w;
  r8.xy = cb2[10].xy * r3.ww;
  r8.zw = float2(0.000000e+000,0.000000e+000);
  r9.xyzw = r8.xyww + r3.xyzw;
  r9.xyz = r9.xyz / r9.www;
  r9.x = t4.SampleCmpLevelZero(, r9.xyxx, r9.z).x;
  r8.xyzw = -r8.xyzw + r3.xyzw;
  r8.xyz = r8.xyz / r8.www;
  r9.y = t4.SampleCmpLevelZero(, r8.xyxx, r8.z).x;
  r8.xy = cb2[10].zw * r3.ww;
  r8.zw = float2(0.000000e+000,0.000000e+000);
  r10.xyzw = r8.xyww + r3.xyzw;
  r10.xyz = r10.xyz / r10.www;
  r9.z = t4.SampleCmpLevelZero(, r10.xyxx, r10.z).x;
  r3.xyzw = -r8.xyzw + r3.xyzw;
  r3.xyz = r3.xyz / r3.www;
  r9.w = t4.SampleCmpLevelZero(, r3.xyxx, r3.z).x;
  r3.x = dot(r9.xyzw, float4(2.500000e-001,2.500000e-001,2.500000e-001,2.500000e-001));
  r3.x = r3.x + -r1.w;
  r1.w = r5.w * r3.x + r1.w;
  r3.x = sqrt(r4.w);
  r3.x = saturate(cb1[9].w * r3.x);
  r3.xy = r3.xx * cb1[8].xy + cb1[8].zw;
  r3.xyz = t3.Sample(s3, r3.xyxx).xyz;
  r3.xyz = r3.xyz * r3.xyz;
  r3.xyz = r3.xyz * r1.www;
  r1.xyz = r3.xyz * r1.xyz + r4.xyz;
  r2.yzw = r3.xyz * r7.xyz + r2.yzw;
  r3.xyz = r5.xyz * r2.xxx;
  r2.xyz = r3.xyz * r2.yzw;
  r0.xyz = r0.xyz * r1.xyz + r2.xyz;
  r1.x = dot(cb2[16].xyz, r6.xyz);
  r1.x = -cb2[15].y + r1.x;
  r1.x = saturate(cb2[15].z * r1.x);
  r1.yzw = cb2[17].xyz + -cb2[8].xyz;
  r1.xyz = r1.xxx * r1.yzw + cb2[8].xyz;
  r2.xyz = r1.xyz * r0.www;
  r0.xyz = -r1.xyz * r0.www + r0.xyz;
  o0.xyz = v3.www * r0.xyz + r2.xyz;
  o1.xyz = float3(0.000000e+000,0.000000e+000,0.000000e+000);
  o1.w = r0.w;
  return;
}