
cbuffer cbDefaultXSC : register(b0)
{
  float4x4 ViewProj : packoffset(c0);
  float4x4 ViewMatrix : packoffset(c4);
  float4x4 SecondaryProj : packoffset(c8);
  float4x4 SecondaryViewProj : packoffset(c12);
  float4x4 SecondaryInvViewProj : packoffset(c16);
  float4 ConstantColour : packoffset(c20);
  float4 Time : packoffset(c21);
  float4 CameraPosition : packoffset(c22);
  float4 InvProjectionParams : packoffset(c23);
  float4 SecondaryInvProjectionParams : packoffset(c24);
  float4 ShaderDebugParams : packoffset(c25);
  float4 ToneMappingDebugParams : packoffset(c26);
  float4 HDR_EncodeScale2 : packoffset(c27);
  float4 EmissiveSurfaceMultiplier : packoffset(c28);
  float4 AlphaLight_OffsetScale : packoffset(c29);
  float4 TessellationScaleFactor : packoffset(c30);
  float4 FogNearColour : packoffset(c31);
  float4 FogFarColour : packoffset(c32);
  float4 FogParams : packoffset(c33);
  float4 AdvanceEnvironmentShaderDebugParams : packoffset(c34);
  float4 SMAA_RTMetrics : packoffset(c35);
}

cbuffer cbDefaultVSC : register(b1)
{
  float4x4 ProjMatrix : packoffset(c0);
  float4x4 TextureTransform : packoffset(c4);
  float4x4 InvViewProj : packoffset(c8);
  float4x4 PrevViewProj : packoffset(c12);
  float4x4 PrevSecViewProj : packoffset(c16);
  float4 TextureScaleBias : packoffset(c20);
  float4 RenderTargetSizeVS : packoffset(c21);
  float4 RenderTargetResolutionVS : packoffset(c22);
  float4 MorphTargetParams : packoffset(c23);
  float4 OnePixelStepForS0VS : packoffset(c24);
  float4 ScreenRes[2] : packoffset(c25);
  float4 ClearSurfaceColor : packoffset(c27);
  float4 ClearSurfaceDepth : packoffset(c28);
  float4 VertexDepthClamp : packoffset(c29);
  float4 FlareScreenAspect : packoffset(c30);
  float4 DecalParams : packoffset(c31);
  float4 UserClipPlane0 : packoffset(c32);
  float4 UserClipPlane1 : packoffset(c33);
  float4 UserClipPlane2 : packoffset(c34);
  float4 UserClipPlane3 : packoffset(c35);
  float4 DecalScaleParams : packoffset(c36);
  float4 MipLevel : packoffset(c37);
}

cbuffer cbInstanceXSC : register(b10)
{
  float4x4 WorldMatrix : packoffset(c0);
  float4 LightmapTransform : packoffset(c4);
  float4 RInstConstants[6] : packoffset(c5);
  float4 RadiosityProbeTexcoordAndScale : packoffset(c11);
}

Texture2D<float4> StereoParams : register(t125);

void main(
  float3 v0 : POSITION0,
  out float4 o0 : SV_Position0,
  out float3 o1 : TEXCOORD0)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask;
  r0.x = 5.000000000e-001 < v0.z;
  r0.z = r0.x ? 0.000000000e+000 : 1.000000000e+000;
  r0.xy = v0.xy;
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = rsqrt(r0.w);
  r0.xyz = r0.xyz * r0.www + v0.xyz;
  r0.w = 1.000000000e+000;
  r1.x = dot(r0.xyzw, WorldMatrix._m00_m10_m20_m30);
  r1.y = dot(r0.xyzw, WorldMatrix._m01_m11_m21_m31);
  r1.z = dot(r0.xyzw, WorldMatrix._m02_m12_m22_m32);
  r0.x = dot(r0.xyzw, WorldMatrix._m03_m13_m23_m33);
  r0.xyz = r1.xyz / r0.xxx;
  r0.w = 1.000000000e+000;
  r1.x = dot(r0.xyzw, ViewProj._m00_m10_m20_m30);
  r1.y = dot(r0.xyzw, ViewProj._m01_m11_m21_m31);
  r0.x = dot(r0.xyzw, ViewProj._m03_m13_m23_m33);
  r0.xy = r1.xy / r0.xx;
  r1.xyz = v0.xyz;
  r1.w = 1.000000000e+000;
  r2.x = dot(r1.xyzw, WorldMatrix._m00_m10_m20_m30);
  r2.y = dot(r1.xyzw, WorldMatrix._m01_m11_m21_m31);
  r2.z = dot(r1.xyzw, WorldMatrix._m02_m12_m22_m32);
  r0.z = dot(r1.xyzw, WorldMatrix._m03_m13_m23_m33);
  r1.xyz = r2.xyz / r0.zzz;
  r1.w = 1.000000000e+000;
  r2.x = dot(r1.xyzw, ViewProj._m00_m10_m20_m30);
  r2.y = dot(r1.xyzw, ViewProj._m01_m11_m21_m31);
  r3.w = dot(r1.xyzw, ViewProj._m03_m13_m23_m33);
  o0.z = dot(r1.xyzw, ViewProj._m02_m12_m22_m32);
  r0.zw = r2.xy / r3.ww;
  r0.xy = r0.xy + -r0.zw;
  r0.z = dot(r0.xy, r0.xy);
  r0.z = rsqrt(r0.z);
  r0.xy = r0.xy * r0.zz;
  r0.z = 5.000000000e-001 * RenderTargetResolutionVS.x;
  r0.xy = r0.xy / r0.zz;
  r0.xy = r0.xy * r3.ww;
  r3.xy = r0.xy * float2(1.000000e+001,1.000000e+001) + r2.xy;
  o0.xyw = r3.xyw;
  r0.xyz = float3(5.000000e-001,-5.000000e-001,5.000000e-001) * r3.xyw;
  o1.z = r3.w;
  o1.xy = r0.xy + r0.zz;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer cbDefaultXSC
// {
//
//   float4x4 ViewProj;                 // Offset:    0 Size:    64
//   float4x4 ViewMatrix;               // Offset:   64 Size:    64 [unused]
//   float4x4 SecondaryProj;            // Offset:  128 Size:    64 [unused]
//   float4x4 SecondaryViewProj;        // Offset:  192 Size:    64 [unused]
//   float4x4 SecondaryInvViewProj;     // Offset:  256 Size:    64 [unused]
//   float4 ConstantColour;             // Offset:  320 Size:    16 [unused]
//   float4 Time;                       // Offset:  336 Size:    16 [unused]
//   float4 CameraPosition;             // Offset:  352 Size:    16 [unused]
//   float4 InvProjectionParams;        // Offset:  368 Size:    16 [unused]
//   float4 SecondaryInvProjectionParams;// Offset:  384 Size:    16 [unused]
//   float4 ShaderDebugParams;          // Offset:  400 Size:    16 [unused]
//   float4 ToneMappingDebugParams;     // Offset:  416 Size:    16 [unused]
//   float4 HDR_EncodeScale2;           // Offset:  432 Size:    16 [unused]
//   float4 EmissiveSurfaceMultiplier;  // Offset:  448 Size:    16 [unused]
//   float4 AlphaLight_OffsetScale;     // Offset:  464 Size:    16 [unused]
//   float4 TessellationScaleFactor;    // Offset:  480 Size:    16 [unused]
//   float4 FogNearColour;              // Offset:  496 Size:    16 [unused]
//   float4 FogFarColour;               // Offset:  512 Size:    16 [unused]
//   float4 FogParams;                  // Offset:  528 Size:    16 [unused]
//   float4 AdvanceEnvironmentShaderDebugParams;// Offset:  544 Size:    16 [unused]
//   float4 SMAA_RTMetrics;             // Offset:  560 Size:    16 [unused]
//
// }
//
// cbuffer cbDefaultVSC
// {
//
//   float4x4 ProjMatrix;               // Offset:    0 Size:    64 [unused]
//   float4x4 TextureTransform;         // Offset:   64 Size:    64 [unused]
//   float4x4 InvViewProj;              // Offset:  128 Size:    64 [unused]
//   float4x4 PrevViewProj;             // Offset:  192 Size:    64 [unused]
//   float4x4 PrevSecViewProj;          // Offset:  256 Size:    64 [unused]
//   float4 TextureScaleBias;           // Offset:  320 Size:    16 [unused]
//   float4 RenderTargetSizeVS;         // Offset:  336 Size:    16 [unused]
//   float4 RenderTargetResolutionVS;   // Offset:  352 Size:    16
//   float4 MorphTargetParams;          // Offset:  368 Size:    16 [unused]
//   float4 OnePixelStepForS0VS;        // Offset:  384 Size:    16 [unused]
//   float4 ScreenRes[2];               // Offset:  400 Size:    32 [unused]
//   float4 ClearSurfaceColor;          // Offset:  432 Size:    16 [unused]
//   float4 ClearSurfaceDepth;          // Offset:  448 Size:    16 [unused]
//   float4 VertexDepthClamp;           // Offset:  464 Size:    16 [unused]
//   float4 FlareScreenAspect;          // Offset:  480 Size:    16 [unused]
//   float4 DecalParams;                // Offset:  496 Size:    16 [unused]
//   float4 UserClipPlane0;             // Offset:  512 Size:    16 [unused]
//   float4 UserClipPlane1;             // Offset:  528 Size:    16 [unused]
//   float4 UserClipPlane2;             // Offset:  544 Size:    16 [unused]
//   float4 UserClipPlane3;             // Offset:  560 Size:    16 [unused]
//   float4 DecalScaleParams;           // Offset:  576 Size:    16 [unused]
//   float4 MipLevel;                   // Offset:  592 Size:    16 [unused]
//
// }
//
// cbuffer cbInstanceXSC
// {
//
//   float4x4 WorldMatrix;              // Offset:    0 Size:    64
//   float4 LightmapTransform;          // Offset:   64 Size:    16 [unused]
//   float4 RInstConstants[6];          // Offset:   80 Size:    96 [unused]
//   float4 RadiosityProbeTexcoordAndScale;// Offset:  176 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// cbDefaultXSC                      cbuffer      NA          NA    0        1
// cbDefaultVSC                      cbuffer      NA          NA    1        1
// cbInstanceXSC                     cbuffer      NA          NA   10        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[4], immediateIndexed
dcl_constantbuffer cb1[23], immediateIndexed
dcl_constantbuffer cb10[4], immediateIndexed
dcl_input v0.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_temps 4
lt r0.x, l(0.500000), v0.z
movc r0.z, r0.x, l(0), l(1.000000)
mov r0.xy, v0.xyxx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mad r0.xyz, r0.xyzx, r0.wwww, v0.xyzx
mov r0.w, l(1.000000)
dp4 r1.x, r0.xyzw, cb10[0].xyzw
dp4 r1.y, r0.xyzw, cb10[1].xyzw
dp4 r1.z, r0.xyzw, cb10[2].xyzw
dp4 r0.x, r0.xyzw, cb10[3].xyzw
div r0.xyz, r1.xyzx, r0.xxxx
mov r0.w, l(1.000000)
dp4 r1.x, r0.xyzw, cb0[0].xyzw
dp4 r1.y, r0.xyzw, cb0[1].xyzw
dp4 r0.x, r0.xyzw, cb0[3].xyzw
div r0.xy, r1.xyxx, r0.xxxx
mov r1.xyz, v0.xyzx
mov r1.w, l(1.000000)
dp4 r2.x, r1.xyzw, cb10[0].xyzw
dp4 r2.y, r1.xyzw, cb10[1].xyzw
dp4 r2.z, r1.xyzw, cb10[2].xyzw
dp4 r0.z, r1.xyzw, cb10[3].xyzw
div r1.xyz, r2.xyzx, r0.zzzz
mov r1.w, l(1.000000)
dp4 r2.x, r1.xyzw, cb0[0].xyzw
dp4 r2.y, r1.xyzw, cb0[1].xyzw
dp4 r3.w, r1.xyzw, cb0[3].xyzw
dp4 o0.z, r1.xyzw, cb0[2].xyzw
div r0.zw, r2.xxxy, r3.wwww
add r0.xy, -r0.zwzz, r0.xyxx
dp2 r0.z, r0.xyxx, r0.xyxx
rsq r0.z, r0.z
mul r0.xy, r0.zzzz, r0.xyxx
mul r0.z, cb1[22].x, l(0.500000)
div r0.xy, r0.xyxx, r0.zzzz
mul r0.xy, r3.wwww, r0.xyxx
mad r3.xy, r0.xyxx, l(10.000000, 10.000000, 0.000000, 0.000000), r2.xyxx
mov o0.xyw, r3.xyxw
mul r0.xyz, r3.xywx, l(0.500000, -0.500000, 0.500000, 0.000000)
mov o1.z, r3.w
add o1.xy, r0.zzzz, r0.xyxx
ret 
// Approximately 43 instruction slots used
 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
