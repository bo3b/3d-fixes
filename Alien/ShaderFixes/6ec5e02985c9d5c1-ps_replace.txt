
cbuffer cbDefaultXSC : register(b0)
{
  float4x4 ViewProj : packoffset(c0);
  float4x4 ViewMatrix : packoffset(c4);
  float4x4 SecondaryProj : packoffset(c8);
  float4x4 SecondaryViewProj : packoffset(c12);
  float4x4 SecondaryInvViewProj : packoffset(c16);
  float4 ConstantColour : packoffset(c20);
  float4 Time : packoffset(c21);
  float4 CameraPosition : packoffset(c22);
  float4 InvProjectionParams : packoffset(c23);
  float4 SecondaryInvProjectionParams : packoffset(c24);
  float4 ShaderDebugParams : packoffset(c25);
  float4 ToneMappingDebugParams : packoffset(c26);
  float4 HDR_EncodeScale2 : packoffset(c27);
  float4 EmissiveSurfaceMultiplier : packoffset(c28);
  float4 AlphaLight_OffsetScale : packoffset(c29);
  float4 TessellationScaleFactor : packoffset(c30);
  float4 FogNearColour : packoffset(c31);
  float4 FogFarColour : packoffset(c32);
  float4 FogParams : packoffset(c33);
  float4 AdvanceEnvironmentShaderDebugParams : packoffset(c34);
  float4 SMAA_RTMetrics : packoffset(c35);
}

cbuffer cbDefaultPSC : register(b2)
{
  float4x4 AlphaLight_WorldtoClipMatrix : packoffset(c0);
  float4x4 AlphaLight_CliptoWorldMatrix : packoffset(c4);
  float4x4 ProjectorMatrix : packoffset(c8);
  float4x4 MotionBlurCurrInvViewProjection : packoffset(c12);
  float4x4 MotionBlurPrevViewProjection : packoffset(c16);
  float4x4 MotionBlurPrevSecViewProjection : packoffset(c20);
  float4x4 Spotlight0_Transform : packoffset(c24);
  float4 TextureAnimation : packoffset(c28);
  float4 AmbientDiffuse : packoffset(c29);
  float4 EnvironmentDebugParams : packoffset(c30);
  float4 ShadowFilterESMWeights : packoffset(c31);
  float4 LegacyDofParams : packoffset(c32);
  float4 OnePixelStepForS0 : packoffset(c33);
  float4 RenderTargetSize : packoffset(c34);
  float4 ModelTrackerID : packoffset(c35);
  float4 Sharpness_Bloom_Controls : packoffset(c36);
  float4 Blur_Direction : packoffset(c37);
  float4 LightMeterDebugParams : packoffset(c38);
  float4 SourceResolution : packoffset(c39);
  float4 HDR_EncodeScale : packoffset(c40);
  float4 OutputGamma : packoffset(c41);
  float4 AlphaLight_ScaleParams : packoffset(c42);
  float4 WrinkleMapWeights[6] : packoffset(c43);
  float4 RadiosityCubeMapIdx : packoffset(c49);
  float4 HairShadingParams[8] : packoffset(c50);
  float4 SkinShadingParams : packoffset(c58);
  float4 HDR_EncodeScale3 : packoffset(c59);
  float4 ScreenResolution[4] : packoffset(c60);
  float4 VelocityParams : packoffset(c64);
  float4 DeferredConstColor : packoffset(c65);
  float4 Spotlight0_Shadow_Params : packoffset(c66);
  float4 Spotlight0_ShadowMapDimensions : packoffset(c67);
  float4 ShadowFilterType : packoffset(c68);
  float4 Spotlight0_ReverseZPerspective : packoffset(c69);
  float4 SpacesuitVisorParams : packoffset(c70);
  float4 Directional_Light_Colour : packoffset(c71);
  float4 Directional_Light_Direction : packoffset(c72);
  float4 EnvironmentMap_Params : packoffset(c73);
  float4 Spotlight0_Shadow_Bias_GoboScale : packoffset(c74);
  float4 ScreenSpaceLightShaftParams1 : packoffset(c75);
  float4 ScreenSpaceLightShaftParams2 : packoffset(c76);
  float4 ScreenSpaceLightPosition : packoffset(c77);
  float4 LensAndScreenCenter : packoffset(c78);
  float4 ScaleAndScaleIn : packoffset(c79);
  float4 HmdWarpParam : packoffset(c80);
  float4 ChromAbParam : packoffset(c81);
  float4 SMAA_SubsampleIndices : packoffset(c82);
}

cbuffer cbRadiosityPSC : register(b8)
{
  float4 RadiosityParams : packoffset(c0);
  float4 RadiosityDebugOutputWeights : packoffset(c1);
  float4 RadiositySSAOScale : packoffset(c2);
  float4 RadiosityParams2 : packoffset(c3);
}
SamplerState g_smp_gbuffer_rt0_SMP_s : register(s0);
SamplerState g_smp_gbuffer_rt1_SMP_s : register(s1);
SamplerState g_smp_gbuffer_rt2_SMP_s : register(s2);
SamplerState g_smp_gbuffer_rt3_SMP_s : register(s3);
SamplerState g_smp_gbuffer_ao_SMP_s : register(s6);
SamplerState g_smp_radiosity_irradiance_SMP_s : register(s12);
SamplerState g_smp_radiosity_direction_SMP_s : register(s13);
Texture2D<float4> g_smp_gbuffer_rt0_TEX : register(t0);
Texture2D<float4> g_smp_gbuffer_rt1_TEX : register(t1);
Texture2D<float4> g_smp_gbuffer_rt2_TEX : register(t2);
Texture2D<float4> g_smp_gbuffer_rt3_TEX : register(t3);
Texture2D<float4> g_smp_gbuffer_ao_TEX : register(t6);
Texture2D<float4> g_smp_radiosity_irradiance_TEX : register(t12);
Texture2D<float4> g_smp_radiosity_direction_TEX : register(t13);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : TEXCOORD0,
  float4 v1 : TEXCOORD1,
  float4 v2 : SV_Position0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6;
  uint4 bitmask;
  r0.xyzw = g_smp_gbuffer_rt1_TEX.Sample(g_smp_gbuffer_rt1_SMP_s, v0.xy).xwyz;
  r1.xyz = r0.xzw * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r0.z = dot(r1.xyz, r1.xyz);
  r0.z = rsqrt(r0.z);
  r1.xyz = r1.xyz * r0.zzz;
  r0.z = dot(v1.xyz, v1.xyz);
  r0.z = rsqrt(r0.z);
  r2.xyzw = g_smp_gbuffer_rt0_TEX.Sample(g_smp_gbuffer_rt0_SMP_s, v0.xy).xyzw;
  r0.x = r2.w;
  r0.xy = float2(3.891051e-003,3.891051e-003) * r0.xy;
  r3.xyzw = g_smp_gbuffer_rt2_TEX.Sample(g_smp_gbuffer_rt2_SMP_s, v0.xy).wxyz;
  r4.xyz = r3.yzw * r3.yzw;
  r4.xyz = r4.xyz + r4.xyz;
  r5.xyzw = g_smp_gbuffer_rt3_TEX.Sample(g_smp_gbuffer_rt3_SMP_s, v0.xy).xyzw;
  r3.y = r5.w;
  r0.xy = r3.xy * float2(9.961089e-001,9.961089e-001) + r0.xy;
  r3.xyzw = g_smp_radiosity_direction_TEX.Sample(g_smp_radiosity_direction_SMP_s, r0.xy).xyzw;
  r0.xyw = g_smp_radiosity_irradiance_TEX.Sample(g_smp_radiosity_irradiance_SMP_s, r0.xy).xyz;
  r0.xyw = HDR_EncodeScale2.www * r0.xyw;
  r3.xyzw = r3.xyzw * float4(9.765625e-004,9.765625e-004,9.765625e-004,9.765625e-004) + float4(1.953125e-003,1.953125e-003,1.953125e-003,1.953125e-003);
  r1.w = dot(r3.xyz, r3.xyz);
  r1.w = rsqrt(r1.w);
  r3.xyz = r3.xyz * r1.www;
  r6.xyz = -v1.xyz * r0.zzz + r3.xyz;
  r0.z = dot(r1.xyz, r3.xyz);
  r1.w = dot(r6.xyz, r6.xyz);
  r1.w = rsqrt(r1.w);
  r3.xyz = r6.xyz * r1.www;
  r1.x = dot(r1.xyz, r3.xyz);
  r1.y = RadiosityParams2.x * r5.x;
  r1.y = r1.y * -7.500000000e-001 + 7.500000000e-001;
  r1.z = r1.y * r1.y + -1.000000000e+000;
  r1.xy = r1.xy * r1.xy;
  r1.x = r1.x * r1.z + 1.000000000e+000;
  r1.x = r1.x * r1.x;
  r1.x = r1.y / r1.x;
  r1.y = max(r4.y, r4.x);
  r1.z = max(r4.z, 9.999999747e-005);
  r1.y = max(r1.z, r1.y);
  r1.y = 1.000000e+000 / r1.y;
  r1.yzw = r4.xyz * r1.yyy;
  r2.w = saturate(-r5.y * 2.000000000e+000 + 1.000000000e+000);
  r2.w = r2.w * r2.w;
  r3.x = saturate(r5.y * 2.000000000e+000 + -1.000000000e+000);
  r2.xyz = r5.zzz * r2.xyz;
  r2.xyz = HDR_EncodeScale3.yyy * r2.xyz;
  r1.yzw = r1.yzw * r3.xxx + r2.www;
  r3.xyz = r1.yzw * r1.xxx;
  r1.x = max(r0.z, 0.000000000e+000);
  r0.z = r0.z * 4.000000060e-001 + 6.000000238e-001;
  r3.xyz = r3.xyz * r1.xxx;
  r1.x = min(r1.x, 1.000000000e+000);
  r3.xyz = r3.xyz * r1.xxx;
  r1.yzw = r1.yzw * float3(1.200000e-001,1.200000e-001,1.200000e-001) + r3.xyz;
  r0.z = -r1.x + r0.z;
  r0.z = r3.w * r0.z + r1.x;
  r1.xyz = r0.zzz * r4.xyz + r1.yzw;
  r3.xyz = AmbientDiffuse.xyz * r4.xyz;
  r0.xyz = r0.xyw * r1.xyz + r3.xyz;
  r1.xy = RadiositySSAOScale.xy * v0.xy;
  r0.w = g_smp_gbuffer_ao_TEX.Sample(g_smp_gbuffer_ao_SMP_s, r1.xy).x;
  r0.xyz = r0.xyz * r0.www + r2.xyz;
  o0.xyz = HDR_EncodeScale.zzz * r0.xyz;
  o0.w = 1.000000000e+000;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer cbDefaultXSC
// {
//
//   float4x4 ViewProj;                 // Offset:    0 Size:    64 [unused]
//   float4x4 ViewMatrix;               // Offset:   64 Size:    64 [unused]
//   float4x4 SecondaryProj;            // Offset:  128 Size:    64 [unused]
//   float4x4 SecondaryViewProj;        // Offset:  192 Size:    64 [unused]
//   float4x4 SecondaryInvViewProj;     // Offset:  256 Size:    64 [unused]
//   float4 ConstantColour;             // Offset:  320 Size:    16 [unused]
//   float4 Time;                       // Offset:  336 Size:    16 [unused]
//   float4 CameraPosition;             // Offset:  352 Size:    16 [unused]
//   float4 InvProjectionParams;        // Offset:  368 Size:    16 [unused]
//   float4 SecondaryInvProjectionParams;// Offset:  384 Size:    16 [unused]
//   float4 ShaderDebugParams;          // Offset:  400 Size:    16 [unused]
//   float4 ToneMappingDebugParams;     // Offset:  416 Size:    16 [unused]
//   float4 HDR_EncodeScale2;           // Offset:  432 Size:    16
//   float4 EmissiveSurfaceMultiplier;  // Offset:  448 Size:    16 [unused]
//   float4 AlphaLight_OffsetScale;     // Offset:  464 Size:    16 [unused]
//   float4 TessellationScaleFactor;    // Offset:  480 Size:    16 [unused]
//   float4 FogNearColour;              // Offset:  496 Size:    16 [unused]
//   float4 FogFarColour;               // Offset:  512 Size:    16 [unused]
//   float4 FogParams;                  // Offset:  528 Size:    16 [unused]
//   float4 AdvanceEnvironmentShaderDebugParams;// Offset:  544 Size:    16 [unused]
//   float4 SMAA_RTMetrics;             // Offset:  560 Size:    16 [unused]
//
// }
//
// cbuffer cbDefaultPSC
// {
//
//   float4x4 AlphaLight_WorldtoClipMatrix;// Offset:    0 Size:    64 [unused]
//   float4x4 AlphaLight_CliptoWorldMatrix;// Offset:   64 Size:    64 [unused]
//   float4x4 ProjectorMatrix;          // Offset:  128 Size:    64 [unused]
//   float4x4 MotionBlurCurrInvViewProjection;// Offset:  192 Size:    64 [unused]
//   float4x4 MotionBlurPrevViewProjection;// Offset:  256 Size:    64 [unused]
//   float4x4 MotionBlurPrevSecViewProjection;// Offset:  320 Size:    64 [unused]
//   float4x4 Spotlight0_Transform;     // Offset:  384 Size:    64 [unused]
//   float4 TextureAnimation;           // Offset:  448 Size:    16 [unused]
//   float4 AmbientDiffuse;             // Offset:  464 Size:    16
//   float4 EnvironmentDebugParams;     // Offset:  480 Size:    16 [unused]
//   float4 ShadowFilterESMWeights;     // Offset:  496 Size:    16 [unused]
//   float4 LegacyDofParams;            // Offset:  512 Size:    16 [unused]
//   float4 OnePixelStepForS0;          // Offset:  528 Size:    16 [unused]
//   float4 RenderTargetSize;           // Offset:  544 Size:    16 [unused]
//   float4 ModelTrackerID;             // Offset:  560 Size:    16 [unused]
//   float4 Sharpness_Bloom_Controls;   // Offset:  576 Size:    16 [unused]
//   float4 Blur_Direction;             // Offset:  592 Size:    16 [unused]
//   float4 LightMeterDebugParams;      // Offset:  608 Size:    16 [unused]
//   float4 SourceResolution;           // Offset:  624 Size:    16 [unused]
//   float4 HDR_EncodeScale;            // Offset:  640 Size:    16
//   float4 OutputGamma;                // Offset:  656 Size:    16 [unused]
//   float4 AlphaLight_ScaleParams;     // Offset:  672 Size:    16 [unused]
//   float4 WrinkleMapWeights[6];       // Offset:  688 Size:    96 [unused]
//   float4 RadiosityCubeMapIdx;        // Offset:  784 Size:    16 [unused]
//   float4 HairShadingParams[8];       // Offset:  800 Size:   128 [unused]
//   float4 SkinShadingParams;          // Offset:  928 Size:    16 [unused]
//   float4 HDR_EncodeScale3;           // Offset:  944 Size:    16
//   float4 ScreenResolution[4];        // Offset:  960 Size:    64 [unused]
//   float4 VelocityParams;             // Offset: 1024 Size:    16 [unused]
//   float4 DeferredConstColor;         // Offset: 1040 Size:    16 [unused]
//   float4 Spotlight0_Shadow_Params;   // Offset: 1056 Size:    16 [unused]
//   float4 Spotlight0_ShadowMapDimensions;// Offset: 1072 Size:    16 [unused]
//   float4 ShadowFilterType;           // Offset: 1088 Size:    16 [unused]
//   float4 Spotlight0_ReverseZPerspective;// Offset: 1104 Size:    16 [unused]
//   float4 SpacesuitVisorParams;       // Offset: 1120 Size:    16 [unused]
//   float4 Directional_Light_Colour;   // Offset: 1136 Size:    16 [unused]
//   float4 Directional_Light_Direction;// Offset: 1152 Size:    16 [unused]
//   float4 EnvironmentMap_Params;      // Offset: 1168 Size:    16 [unused]
//   float4 Spotlight0_Shadow_Bias_GoboScale;// Offset: 1184 Size:    16 [unused]
//   float4 ScreenSpaceLightShaftParams1;// Offset: 1200 Size:    16 [unused]
//   float4 ScreenSpaceLightShaftParams2;// Offset: 1216 Size:    16 [unused]
//   float4 ScreenSpaceLightPosition;   // Offset: 1232 Size:    16 [unused]
//   float4 LensAndScreenCenter;        // Offset: 1248 Size:    16 [unused]
//   float4 ScaleAndScaleIn;            // Offset: 1264 Size:    16 [unused]
//   float4 HmdWarpParam;               // Offset: 1280 Size:    16 [unused]
//   float4 ChromAbParam;               // Offset: 1296 Size:    16 [unused]
//   float4 SMAA_SubsampleIndices;      // Offset: 1312 Size:    16 [unused]
//
// }
//
// cbuffer cbRadiosityPSC
// {
//
//   float4 RadiosityParams;            // Offset:    0 Size:    16 [unused]
//   float4 RadiosityDebugOutputWeights;// Offset:   16 Size:    16 [unused]
//   float4 RadiositySSAOScale;         // Offset:   32 Size:    16
//   float4 RadiosityParams2;           // Offset:   48 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// g_smp_gbuffer_rt0_SMP             sampler      NA          NA    0        1
// g_smp_gbuffer_rt1_SMP             sampler      NA          NA    1        1
// g_smp_gbuffer_rt2_SMP             sampler      NA          NA    2        1
// g_smp_gbuffer_rt3_SMP             sampler      NA          NA    3        1
// g_smp_gbuffer_ao_SMP              sampler      NA          NA    6        1
// g_smp_radiosity_irradiance_SMP    sampler      NA          NA   12        1
// g_smp_radiosity_direction_SMP     sampler      NA          NA   13        1
// g_smp_gbuffer_rt0_TEX             texture  float4          2d    0        1
// g_smp_gbuffer_rt1_TEX             texture  float4          2d    1        1
// g_smp_gbuffer_rt2_TEX             texture  float4          2d    2        1
// g_smp_gbuffer_rt3_TEX             texture  float4          2d    3        1
// g_smp_gbuffer_ao_TEX              texture  float4          2d    6        1
// g_smp_radiosity_irradiance_TEX    texture  float4          2d   12        1
// g_smp_radiosity_direction_TEX     texture  float4          2d   13        1
// cbDefaultXSC                      cbuffer      NA          NA    0        1
// cbDefaultPSC                      cbuffer      NA          NA    2        1
// cbRadiosityPSC                    cbuffer      NA          NA    8        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xy  
// TEXCOORD                 1   xyzw        1     NONE   float   xyz 
// SV_Position              0   xyzw        2      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[28], immediateIndexed
dcl_constantbuffer cb2[60], immediateIndexed
dcl_constantbuffer cb8[4], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s6, mode_default
dcl_sampler s12, mode_default
dcl_sampler s13, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t13
dcl_input_ps linear v0.xy
dcl_input_ps linear v1.xyz
dcl_output o0.xyzw
dcl_temps 7
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v0.xyxx, t1.xwyz, s1
mad r1.xyz, r0.xzwx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.z, r1.xyzx, r1.xyzx
rsq r0.z, r0.z
mul r1.xyz, r0.zzzz, r1.xyzx
dp3 r0.z, v1.xyzx, v1.xyzx
rsq r0.z, r0.z
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v0.xyxx, t0.xyzw, s0
mov r0.x, r2.w
mul r0.xy, r0.xyxx, l(0.003891, 0.003891, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, v0.xyxx, t2.wxyz, s2
mul r4.xyz, r3.yzwy, r3.yzwy
add r4.xyz, r4.xyzx, r4.xyzx
sample_indexable(texture2d)(float,float,float,float) r5.xyzw, v0.xyxx, t3.xyzw, s3
mov r3.y, r5.w
mad r0.xy, r3.xyxx, l(0.996109, 0.996109, 0.000000, 0.000000), r0.xyxx
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r0.xyxx, t13.xyzw, s13
sample_indexable(texture2d)(float,float,float,float) r0.xyw, r0.xyxx, t12.xywz, s12
mul r0.xyw, r0.xyxw, cb0[27].wwww
mad r3.xyzw, r3.xyzw, l(0.000977, 0.000977, 0.000977, 0.000977), l(0.001953, 0.001953, 0.001953, 0.001953)
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx
mad r6.xyz, -v1.xyzx, r0.zzzz, r3.xyzx
dp3 r0.z, r1.xyzx, r3.xyzx
dp3 r1.w, r6.xyzx, r6.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r6.xyzx
dp3 r1.x, r1.xyzx, r3.xyzx
mul r1.y, r5.x, cb8[3].x
mad r1.y, r1.y, l(-0.750000), l(0.750000)
mad r1.z, r1.y, r1.y, l(-1.000000)
mul r1.xy, r1.xyxx, r1.xyxx
mad r1.x, r1.x, r1.z, l(1.000000)
mul r1.x, r1.x, r1.x
div r1.x, r1.y, r1.x
max r1.y, r4.y, r4.x
max r1.z, r4.z, l(0.000100)
max r1.y, r1.z, r1.y
div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
mul r1.yzw, r1.yyyy, r4.xxyz
mad_sat r2.w, -r5.y, l(2.000000), l(1.000000)
mul r2.w, r2.w, r2.w
mad_sat r3.x, r5.y, l(2.000000), l(-1.000000)
mul r2.xyz, r2.xyzx, r5.zzzz
mul r2.xyz, r2.xyzx, cb2[59].yyyy
mad r1.yzw, r1.yyzw, r3.xxxx, r2.wwww
mul r3.xyz, r1.xxxx, r1.yzwy
max r1.x, r0.z, l(0.000000)
mad r0.z, r0.z, l(0.400000), l(0.600000)
mul r3.xyz, r1.xxxx, r3.xyzx
min r1.x, r1.x, l(1.000000)
mul r3.xyz, r1.xxxx, r3.xyzx
mad r1.yzw, r1.yyzw, l(0.000000, 0.120000, 0.120000, 0.120000), r3.xxyz
add r0.z, r0.z, -r1.x
mad r0.z, r3.w, r0.z, r1.x
mad r1.xyz, r0.zzzz, r4.xyzx, r1.yzwy
mul r3.xyz, r4.xyzx, cb2[29].xyzx
mad r0.xyz, r0.xywx, r1.xyzx, r3.xyzx
mul r1.xy, v0.xyxx, cb8[2].xyxx
sample_indexable(texture2d)(float,float,float,float) r0.w, r1.xyxx, t6.yzwx, s6
mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
mul o0.xyz, r0.xyzx, cb2[40].zzzz
mov o0.w, l(1.000000)
ret 
// Approximately 65 instruction slots used
 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
