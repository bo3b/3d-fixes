//Fix by mike_ar69
cbuffer cbDefaultVSC: register (b1)
{
  float4x4 ProjMatrix : packoffset(c0);
  float4x4 TextureTransform : packoffset(c4);
  float4x4 InvViewProj : packoffset(c8);
  float4x4 PrevViewProj : packoffset(c12);
  float4x4 PrevSecViewProj : packoffset(c16);
  float4 TextureScaleBias : packoffset(c20);
  float4 RenderTargetSizeVS : packoffset(c21);
  float4 RenderTargetResolutionVS : packoffset(c22);
  float4 MorphTargetParams : packoffset(c23);
  float4 OnePixelStepForS0VS : packoffset(c24);
  float4 ScreenRes[2] : packoffset(c25);
  float4 ClearSurfaceColor : packoffset(c27);
  float4 ClearSurfaceDepth : packoffset(c28);
  float4 VertexDepthClamp : packoffset(c29);
  float4 FlareScreenAspect : packoffset(c30);
  float4 DecalParams : packoffset(c31);
  float4 UserClipPlane0 : packoffset(c32);
  float4 UserClipPlane1 : packoffset(c33);
  float4 UserClipPlane2 : packoffset(c34);
  float4 UserClipPlane3 : packoffset(c35);
  float4 DecalScaleParams : packoffset(c36);
  float4 MipLevel : packoffset(c37);
}

cbuffer cbDefaultXSC : register(b0)
{
float4x4 ViewProj : packoffset(c0);
float4x4 ViewMatrix : packoffset(c4);
float4x4 SecondaryProj : packoffset(c8);
float4x4 SecondaryViewProj : packoffset(c12);
float4x4 SecondaryInvViewProj : packoffset(c16);
float4 ConstantColour : packoffset(c20);
float4 Time : packoffset(c21);
float4 CameraPosition : packoffset(c22);
float4 InvProjectionParams : packoffset(c23);
float4 SecondaryInvProjectionParams : packoffset(c24);
float4 ShaderDebugParams : packoffset(c25);
float4 ToneMappingDebugParams : packoffset(c26);
float4 HDR_EncodeScale2 : packoffset(c27);
float4 EmissiveSurfaceMultiplier : packoffset(c28);
float4 AlphaLight_OffsetScale : packoffset(c29);
float4 TessellationScaleFactor : packoffset(c30);
float4 FogNearColour : packoffset(c31);
float4 FogFarColour : packoffset(c32);
float4 FogParams : packoffset(c33);
float4 AdvanceEnvironmentShaderDebugParams : packoffset(c34);
float4 SMAA_RTMetrics : packoffset(c35);
}

cbuffer cbDefaultPSC : register(b2)
{
float4x4 AlphaLight_WorldtoClipMatrix : packoffset(c0);
float4x4 AlphaLight_CliptoWorldMatrix : packoffset(c4);
float4x4 ProjectorMatrix : packoffset(c8);
float4x4 MotionBlurCurrInvViewProjection : packoffset(c12);
float4x4 MotionBlurPrevViewProjection : packoffset(c16);
float4x4 MotionBlurPrevSecViewProjection : packoffset(c20);
float4x4 Spotlight0_Transform : packoffset(c24);
float4 TextureAnimation : packoffset(c28);
float4 AmbientDiffuse : packoffset(c29);
float4 EnvironmentDebugParams : packoffset(c30);
float4 ShadowFilterESMWeights : packoffset(c31);
float4 LegacyDofParams : packoffset(c32);
float4 OnePixelStepForS0 : packoffset(c33);
float4 RenderTargetSize : packoffset(c34);
float4 ModelTrackerID : packoffset(c35);
float4 Sharpness_Bloom_Controls : packoffset(c36);
float4 Blur_Direction : packoffset(c37);
float4 LightMeterDebugParams : packoffset(c38);
float4 SourceResolution : packoffset(c39);
float4 HDR_EncodeScale : packoffset(c40);
float4 OutputGamma : packoffset(c41);
float4 AlphaLight_ScaleParams : packoffset(c42);
float4 WrinkleMapWeights[6] : packoffset(c43);
float4 RadiosityCubeMapIdx : packoffset(c49);
float4 HairShadingParams[8] : packoffset(c50);
float4 SkinShadingParams : packoffset(c58);
float4 HDR_EncodeScale3 : packoffset(c59);
float4 ScreenResolution[4] : packoffset(c60);
float4 VelocityParams : packoffset(c64);
float4 DeferredConstColor : packoffset(c65);
float4 Spotlight0_Shadow_Params : packoffset(c66);
float4 Spotlight0_ShadowMapDimensions : packoffset(c67);
float4 ShadowFilterType : packoffset(c68);
float4 Spotlight0_ReverseZPerspective : packoffset(c69);
float4 SpacesuitVisorParams : packoffset(c70);
float4 Directional_Light_Colour : packoffset(c71);
float4 Directional_Light_Direction : packoffset(c72);
float4 EnvironmentMap_Params : packoffset(c73);
float4 Spotlight0_Shadow_Bias_GoboScale : packoffset(c74);
float4 ScreenSpaceLightShaftParams1 : packoffset(c75);
float4 ScreenSpaceLightShaftParams2 : packoffset(c76);
float4 ScreenSpaceLightPosition : packoffset(c77);
float4 LensAndScreenCenter : packoffset(c78);
float4 ScaleAndScaleIn : packoffset(c79);
float4 HmdWarpParam : packoffset(c80);
float4 ChromAbParam : packoffset(c81);
float4 SMAA_SubsampleIndices : packoffset(c82);
}
SamplerState frameSamplerReg_SMP_s : register(s7);
SamplerState depthSamplerReg_SMP_s : register(s8);
SamplerState normalSamplerReg_SMP_s : register(s12);
SamplerState specularSamplerReg_SMP_s : register(s13);
SamplerState spotlight0ShadowSamplerReg_SMP_s : register(s14);
SamplerState spotlight0ProjectiveReg_SMP_s : register(s15);
SamplerComparisonState spotlight0ShadowSamplerReg_CMP_s : register(s6);
Texture2D<float4> frameSamplerReg_TEX : register(t7);
Texture2D<float4> depthSamplerReg_TEX : register(t8);
Texture2D<float4> normalSamplerReg_TEX : register(t12);
Texture2D<float4> specularSamplerReg_TEX : register(t13);
Texture2D<float4> spotlight0ShadowSamplerReg_TEX : register(t14);
Texture2D<float4> spotlight0ProjectiveReg_TEX : register(t15);

Texture2D<float4> StereoParams : register(t125);

void main(
float4 v0 : TEXCOORD0,
float4 v1 : TEXCOORD1,
float4 v2 : TEXCOORD2,
float4 v3 : TEXCOORD3,
float4 v4 : TEXCOORD4,
float4 v5 : TEXCOORD5,
float4 v6 : TEXCOORD6,
float4 v7 : TEXCOORD7,
float4 v8 : TEXCOORD8,
out float4 o0 : SV_Target0)
{
float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16;
uint4 bitmask;
r0.x = 1.000000e+000 / v3.w;
r0.yz = v4.xy * r0.xx;
r1.xyz = v2.yzw * r0.xxx;
r0.x = depthSamplerReg_TEX.Sample(depthSamplerReg_SMP_s, r0.yz).x;
r0.w = r0.x < 0.000000000e+000;
r1.w = -r0.x * SecondaryInvProjectionParams.y + SecondaryInvProjectionParams.z;
r1.w = SecondaryInvProjectionParams.x / r1.w;
r1.w = max(r1.w, 0.000000000e+000);
r0.x = r0.x * InvProjectionParams.y + InvProjectionParams.z;
r0.x = InvProjectionParams.x / r0.x;
r0.x = max(r0.x, 0.000000000e+000);
r0.x = r0.w ? r1.w : r0.x;

r1.xyz = r1.xyz * r0.xxx + CameraPosition.xyz;

float4 stereo = StereoParams.Load(0);
float4 r25;
r1.w =1.0e+000;
r25.x = dot(r1.xyzw, ViewProj._m00_m10_m20_m30);
r25.y = dot(r1.xyzw, ViewProj._m01_m11_m21_m31);
r25.z = dot(r1.xyzw, ViewProj._m02_m12_m22_m32);
r25.w = dot(r1.xyzw, ViewProj._m03_m13_m23_m33);
r25.x -= stereo.x * (r25.w - stereo.y);
r1.x = dot(r25.xyzw, InvViewProj._m00_m10_m20_m30);
r1.y = dot(r25.xyzw, InvViewProj._m01_m11_m21_m31);
r1.z = dot(r25.xyzw, InvViewProj._m02_m12_m22_m32);
r1.w = dot(r25.xyzw, InvViewProj._m03_m13_m23_m33);
r1.xyzw /= r1.wwww;


r2.xyz = normalSamplerReg_TEX.Sample(normalSamplerReg_SMP_s, r0.yz).xyz;
r2.xyz = r2.xyz * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
r0.x = dot(r2.xyz, r2.xyz);
r0.x = rsqrt(r0.x);
r2.xyz = r2.xyz * r0.xxx;
r0.x = dot(v6.xyz, v6.xyz);
r0.x = rsqrt(r0.x);
r3.xyz = v0.xyz + -r1.xyz;
r0.w = dot(r3.xyz, r3.xyz);
r2.w = rsqrt(r0.w);
r4.xyz = r3.xyz * r2.www;
r2.w = dot(r4.xyz, r2.xyz);
r3.xyz = v8.xxx * v5.xyz + r3.xyz;
r3.x = dot(r3.xyz, r3.xyz);
r3.x = sqrt(r3.x);
r3.x = saturate(v7.w / r3.x);
r3.y = 1.000000000e+000 + -r2.w;
r3.z = 1.000000000e+000 + r3.x;
r3.y = r3.y / r3.z;
r3.z = r3.y * r3.x;
r5.xyz = frameSamplerReg_TEX.Sample(frameSamplerReg_SMP_s, r0.yz).xyz;
r0.yz = specularSamplerReg_TEX.Sample(specularSamplerReg_SMP_s, r0.yz).xy;
r5.xyz = r5.xyz * r5.xyz;
r5.xyz = r5.xyz + r5.xyz;
r3.w = saturate(r0.z * 2.000000000e+000 + -1.000000000e+000);
r0.z = saturate(-r0.z * 2.000000000e+000 + 1.000000000e+000);
r0.z = r0.z * r0.z;
r4.w = max(r5.y, r5.x);
r5.w = max(r5.z, 9.999999747e-005);
r4.w = max(r4.w, r5.w);
r4.w = 1.000000e+000 / r4.w;
r6.xyz = r5.xyz * r4.www;
r6.xyz = r3.www * r6.xyz + r0.zzz;
r0.z = sqrt(r0.w);
r0.w = -v0.w + r0.z;
r0.w = max(r0.w, 0.000000000e+000);
r3.w = 1.000000e+000 / v1.w;
r3.w = saturate(r3.w * r0.w);
r4.w = r3.w * -2.000000000e+000 + 3.000000000e+000;
r3.w = r3.w * r3.w;
r3.w = -r4.w * r3.w + 1.000000000e+000;
r0.w = r0.w * r0.w + v2.x;
r0.w = r3.w / r0.w;
r3.w = dot(r4.xyz, v5.xyz);
r3.w = saturate(-r3.w);
r4.w = v4.w + -v4.z;
r3.w = -v4.z + r3.w;
r4.w = 1.000000e+000 / r4.w;
r3.w = saturate(r4.w * r3.w);
r4.w = r3.w * -2.000000000e+000 + 3.000000000e+000;
r3.w = r3.w * r3.w;
r3.w = r4.w * r3.w;
r0.w = r3.w * r0.w;
r0.y = v7.x * r0.y;
r2.w = saturate(r3.y * r3.x + r2.w);
r0.y = r0.y * -7.500000000e-001 + 7.500000000e-001;
r3.xyw = v6.xyz * r0.xxx + r4.xyz;
r0.x = dot(r3.xyw, r3.xyw);
r0.x = rsqrt(r0.x);
r3.xyw = r3.xyw * r0.xxx;
r0.x = r0.y * r0.y;
r2.x = dot(r2.xyz, r3.xyw);
r2.x = r2.x * r2.x;
r0.y = r0.y * r0.y + -1.000000000e+000;
r0.y = r2.x * r0.y + 1.000000000e+000;
r0.y = r0.y * r0.y;
r0.x = r0.x / r0.y;
r2.xyz = r6.xyz * r0.xxx;
r3.xyw = r5.xyz * r2.www;
r2.xyz = r2.xyz * r2.www;
r0.xyw = v1.xyz * r0.www;
r3.xyw = r0.xyw * r3.xyw;
r1.w = 1.000000000e+000;
r4.x = dot(r1.xyzw, Spotlight0_Transform._m00_m10_m20_m30);
r4.y = dot(r1.xyzw, Spotlight0_Transform._m01_m11_m21_m31);
r4.z = dot(r1.xyzw, Spotlight0_Transform._m02_m12_m22_m32);
r1.x = dot(r1.xyzw, Spotlight0_Transform._m03_m13_m23_m33);
r1.yzw = r4.xyz / r1.xxx;
r5.xyw = float3(5.000000e-001,-5.000000e-001,-5.000000e-001) * r1.yzz;
r5.z = Spotlight0_Shadow_Bias_GoboScale.y * r1.y;
r5.xyzw = float4(5.000000e-001,5.000000e-001,5.000000e-001,5.000000e-001) + r5.xyzw;
r1.x = v7.z * r1.x + r4.z;
r1.x = r1.x >= 0.000000000e+000;
r1.x = r1.x ? 1.000000 : 0;
r1.y = (int)ShadowFilterType.x;
r1.z = r1.y == 4;
if (r1.z != 0) {
r1.z = r1.w * Spotlight0_ReverseZPerspective.y + Spotlight0_ReverseZPerspective.z;
r1.z = Spotlight0_ReverseZPerspective.x / r1.z;
r1.z = -Spotlight0_Shadow_Bias_GoboScale.x + r1.z;
r2.w = Spotlight0_ReverseZPerspective.y * r1.z;
r1.z = -r1.z * Spotlight0_ReverseZPerspective.z + Spotlight0_ReverseZPerspective.x;
r1.z = r1.z / r2.w;
r1.z = spotlight0ShadowSamplerReg_TEX.SampleCmpLevelZero(spotlight0ShadowSamplerReg_CMP_s, r5.xy, r1.z).x;
} else {
r2.w = r1.y == 1;
if (r2.w != 0) {
r2.w = (int)Spotlight0_Shadow_Params.y;
if (r2.w == 0) {
r1.z = 1.000000000e+000;
} else {
r4.x = r1.w * Spotlight0_ReverseZPerspective.y + Spotlight0_ReverseZPerspective.z;
r4.x = Spotlight0_ReverseZPerspective.x / r4.x;
r4.x = -Spotlight0_Shadow_Bias_GoboScale.x + r4.x;
r4.y = Spotlight0_ReverseZPerspective.y * r4.x;
r4.x = -r4.x * Spotlight0_ReverseZPerspective.z + Spotlight0_ReverseZPerspective.x;
r4.x = r4.x / r4.y;
r4.y = r2.w == 1;
if (r4.y != 0) {
r1.z = spotlight0ShadowSamplerReg_TEX.SampleCmpLevelZero(spotlight0ShadowSamplerReg_CMP_s, r5.xy, r4.x).x;
} else {
r4.y = 1.000000e+000 / Spotlight0_Shadow_Params.x;
r4.z = 5.000000000e-001 * r4.y;
r4.w = (int)r2.w + -1;
r4.w = r4.w;
r4.z = r4.z * r4.w;
r4.w = 0.000000000e+000;
r6.x = 0.000000000e+000;
while (true) {
r6.y = (int)r6.x >= (int)r2.w;
if (r6.y != 0) break;
r7.y = r6.x;
r6.y = r4.w;
r6.z = 0.000000000e+000;
while (true) {
r6.w = (int)r6.z >= (int)r2.w;
if (r6.w != 0) break;
r7.x = r6.z;
r7.xz = r7.xy * r4.yy + -r4.zz;
r7.xz = r7.xz + r5.xy;
r6.w = spotlight0ShadowSamplerReg_TEX.SampleCmpLevelZero(spotlight0ShadowSamplerReg_CMP_s, r7.xz, r4.x).x;
r6.y = r6.y + r6.w;
r6.z = (int)r6.z + 1;
}
r4.w = r6.y;
r6.x = (int)r6.x + 1;
}
r2.w = (int)r2.w * (int)r2.w;
r2.w = r2.w;
r1.z = r4.w / r2.w;
}
}
} else {
r2.w = r1.y == 2;
if (r2.w != 0) {
r2.w = r1.w * Spotlight0_ReverseZPerspective.y + Spotlight0_ReverseZPerspective.z;
r2.w = Spotlight0_ReverseZPerspective.x / r2.w;
r2.w = -Spotlight0_Shadow_Bias_GoboScale.x + r2.w;
r4.x = Spotlight0_ReverseZPerspective.y * r2.w;
r2.w = -r2.w * Spotlight0_ReverseZPerspective.z + Spotlight0_ReverseZPerspective.x;
r2.w = r2.w / r4.x;
r4.xy = Spotlight0_ShadowMapDimensions.xy * r5.xy + float2(5.000000e-001,5.000000e-001);
r4.zw = floor(r4.xy);
r4.xy = r4.xy + -r4.zw;
r4.zw = -r4.xy * Spotlight0_ShadowMapDimensions.zw + r5.xy;
r6.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(-5, -5)).xyzw;
r7.xyzw = r6.xyzw >= r2.wwww;
r7.xyzw = r7.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r8.x = dot(r7.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.x = dot(r6.xyzw, r7.xyzw);
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(-3, -5)).xyzw;
r9.xyzw = r7.xyzw >= r2.wwww;
r9.xyzw = r9.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.y = dot(r9.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r8.x + r6.y;
r6.z = dot(r7.xyzw, r9.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(-1, -5)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(1, -5)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(3, -5)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(5, -5)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(-5, -3)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(-3, -3)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(-1, -3)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(1, -3)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(3, -3)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(5, -3)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(-5, -1)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(-3, -1)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(-1, -1)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(1, -1)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(3, -1)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(5, -1)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(-5, 1)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(-3, 1)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(-1, 1)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(1, 1)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(3, 1)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(5, 1)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(-5, 3)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(-3, 3)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(-1, 3)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(1, 3)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(3, 3)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(5, 3)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(-5, 5)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(-3, 5)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(-1, 5)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(1, 5)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(3, 5)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r7.xyzw = spotlight0ShadowSamplerReg_TEX.Gather(spotlight0ShadowSamplerReg_SMP_s, r4.zw, int2(5, 5)).xyzw;
r8.xyzw = r7.xyzw >= r2.wwww;
r8.xyzw = r8.xyzw ? float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000) : float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000);
r6.z = dot(r8.xyzw, float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000));
r6.y = r6.y + r6.z;
r6.z = dot(r7.xyzw, r8.xyzw);
r6.x = r6.x + r6.z;
r6.z = 0.000000000e+000 < r6.y;
r6.x = r6.x / r6.y;
r6.y = -r6.x + r2.w;
r6.y = Spotlight0_ShadowMapDimensions.x * r6.y;
r6.y = 1.000000015e-001 * r6.y;
r6.x = saturate(r6.y / r6.x);
r6.x = r6.x * r6.x;
r6.x = r6.z ? r6.x : 0;
r6.y = r6.x * r6.x;
r6.z = r6.y * r6.x;
r6.w = 3.000000000e+000 * r6.y;
r7.x = 1.000000000e+000 + -r6.x;
r7.y = r7.x * r6.w;
r7.y = 2.000000030e-001 * r7.y;
r7.z = r6.y * r6.x + r7.y;
r7.w = 1.400000000e+001 * r6.z;
r7.w = r7.z * 1.000000000e+001 + r7.w;
r8.x = r7.x * r7.x;
r8.y = r8.x * r6.x;
r8.zw = float2(3.000000e+000,6.000000e-001) * r8.yy;
r8.zw = r6.yy * r6.xx + r8.zw;
r8.zw = r6.ww * r7.xx + r8.zw;
r7.w = r8.w * 7.000000000e+000 + r7.w;
r7.w = r7.w + r7.z;
r7.w = r6.z * 2.000000000e+000 + r7.w;
r7.w = r7.w + r7.z;
r7.w = r7.w + r8.w;
r7.w = r8.z * 5.000000000e+000 + r7.w;
r7.w = r7.w + r8.w;
r7.w = r7.w + r7.z;
r7.w = r6.z * 2.000000000e+000 + r7.w;
r7.w = r7.w + r7.z;
r7.w = r7.w + r8.w;
r7.w = r7.w + r8.z;
r9.x = r8.x * r7.x;
r9.x = r9.x * 8.000000119e-001 + r6.z;
r9.x = r8.y * 3.000000000e+000 + r9.x;
r9.x = r6.w * r7.x + r9.x;
r7.w = r9.x * 3.000000000e+000 + r7.w;
r7.w = r7.w + r8.z;
r7.w = r7.w + r8.w;
r7.w = r7.w + r7.z;
r7.w = r6.z * 2.000000000e+000 + r7.w;
r7.w = r7.w + r7.z;
r7.w = r7.w + r8.w;
r7.w = r7.w + r8.z;
r7.w = r7.w + r9.x;
r8.x = r8.x * r7.x + r6.z;
r8.x = r8.y * 3.000000000e+000 + r8.x;
r6.w = r6.w * r7.x + r8.x;
r7.x = r7.w + r6.w;
r7.x = r7.x + r9.x;
r7.x = r7.x + r8.z;
r7.x = r7.x + r8.w;
r7.x = r7.x + r7.z;
r7.x = r6.z * 2.000000000e+000 + r7.x;
r7.x = r7.x + r7.z;
r7.x = r7.x + r8.w;
r7.x = r7.x + r8.z;
r7.x = r9.x * 3.000000000e+000 + r7.x;
r7.x = r7.x + r8.z;
r7.x = r7.x + r8.w;
r7.x = r7.x + r7.z;
r7.x = r6.z * 2.000000000e+000 + r7.x;
r7.x = r7.x + r7.z;
r7.x = r7.x + r8.w;
r7.x = r8.z * 5.000000000e+000 + r7.x;
r7.x = r7.x + r8.w;
r7.x = r7.x + r7.z;
r7.x = r6.z * 2.000000000e+000 + r7.x;
r7.x = r7.x + r7.z;
r7.x = r8.w * 7.000000000e+000 + r7.x;
r7.x = r7.x + r7.z;
r7.x = r6.z * 2.000000000e+000 + r7.x;
r7.x = r7.z * 9.000000000e+000 + r7.x;
r7.x = r6.z * 1.200000000e+001 + r7.x;
r10.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(-5,-5)).xyzw;
r7.w = 1.000000000e+000 + -r4.y;
r8.x = -r6.z * r4.x + r6.z;
r9.yz = r10.wx * r8.xx;
r9.yw = r10.zy * r6.zz + r9.yz;
r8.y = r9.w * r4.y;
r8.y = r7.w * r9.y + r8.y;
r11.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(-3,-5)).xyzw;
r9.y = dot(r11.wz, r6.zz);
r8.y = r7.w * r9.y + r8.y;
r9.y = dot(r11.xy, r6.zz);
r8.y = r4.y * r9.y + r8.y;
r12.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(-1,-5)).xyzw;
r9.y = dot(r12.wz, r6.zz);
r8.y = r7.w * r9.y + r8.y;
r9.y = dot(r12.xy, r6.zz);
r8.y = r4.y * r9.y + r8.y;
r13.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(1,-5)).xyzw;
r9.y = dot(r13.wz, r6.zz);
r8.y = r7.w * r9.y + r8.y;
r9.y = dot(r13.xy, r6.zz);
r8.y = r4.y * r9.y + r8.y;
r14.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(3,-5)).xyzw;
r9.y = dot(r14.wz, r6.zz);
r8.y = r7.w * r9.y + r8.y;
r9.y = dot(r14.xy, r6.zz);
r8.y = r4.y * r9.y + r8.y;
r15.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(5,-5)).xyzw;
r9.yw = r15.zy * r4.xx;
r9.yw = r9.yw * r6.zz;
r10.xz = r15.wx * r6.zz + r9.yw;
r8.y = r7.w * r10.x + r8.y;
r8.y = r4.y * r10.z + r8.y;
r16.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(-5,-3)).xyzw;
r6.x = r6.y * r6.x + -r7.z;
r6.x = r4.x * r6.x + r7.z;
r10.xz = r16.yz * r6.xx;
r10.xz = r16.xw * r8.xx + r10.xz;
r6.y = r7.w * r10.z + r8.y;
r6.y = r4.y * r10.x + r6.y;
r8.y = r10.y * r6.x + r9.z;
r6.y = r7.w * r8.y + r6.y;
r6.y = r4.y * r10.z + r6.y;
r16.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(-3,-3)).xyzw;
r8.y = -r8.w + r7.z;
r8.y = r4.x * r8.y + r8.w;
r9.yz = r16.wx * r8.yy;
r10.yz = r16.zy * r8.ww + r9.yz;
r6.y = r7.w * r10.y + r6.y;
r6.y = r4.y * r10.z + r6.y;
r9.y = dot(r11.xy, r7.zz);
r6.y = r7.w * r9.y + r6.y;
r9.y = dot(r16.wz, r7.zz);
r6.y = r4.y * r9.y + r6.y;
r11.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(-1,-3)).xyzw;
r9.y = dot(r11.wz, r8.ww);
r6.y = r7.w * r9.y + r6.y;
r9.y = dot(r11.xy, r8.ww);
r6.y = r4.y * r9.y + r6.y;
r9.y = dot(r12.xy, r7.zz);
r6.y = r7.w * r9.y + r6.y;
r9.y = dot(r11.wz, r7.zz);
r6.y = r4.y * r9.y + r6.y;
r12.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(1,-3)).xyzw;
r9.y = dot(r12.wz, r8.ww);
r6.y = r7.w * r9.y + r6.y;
r9.y = dot(r12.xy, r8.ww);
r6.y = r4.y * r9.y + r6.y;
r9.y = dot(r13.xy, r7.zz);
r6.y = r7.w * r9.y + r6.y;
r9.y = dot(r12.wz, r7.zz);
r6.y = r4.y * r9.y + r6.y;
r13.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(3,-3)).xyzw;
r9.y = r8.w + -r7.z;
r9.y = r4.x * r9.y + r7.z;
r10.yz = r13.zy * r9.yy;
r10.yw = r13.wx * r8.ww + r10.yz;
r6.y = r7.w * r10.y + r6.y;
r6.y = r4.y * r10.w + r6.y;
r10.y = dot(r14.xy, r7.zz);
r6.y = r7.w * r10.y + r6.y;
r10.y = dot(r13.wz, r7.zz);
r6.y = r4.y * r10.y + r6.y;
r14.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(5,-3)).xyzw;
r7.y = r4.x * r7.y + r6.z;
r10.yw = r14.yz * r4.xx;
r10.yw = r10.yw * r6.zz;
r10.yw = r14.xw * r7.yy + r10.yw;
r6.y = r7.w * r10.w + r6.y;
r6.y = r4.y * r10.y + r6.y;
r9.w = r15.x * r7.y + r9.w;
r6.y = r7.w * r9.w + r6.y;
r6.y = r4.y * r10.w + r6.y;
r14.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(-5,-1)).xyzw;
r11.zw = r14.yz * r6.xx;
r11.zw = r14.xw * r8.xx + r11.zw;
r6.y = r7.w * r11.w + r6.y;
r6.y = r4.y * r11.z + r6.y;
r6.y = r7.w * r10.x + r6.y;
r6.y = r4.y * r11.w + r6.y;
r14.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(-3,-1)).xyzw;
r10.xw = r8.wz + -r8.zw;
r10.xw = r4.xx * r10.xw + r8.zw;
r12.zw = r14.yz * r10.xx;
r12.zw = r14.xw * r8.yy + r12.zw;
r6.y = r7.w * r12.w + r6.y;
r6.y = r4.y * r12.z + r6.y;
r9.z = r16.y * r10.x + r9.z;
r6.y = r7.w * r9.z + r6.y;
r6.y = r4.y * r12.w + r6.y;
r14.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(-1,-1)).xyzw;
r9.z = -r9.x + r8.z;
r9.z = r4.x * r9.z + r9.x;
r13.yz = r14.wx * r9.zz;
r13.yw = r14.zy * r9.xx + r13.yz;
r6.y = r7.w * r13.y + r6.y;
r6.y = r4.y * r13.w + r6.y;
r9.w = dot(r11.xy, r8.zz);
r6.y = r7.w * r9.w + r6.y;
r9.w = dot(r14.wz, r8.zz);
r6.y = r4.y * r9.w + r6.y;
r15.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(1,-1)).xyzw;
r9.w = r9.x + -r8.z;
r9.w = r4.x * r9.w + r8.z;
r11.xy = r15.zy * r9.ww;
r11.xw = r15.wx * r9.xx + r11.xy;
r6.y = r7.w * r11.x + r6.y;
r6.y = r4.y * r11.w + r6.y;
r11.x = dot(r12.xy, r8.zz);
r6.y = r7.w * r11.x + r6.y;
r11.x = dot(r15.wz, r8.zz);
r6.y = r4.y * r11.x + r6.y;
r16.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(3,-1)).xyzw;
r11.xw = r16.yz * r9.yy;
r11.xw = r16.xw * r10.ww + r11.xw;
r6.y = r7.w * r11.w + r6.y;
r6.y = r4.y * r11.x + r6.y;
r10.z = r13.x * r10.w + r10.z;
r6.y = r7.w * r10.z + r6.y;
r6.y = r4.y * r11.w + r6.y;
r16.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(5,-1)).xyzw;
r12.xy = r16.yz * r4.xx;
r12.xy = r12.xy * r6.zz;
r12.xy = r16.xw * r7.yy + r12.xy;
r6.y = r7.w * r12.y + r6.y;
r6.y = r4.y * r12.x + r6.y;
r6.y = r7.w * r10.y + r6.y;
r6.y = r4.y * r12.y + r6.y;
r16.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(-5,1)).xyzw;
r10.yz = r16.yz * r6.xx;
r10.yz = r16.xw * r8.xx + r10.yz;
r6.y = r7.w * r10.z + r6.y;
r6.y = r4.y * r10.y + r6.y;
r6.y = r7.w * r11.z + r6.y;
r6.y = r4.y * r10.z + r6.y;
r16.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(-3,1)).xyzw;
r11.zw = r16.yz * r10.xx;
r11.zw = r16.xw * r8.yy + r11.zw;
r6.y = r7.w * r11.w + r6.y;
r6.y = r4.y * r11.z + r6.y;
r6.y = r7.w * r12.z + r6.y;
r6.y = r4.y * r11.w + r6.y;
r16.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(-1,1)).xyzw;
r12.yz = r16.wx * r9.zz;
r12.zw = r16.zy * r9.xx + r12.yz;
r6.y = r7.w * r12.z + r6.y;
r6.y = r4.y * r12.w + r6.y;
r9.z = r9.x + -r6.w;
r9.z = r4.x * r9.z + r6.w;
r10.z = r14.y * r9.z + r13.z;
r6.y = r7.w * r10.z + r6.y;
r9.z = r16.z * r9.z + r12.y;
r6.y = r4.y * r9.z + r6.y;
r13.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(1,1)).xyzw;
r9.zw = r13.zy * r9.ww;
r12.yz = r13.wx * r9.xx + r9.zw;
r6.y = r7.w * r12.y + r6.y;
r6.y = r4.y * r12.z + r6.y;
r6.w = r6.w + -r9.x;
r6.w = r4.x * r6.w + r9.x;
r9.x = r15.x * r6.w + r11.y;
r6.y = r7.w * r9.x + r6.y;
r6.w = r13.w * r6.w + r9.z;
r6.y = r4.y * r6.w + r6.y;
r14.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(3,1)).xyzw;
r9.xz = r14.yz * r9.yy;
r9.xz = r14.xw * r10.ww + r9.xz;
r6.y = r7.w * r9.z + r6.y;
r6.y = r4.y * r9.x + r6.y;
r6.y = r7.w * r11.x + r6.y;
r6.y = r4.y * r9.z + r6.y;
r14.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(5,1)).xyzw;
r9.zw = r14.yz * r4.xx;
r9.zw = r9.zw * r6.zz;
r9.zw = r14.xw * r7.yy + r9.zw;
r6.y = r7.w * r9.w + r6.y;
r6.y = r4.y * r9.z + r6.y;
r6.y = r7.w * r12.x + r6.y;
r6.y = r4.y * r9.w + r6.y;
r12.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(-5,3)).xyzw;
r11.xy = r12.yz * r6.xx;
r11.xy = r12.xw * r8.xx + r11.xy;
r6.y = r7.w * r11.y + r6.y;
r6.y = r4.y * r11.x + r6.y;
r6.y = r7.w * r10.y + r6.y;
r6.y = r4.y * r11.y + r6.y;
r12.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(-3,3)).xyzw;
r10.yz = r12.wx * r8.yy;
r11.yw = r12.zy * r8.ww + r10.yz;
r6.y = r7.w * r11.y + r6.y;
r6.y = r4.y * r11.w + r6.y;
r6.y = r7.w * r11.z + r6.y;
r6.w = r12.z * r10.x + r10.y;
r6.y = r4.y * r6.w + r6.y;
r14.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(-1,3)).xyzw;
r6.w = dot(r14.wz, r8.ww);
r6.y = r7.w * r6.w + r6.y;
r6.w = dot(r14.xy, r8.ww);
r6.y = r4.y * r6.w + r6.y;
r6.w = dot(r16.xy, r8.zz);
r6.y = r7.w * r6.w + r6.y;
r6.w = dot(r14.wz, r8.zz);
r6.y = r4.y * r6.w + r6.y;
r15.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(1,3)).xyzw;
r6.w = dot(r15.wz, r8.ww);
r6.y = r7.w * r6.w + r6.y;
r6.w = dot(r15.xy, r8.ww);
r6.y = r4.y * r6.w + r6.y;
r6.w = dot(r13.xy, r8.zz);
r6.y = r7.w * r6.w + r6.y;
r6.w = dot(r15.wz, r8.zz);
r6.y = r4.y * r6.w + r6.y;
r13.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(3,3)).xyzw;
r8.yz = r13.zy * r9.yy;
r8.zw = r13.wx * r8.ww + r8.yz;
r6.y = r7.w * r8.z + r6.y;
r6.y = r4.y * r8.w + r6.y;
r6.y = r7.w * r9.x + r6.y;
r6.w = r13.w * r10.w + r8.y;
r6.y = r4.y * r6.w + r6.y;
r10.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(5,3)).xyzw;
r8.yz = r10.yz * r4.xx;
r8.yz = r8.yz * r6.zz;
r8.yz = r10.xw * r7.yy + r8.yz;
r6.y = r7.w * r8.z + r6.y;
r6.y = r4.y * r8.y + r6.y;
r6.y = r7.w * r9.z + r6.y;
r6.y = r4.y * r8.z + r6.y;
r9.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(-5,5)).xyzw;
r8.xz = r9.wx * r8.xx;
r8.zw = r9.zy * r6.zz + r8.xz;
r6.y = r7.w * r8.z + r6.y;
r6.y = r4.y * r8.w + r6.y;
r6.y = r7.w * r11.x + r6.y;
r6.x = r9.z * r6.x + r8.x;
r6.x = r4.y * r6.x + r6.y;
r9.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(-3,5)).xyzw;
r6.y = dot(r9.wz, r6.zz);
r6.x = r7.w * r6.y + r6.x;
r6.y = dot(r9.xy, r6.zz);
r6.x = r4.y * r6.y + r6.x;
r6.y = dot(r12.xy, r7.zz);
r6.x = r7.w * r6.y + r6.x;
r6.y = dot(r9.wz, r7.zz);
r6.x = r4.y * r6.y + r6.x;
r9.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(-1,5)).xyzw;
r6.y = dot(r9.wz, r6.zz);
r6.x = r7.w * r6.y + r6.x;
r6.y = dot(r9.xy, r6.zz);
r6.x = r4.y * r6.y + r6.x;
r6.y = dot(r14.xy, r7.zz);
r6.x = r7.w * r6.y + r6.x;
r6.y = dot(r9.wz, r7.zz);
r6.x = r4.y * r6.y + r6.x;
r9.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(1,5)).xyzw;
r6.y = dot(r9.wz, r6.zz);
r6.x = r7.w * r6.y + r6.x;
r6.y = dot(r9.xy, r6.zz);
r6.x = r4.y * r6.y + r6.x;
r6.y = dot(r15.xy, r7.zz);
r6.x = r7.w * r6.y + r6.x;
r6.y = dot(r9.wz, r7.zz);
r6.x = r4.y * r6.y + r6.x;
r9.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(3,5)).xyzw;
r6.y = dot(r9.wz, r6.zz);
r6.x = r7.w * r6.y + r6.x;
r6.y = dot(r9.xy, r6.zz);
r6.x = r4.y * r6.y + r6.x;
r6.y = dot(r13.xy, r7.zz);
r6.x = r7.w * r6.y + r6.x;
r6.y = dot(r9.wz, r7.zz);
r6.x = r4.y * r6.y + r6.x;
r9.xyzw = spotlight0ShadowSamplerReg_TEX.GatherCmp(spotlight0ShadowSamplerReg_CMP_s, r4.zw, r2.w, int2(5,5)).xyzw;
r4.xz = r9.zy * r4.xx;
r4.xz = r4.xz * r6.zz;
r4.zw = r9.wx * r6.zz + r4.xz;
r2.w = r7.w * r4.z + r6.x;
r2.w = r4.y * r4.w + r2.w;
r2.w = r7.w * r8.y + r2.w;
r4.x = r9.w * r7.y + r4.x;
r2.w = r4.y * r4.x + r2.w;
r1.z = r2.w / r7.x;
} else {
r1.y = r1.y == 3;
if (r1.y != 0) {
r1.y = r1.w * Spotlight0_ReverseZPerspective.y + Spotlight0_ReverseZPerspective.z;
r1.y = Spotlight0_ReverseZPerspective.x / r1.y;
r1.w = 1.000000e+000 / Spotlight0_Shadow_Params.x;
r1.w = 5.000000000e-001 * r1.w;
r4.xy = float2(-2.000000e+000,-2.000000e+000) + OnePixelStepForS0.zw;
r4.xy = r4.xy / OnePixelStepForS0.zw;
r6.xy = r4.xy * r1.ww;
r6.zw = -r6.xy;
r7.xyzw = r6.zyxy + r5.xyxy;
r2.w = spotlight0ShadowSamplerReg_TEX.Sample(spotlight0ShadowSamplerReg_SMP_s, r7.xy).x;
r4.z = spotlight0ShadowSamplerReg_TEX.Sample(spotlight0ShadowSamplerReg_SMP_s, r7.zw).x;
r6.xy = r6.xw + r5.xy;
r4.w = spotlight0ShadowSamplerReg_TEX.Sample(spotlight0ShadowSamplerReg_SMP_s, r6.xy).x;
r4.xy = -r1.ww * r4.xy + r5.xy;
r1.w = spotlight0ShadowSamplerReg_TEX.Sample(spotlight0ShadowSamplerReg_SMP_s, r4.xy).x;
r4.xy = r5.xy * OnePixelStepForS0.zw + float2(5.000000e-001,5.000000e-001);
r4.xy = frac(r4.xy);
r2.w = r2.w + -r1.w;
r1.w = r2.w * r4.y + r1.w;
r2.w = r4.z + -r4.w;
r2.w = r2.w * r4.y + r4.w;
r2.w = r2.w + -r1.w;
r1.w = r2.w * r4.x + r1.w;
r2.w = r1.y / Spotlight0_Shadow_Params.w;
r2.w = 1.000000000e+000 + -r2.w;
r2.w = -r2.w * r2.w + 1.000000000e+000;
r2.w = r2.w * -1.400000000e+001 + 1.600000000e+001;
r4.x = r1.y + -r1.w;
r4.x = saturate(2.500000000e+000 * r4.x);
r4.x = 1.000000000e+000 + -r4.x;
r3.z = dot(r4.xx, r3.zz);
r1.y = r1.w + -r1.y;
r1.y = r2.w * r1.y;
r1.y = 1.442695022e+000 * r1.y;
r1.y = exp2(r1.y);
r1.z = saturate(r1.y + r3.z);
} else {
r1.z = 1.000000000e+000;
}
}
}
}
r1.y = r1.z * v7.y + -v7.y;
r1.y = 1.000000000e+000 + r1.y;
r0.z = Spotlight0_ReverseZPerspective.w * r0.z + -1.000000000e+000;
r4.xyz = spotlight0ProjectiveReg_TEX.SampleLevel(spotlight0ProjectiveReg_SMP_s, r5.zw, r0.z).xyz;
r5.xyz = r4.xxx + -r4.xyz;
r4.xyz = Spotlight0_Shadow_Params.zzz * r5.xyz + r4.xyz;
r4.xyz = r4.xyz * r4.xyz;
r1.yzw = r4.xyz * r1.yyy;
r1.xyz = r1.yzw * r1.xxx;
r0.xyz = r0.xyw * r2.xyz + r3.xyw;
r0.xyz = r0.xyz * r1.xyz;
o0.xyz = HDR_EncodeScale.zzz * r0.xyz;
o0.w = 1.000000000e+000;
return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions:
//
// cbuffer cbDefaultXSC
// {
//
//   float4x4 ViewProj;                 // Offset:    0 Size:    64 [unused]
//   float4x4 ViewMatrix;               // Offset:   64 Size:    64 [unused]
//   float4x4 SecondaryProj;            // Offset:  128 Size:    64 [unused]
//   float4x4 SecondaryViewProj;        // Offset:  192 Size:    64 [unused]
//   float4x4 SecondaryInvViewProj;     // Offset:  256 Size:    64 [unused]
//   float4 ConstantColour;             // Offset:  320 Size:    16 [unused]
//   float4 Time;                       // Offset:  336 Size:    16 [unused]
//   float4 CameraPosition;             // Offset:  352 Size:    16
//   float4 InvProjectionParams;        // Offset:  368 Size:    16
//   float4 SecondaryInvProjectionParams;// Offset:  384 Size:    16
//   float4 ShaderDebugParams;          // Offset:  400 Size:    16 [unused]
//   float4 ToneMappingDebugParams;     // Offset:  416 Size:    16 [unused]
//   float4 HDR_EncodeScale2;           // Offset:  432 Size:    16 [unused]
//   float4 EmissiveSurfaceMultiplier;  // Offset:  448 Size:    16 [unused]
//   float4 AlphaLight_OffsetScale;     // Offset:  464 Size:    16 [unused]
//   float4 TessellationScaleFactor;    // Offset:  480 Size:    16 [unused]
//   float4 FogNearColour;              // Offset:  496 Size:    16 [unused]
//   float4 FogFarColour;               // Offset:  512 Size:    16 [unused]
//   float4 FogParams;                  // Offset:  528 Size:    16 [unused]
//   float4 AdvanceEnvironmentShaderDebugParams;// Offset:  544 Size:    16 [unused]
//   float4 SMAA_RTMetrics;             // Offset:  560 Size:    16 [unused]
//
// }
//
// cbuffer cbDefaultPSC
// {
//
//   float4x4 AlphaLight_WorldtoClipMatrix;// Offset:    0 Size:    64 [unused]
//   float4x4 AlphaLight_CliptoWorldMatrix;// Offset:   64 Size:    64 [unused]
//   float4x4 ProjectorMatrix;          // Offset:  128 Size:    64 [unused]
//   float4x4 MotionBlurCurrInvViewProjection;// Offset:  192 Size:    64 [unused]
//   float4x4 MotionBlurPrevViewProjection;// Offset:  256 Size:    64 [unused]
//   float4x4 MotionBlurPrevSecViewProjection;// Offset:  320 Size:    64 [unused]
//   float4x4 Spotlight0_Transform;     // Offset:  384 Size:    64
//   float4 TextureAnimation;           // Offset:  448 Size:    16 [unused]
//   float4 AmbientDiffuse;             // Offset:  464 Size:    16 [unused]
//   float4 EnvironmentDebugParams;     // Offset:  480 Size:    16 [unused]
//   float4 ShadowFilterESMWeights;     // Offset:  496 Size:    16 [unused]
//   float4 LegacyDofParams;            // Offset:  512 Size:    16 [unused]
//   float4 OnePixelStepForS0;          // Offset:  528 Size:    16
//   float4 RenderTargetSize;           // Offset:  544 Size:    16 [unused]
//   float4 ModelTrackerID;             // Offset:  560 Size:    16 [unused]
//   float4 Sharpness_Bloom_Controls;   // Offset:  576 Size:    16 [unused]
//   float4 Blur_Direction;             // Offset:  592 Size:    16 [unused]
//   float4 LightMeterDebugParams;      // Offset:  608 Size:    16 [unused]
//   float4 SourceResolution;           // Offset:  624 Size:    16 [unused]
//   float4 HDR_EncodeScale;            // Offset:  640 Size:    16
//   float4 OutputGamma;                // Offset:  656 Size:    16 [unused]
//   float4 AlphaLight_ScaleParams;     // Offset:  672 Size:    16 [unused]
//   float4 WrinkleMapWeights[6];       // Offset:  688 Size:    96 [unused]
//   float4 RadiosityCubeMapIdx;        // Offset:  784 Size:    16 [unused]
//   float4 HairShadingParams[8];       // Offset:  800 Size:   128 [unused]
//   float4 SkinShadingParams;          // Offset:  928 Size:    16 [unused]
//   float4 HDR_EncodeScale3;           // Offset:  944 Size:    16 [unused]
//   float4 ScreenResolution[4];        // Offset:  960 Size:    64 [unused]
//   float4 VelocityParams;             // Offset: 1024 Size:    16 [unused]
//   float4 DeferredConstColor;         // Offset: 1040 Size:    16 [unused]
//   float4 Spotlight0_Shadow_Params;   // Offset: 1056 Size:    16
//   float4 Spotlight0_ShadowMapDimensions;// Offset: 1072 Size:    16
//   float4 ShadowFilterType;           // Offset: 1088 Size:    16
//   float4 Spotlight0_ReverseZPerspective;// Offset: 1104 Size:    16
//   float4 SpacesuitVisorParams;       // Offset: 1120 Size:    16 [unused]
//   float4 Directional_Light_Colour;   // Offset: 1136 Size:    16 [unused]
//   float4 Directional_Light_Direction;// Offset: 1152 Size:    16 [unused]
//   float4 EnvironmentMap_Params;      // Offset: 1168 Size:    16 [unused]
//   float4 Spotlight0_Shadow_Bias_GoboScale;// Offset: 1184 Size:    16
//   float4 ScreenSpaceLightShaftParams1;// Offset: 1200 Size:    16 [unused]
//   float4 ScreenSpaceLightShaftParams2;// Offset: 1216 Size:    16 [unused]
//   float4 ScreenSpaceLightPosition;   // Offset: 1232 Size:    16 [unused]
//   float4 LensAndScreenCenter;        // Offset: 1248 Size:    16 [unused]
//   float4 ScaleAndScaleIn;            // Offset: 1264 Size:    16 [unused]
//   float4 HmdWarpParam;               // Offset: 1280 Size:    16 [unused]
//   float4 ChromAbParam;               // Offset: 1296 Size:    16 [unused]
//   float4 SMAA_SubsampleIndices;      // Offset: 1312 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// spotlight0ShadowSamplerReg_CMP  sampler_c      NA          NA    6        1
// frameSamplerReg_SMP               sampler      NA          NA    7        1
// depthSamplerReg_SMP               sampler      NA          NA    8        1
// normalSamplerReg_SMP              sampler      NA          NA   12        1
// specularSamplerReg_SMP            sampler      NA          NA   13        1
// spotlight0ShadowSamplerReg_SMP    sampler      NA          NA   14        1
// spotlight0ProjectiveReg_SMP       sampler      NA          NA   15        1
// frameSamplerReg_TEX               texture  float4          2d    7        1
// depthSamplerReg_TEX               texture  float4          2d    8        1
// normalSamplerReg_TEX              texture  float4          2d   12        1
// specularSamplerReg_TEX            texture  float4          2d   13        1
// spotlight0ShadowSamplerReg_TEX    texture  float4          2d   14        1
// spotlight0ProjectiveReg_TEX       texture  float4          2d   15        1
// cbDefaultXSC                      cbuffer      NA          NA    0        1
// cbDefaultPSC                      cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float      w
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyz
// TEXCOORD                 6   xyzw        6     NONE   float   xyz
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
// TEXCOORD                 8   xyzw        8     NONE   float   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[25], immediateIndexed
dcl_constantbuffer cb2[75], immediateIndexed
dcl_sampler s6, mode_comparison
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s12, mode_default
dcl_sampler s13, mode_default
dcl_sampler s14, mode_default
dcl_sampler s15, mode_default
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t14
dcl_resource_texture2d (float,float,float,float) t15
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.w
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyzw
dcl_input_ps linear v8.x
dcl_output o0.xyzw
dcl_temps 17
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), v3.w
mul r0.yz, r0.xxxx, v4.xxyx
mul r1.xyz, r0.xxxx, v2.yzwy
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.yzyy, t8.xyzw, s8
lt r0.w, r0.x, l(0.000000)
mad r1.w, -r0.x, cb0[24].y, cb0[24].z
div r1.w, cb0[24].x, r1.w
max r1.w, r1.w, l(0.000000)
mad r0.x, r0.x, cb0[23].y, cb0[23].z
div r0.x, cb0[23].x, r0.x
max r0.x, r0.x, l(0.000000)
movc r0.x, r0.w, r1.w, r0.x
mad r1.xyz, r1.xyzx, r0.xxxx, cb0[22].xyzx
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r0.yzyy, t12.xyzw, s12
mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.x, r2.xyzx, r2.xyzx
rsq r0.x, r0.x
mul r2.xyz, r0.xxxx, r2.xyzx
dp3 r0.x, v6.xyzx, v6.xyzx
rsq r0.x, r0.x
add r3.xyz, -r1.xyzx, v0.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r2.w, r0.w
mul r4.xyz, r2.wwww, r3.xyzx
dp3 r2.w, r4.xyzx, r2.xyzx
mad r3.xyz, v8.xxxx, v5.xyzx, r3.xyzx
dp3 r3.x, r3.xyzx, r3.xyzx
sqrt r3.x, r3.x
div_sat r3.x, v7.w, r3.x
add r3.y, -r2.w, l(1.000000)
add r3.z, r3.x, l(1.000000)
div r3.y, r3.y, r3.z
mul r3.z, r3.x, r3.y
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r0.yzyy, t7.xyzw, s7
sample_indexable(texture2d)(float,float,float,float) r0.yz, r0.yzyy, t13.zxyw, s13
mul r5.xyz, r5.xyzx, r5.xyzx
add r5.xyz, r5.xyzx, r5.xyzx
mad_sat r3.w, r0.z, l(2.000000), l(-1.000000)
mad_sat r0.z, -r0.z, l(2.000000), l(1.000000)
mul r0.z, r0.z, r0.z
max r4.w, r5.y, r5.x
max r5.w, r5.z, l(0.000100)
max r4.w, r4.w, r5.w
div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
mul r6.xyz, r4.wwww, r5.xyzx
mad r6.xyz, r3.wwww, r6.xyzx, r0.zzzz
sqrt r0.z, r0.w
add r0.w, r0.z, -v0.w
max r0.w, r0.w, l(0.000000)
div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), v1.w
mul_sat r3.w, r0.w, r3.w
mad r4.w, r3.w, l(-2.000000), l(3.000000)
mul r3.w, r3.w, r3.w
mad r3.w, -r4.w, r3.w, l(1.000000)
mad r0.w, r0.w, r0.w, v2.x
div r0.w, r3.w, r0.w
dp3 r3.w, r4.xyzx, v5.xyzx
mov_sat r3.w, -r3.w
add r4.w, -v4.z, v4.w
add r3.w, r3.w, -v4.z
div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
mul_sat r3.w, r3.w, r4.w
mad r4.w, r3.w, l(-2.000000), l(3.000000)
mul r3.w, r3.w, r3.w
mul r3.w, r3.w, r4.w
mul r0.w, r0.w, r3.w
mul r0.y, r0.y, v7.x
mad_sat r2.w, r3.y, r3.x, r2.w
mad r0.y, r0.y, l(-0.750000), l(0.750000)
mad r3.xyw, v6.xyxz, r0.xxxx, r4.xyxz
dp3 r0.x, r3.xywx, r3.xywx
rsq r0.x, r0.x
mul r3.xyw, r0.xxxx, r3.xyxw
mul r0.x, r0.y, r0.y
dp3 r2.x, r2.xyzx, r3.xywx
mul r2.x, r2.x, r2.x
mad r0.y, r0.y, r0.y, l(-1.000000)
mad r0.y, r2.x, r0.y, l(1.000000)
mul r0.y, r0.y, r0.y
div r0.x, r0.x, r0.y
mul r2.xyz, r0.xxxx, r6.xyzx
mul r3.xyw, r2.wwww, r5.xyxz
mul r2.xyz, r2.wwww, r2.xyzx
mul r0.xyw, r0.wwww, v1.xyxz
mul r3.xyw, r3.xyxw, r0.xyxw
mov r1.w, l(1.000000)
dp4 r4.x, r1.xyzw, cb2[24].xyzw
dp4 r4.y, r1.xyzw, cb2[25].xyzw
dp4 r4.z, r1.xyzw, cb2[26].xyzw
dp4 r1.x, r1.xyzw, cb2[27].xyzw
div r1.yzw, r4.xxyz, r1.xxxx
mul r5.xyw, r1.yzyz, l(0.500000, -0.500000, 0.000000, -0.500000)
mul r5.z, r1.y, cb2[74].y
add r5.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
mad r1.x, v7.z, r1.x, r4.z
ge r1.x, r1.x, l(0.000000)
and r1.x, r1.x, l(0x3f800000)
ftoi r1.y, cb2[68].x
ieq r1.z, r1.y, l(4)
if_nz r1.z
mad r1.z, r1.w, cb2[69].y, cb2[69].z
div r1.z, cb2[69].x, r1.z
add r1.z, r1.z, -cb2[74].x
mul r2.w, r1.z, cb2[69].y
mad r1.z, -r1.z, cb2[69].z, cb2[69].x
div r1.z, r1.z, r2.w
sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r5.xyxx, t14.xxxx, s6, r1.z
else
ieq r2.w, r1.y, l(1)
if_nz r2.w
ftoi r2.w, cb2[66].y
if_z r2.w
mov r1.z, l(1.000000)
else
mad r4.x, r1.w, cb2[69].y, cb2[69].z
div r4.x, cb2[69].x, r4.x
add r4.x, r4.x, -cb2[74].x
mul r4.y, r4.x, cb2[69].y
mad r4.x, -r4.x, cb2[69].z, cb2[69].x
div r4.x, r4.x, r4.y
ieq r4.y, r2.w, l(1)
if_nz r4.y
sample_c_lz_indexable(texture2d)(float,float,float,float) r1.z, r5.xyxx, t14.xxxx, s6, r4.x
else
div r4.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb2[66].x
mul r4.z, r4.y, l(0.500000)
iadd r4.w, r2.w, l(-1)
itof r4.w, r4.w
mul r4.z, r4.w, r4.z
mov r4.w, l(0)
mov r6.x, l(0)
loop
ige r6.y, r6.x, r2.w
breakc_nz r6.y
itof r7.y, r6.x
mov r6.y, r4.w
mov r6.z, l(0)
loop
ige r6.w, r6.z, r2.w
breakc_nz r6.w
itof r7.x, r6.z
mad r7.xz, r7.xxyx, r4.yyyy, -r4.zzzz
add r7.xz, r5.xxyx, r7.xxzx
sample_c_lz_indexable(texture2d)(float,float,float,float) r6.w, r7.xzxx, t14.xxxx, s6, r4.x
add r6.y, r6.w, r6.y
iadd r6.z, r6.z, l(1)
endloop
mov r4.w, r6.y
iadd r6.x, r6.x, l(1)
endloop
imul null, r2.w, r2.w, r2.w
itof r2.w, r2.w
div r1.z, r4.w, r2.w
endif
endif
else
ieq r2.w, r1.y, l(2)
if_nz r2.w
mad r2.w, r1.w, cb2[69].y, cb2[69].z
div r2.w, cb2[69].x, r2.w
add r2.w, r2.w, -cb2[74].x
mul r4.x, r2.w, cb2[69].y
mad r2.w, -r2.w, cb2[69].z, cb2[69].x
div r2.w, r2.w, r4.x
mad r4.xy, cb2[67].xyxx, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
round_ni r4.zw, r4.xxxy
add r4.xy, -r4.zwzz, r4.xyxx
mad r4.zw, -r4.xxxy, cb2[67].zzzw, r5.xxxy
gather4_aoffimmi_indexable(-5,-5,0)(texture2d)(float,float,float,float) r6.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r7.xyzw, r6.xyzw, r2.wwww
movc r7.xyzw, r7.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r8.x, r7.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
dp4 r6.x, r6.xyzw, r7.xyzw
gather4_aoffimmi_indexable(-3,-5,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r9.xyzw, r7.xyzw, r2.wwww
movc r9.xyzw, r9.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.y, r9.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.y, r8.x
dp4 r6.z, r7.xyzw, r9.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(-1,-5,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(1,-5,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(3,-5,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(5,-5,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(-5,-3,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(-3,-3,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(-1,-3,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(1,-3,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(3,-3,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(5,-3,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(-5,-1,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(-3,-1,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(-1,-1,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(1,-1,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(3,-1,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(5,-1,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(-5,1,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(-3,1,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(-1,1,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(1,1,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(3,1,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(5,1,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(-5,3,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(-3,3,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(-1,3,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(1,3,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(3,3,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(5,3,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(-5,5,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(-3,5,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(-1,5,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(1,5,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(3,5,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
gather4_aoffimmi_indexable(5,5,0)(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t14.xyzw, s14.x
ge r8.xyzw, r7.xyzw, r2.wwww
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
dp4 r6.z, r8.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.y, r6.z, r6.y
dp4 r6.z, r7.xyzw, r8.xyzw
add r6.x, r6.z, r6.x
lt r6.z, l(0.000000), r6.y
div r6.x, r6.x, r6.y
add r6.y, r2.w, -r6.x
mul r6.y, r6.y, cb2[67].x
mul r6.y, r6.y, l(0.100000)
div_sat r6.x, r6.y, r6.x
mul r6.x, r6.x, r6.x
and r6.x, r6.x, r6.z
mul r6.y, r6.x, r6.x
mul r6.z, r6.x, r6.y
mul r6.w, r6.y, l(3.000000)
add r7.x, -r6.x, l(1.000000)
mul r7.y, r6.w, r7.x
mul r7.y, r7.y, l(0.200000)
mad r7.z, r6.y, r6.x, r7.y
mul r7.w, r6.z, l(14.000000)
mad r7.w, r7.z, l(10.000000), r7.w
mul r8.x, r7.x, r7.x
mul r8.y, r6.x, r8.x
mul r8.zw, r8.yyyy, l(0.000000, 0.000000, 3.000000, 0.600000)
mad r8.zw, r6.yyyy, r6.xxxx, r8.zzzw
mad r8.zw, r6.wwww, r7.xxxx, r8.zzzw
mad r7.w, r8.w, l(7.000000), r7.w
add r7.w, r7.z, r7.w
mad r7.w, r6.z, l(2.000000), r7.w
add r7.w, r7.z, r7.w
add r7.w, r8.w, r7.w
mad r7.w, r8.z, l(5.000000), r7.w
add r7.w, r8.w, r7.w
add r7.w, r7.z, r7.w
mad r7.w, r6.z, l(2.000000), r7.w
add r7.w, r7.z, r7.w
add r7.w, r8.w, r7.w
add r7.w, r8.z, r7.w
mul r9.x, r7.x, r8.x
mad r9.x, r9.x, l(0.800000), r6.z
mad r9.x, r8.y, l(3.000000), r9.x
mad r9.x, r6.w, r7.x, r9.x
mad r7.w, r9.x, l(3.000000), r7.w
add r7.w, r8.z, r7.w
add r7.w, r8.w, r7.w
add r7.w, r7.z, r7.w
mad r7.w, r6.z, l(2.000000), r7.w
add r7.w, r7.z, r7.w
add r7.w, r8.w, r7.w
add r7.w, r8.z, r7.w
add r7.w, r9.x, r7.w
mad r8.x, r8.x, r7.x, r6.z
mad r8.x, r8.y, l(3.000000), r8.x
mad r6.w, r6.w, r7.x, r8.x
add r7.x, r6.w, r7.w
add r7.x, r9.x, r7.x
add r7.x, r8.z, r7.x
add r7.x, r8.w, r7.x
add r7.x, r7.z, r7.x
mad r7.x, r6.z, l(2.000000), r7.x
add r7.x, r7.z, r7.x
add r7.x, r8.w, r7.x
add r7.x, r8.z, r7.x
mad r7.x, r9.x, l(3.000000), r7.x
add r7.x, r8.z, r7.x
add r7.x, r8.w, r7.x
add r7.x, r7.z, r7.x
mad r7.x, r6.z, l(2.000000), r7.x
add r7.x, r7.z, r7.x
add r7.x, r8.w, r7.x
mad r7.x, r8.z, l(5.000000), r7.x
add r7.x, r8.w, r7.x
add r7.x, r7.z, r7.x
mad r7.x, r6.z, l(2.000000), r7.x
add r7.x, r7.z, r7.x
mad r7.x, r8.w, l(7.000000), r7.x
add r7.x, r7.z, r7.x
mad r7.x, r6.z, l(2.000000), r7.x
mad r7.x, r7.z, l(9.000000), r7.x
mad r7.x, r6.z, l(12.000000), r7.x
gather4_c_aoffimmi_indexable(-5,-5,0)(texture2d)(float,float,float,float) r10.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
add r7.w, -r4.y, l(1.000000)
mad r8.x, -r6.z, r4.x, r6.z
mul r9.yz, r8.xxxx, r10.wwxw
mad r9.yw, r10.zzzy, r6.zzzz, r9.yyyz
mul r8.y, r4.y, r9.w
mad r8.y, r7.w, r9.y, r8.y
gather4_c_aoffimmi_indexable(-3,-5,0)(texture2d)(float,float,float,float) r11.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
dp2 r9.y, r11.wzww, r6.zzzz
mad r8.y, r7.w, r9.y, r8.y
dp2 r9.y, r11.xyxx, r6.zzzz
mad r8.y, r4.y, r9.y, r8.y
gather4_c_aoffimmi_indexable(-1,-5,0)(texture2d)(float,float,float,float) r12.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
dp2 r9.y, r12.wzww, r6.zzzz
mad r8.y, r7.w, r9.y, r8.y
dp2 r9.y, r12.xyxx, r6.zzzz
mad r8.y, r4.y, r9.y, r8.y
gather4_c_aoffimmi_indexable(1,-5,0)(texture2d)(float,float,float,float) r13.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
dp2 r9.y, r13.wzww, r6.zzzz
mad r8.y, r7.w, r9.y, r8.y
dp2 r9.y, r13.xyxx, r6.zzzz
mad r8.y, r4.y, r9.y, r8.y
gather4_c_aoffimmi_indexable(3,-5,0)(texture2d)(float,float,float,float) r14.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
dp2 r9.y, r14.wzww, r6.zzzz
mad r8.y, r7.w, r9.y, r8.y
dp2 r9.y, r14.xyxx, r6.zzzz
mad r8.y, r4.y, r9.y, r8.y
gather4_c_aoffimmi_indexable(5,-5,0)(texture2d)(float,float,float,float) r15.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
mul r9.yw, r4.xxxx, r15.zzzy
mul r9.yw, r6.zzzz, r9.yyyw
mad r10.xz, r15.wwxw, r6.zzzz, r9.yywy
mad r8.y, r7.w, r10.x, r8.y
mad r8.y, r4.y, r10.z, r8.y
gather4_c_aoffimmi_indexable(-5,-3,0)(texture2d)(float,float,float,float) r16.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
mad r6.x, r6.y, r6.x, -r7.z
mad r6.x, r4.x, r6.x, r7.z
mul r10.xz, r6.xxxx, r16.yyzy
mad r10.xz, r16.xxwx, r8.xxxx, r10.xxzx
mad r6.y, r7.w, r10.z, r8.y
mad r6.y, r4.y, r10.x, r6.y
mad r8.y, r10.y, r6.x, r9.z
mad r6.y, r7.w, r8.y, r6.y
mad r6.y, r4.y, r10.z, r6.y
gather4_c_aoffimmi_indexable(-3,-3,0)(texture2d)(float,float,float,float) r16.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
add r8.y, r7.z, -r8.w
mad r8.y, r4.x, r8.y, r8.w
mul r9.yz, r8.yyyy, r16.wwxw
mad r10.yz, r16.zzyz, r8.wwww, r9.yyzy
mad r6.y, r7.w, r10.y, r6.y
mad r6.y, r4.y, r10.z, r6.y
dp2 r9.y, r11.xyxx, r7.zzzz
mad r6.y, r7.w, r9.y, r6.y
dp2 r9.y, r16.wzww, r7.zzzz
mad r6.y, r4.y, r9.y, r6.y
gather4_c_aoffimmi_indexable(-1,-3,0)(texture2d)(float,float,float,float) r11.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
dp2 r9.y, r11.wzww, r8.wwww
mad r6.y, r7.w, r9.y, r6.y
dp2 r9.y, r11.xyxx, r8.wwww
mad r6.y, r4.y, r9.y, r6.y
dp2 r9.y, r12.xyxx, r7.zzzz
mad r6.y, r7.w, r9.y, r6.y
dp2 r9.y, r11.wzww, r7.zzzz
mad r6.y, r4.y, r9.y, r6.y
gather4_c_aoffimmi_indexable(1,-3,0)(texture2d)(float,float,float,float) r12.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
dp2 r9.y, r12.wzww, r8.wwww
mad r6.y, r7.w, r9.y, r6.y
dp2 r9.y, r12.xyxx, r8.wwww
mad r6.y, r4.y, r9.y, r6.y
dp2 r9.y, r13.xyxx, r7.zzzz
mad r6.y, r7.w, r9.y, r6.y
dp2 r9.y, r12.wzww, r7.zzzz
mad r6.y, r4.y, r9.y, r6.y
gather4_c_aoffimmi_indexable(3,-3,0)(texture2d)(float,float,float,float) r13.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
add r9.y, -r7.z, r8.w
mad r9.y, r4.x, r9.y, r7.z
mul r10.yz, r9.yyyy, r13.zzyz
mad r10.yw, r13.wwwx, r8.wwww, r10.yyyz
mad r6.y, r7.w, r10.y, r6.y
mad r6.y, r4.y, r10.w, r6.y
dp2 r10.y, r14.xyxx, r7.zzzz
mad r6.y, r7.w, r10.y, r6.y
dp2 r10.y, r13.wzww, r7.zzzz
mad r6.y, r4.y, r10.y, r6.y
gather4_c_aoffimmi_indexable(5,-3,0)(texture2d)(float,float,float,float) r14.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
mad r7.y, r4.x, r7.y, r6.z
mul r10.yw, r4.xxxx, r14.yyyz
mul r10.yw, r6.zzzz, r10.yyyw
mad r10.yw, r14.xxxw, r7.yyyy, r10.yyyw
mad r6.y, r7.w, r10.w, r6.y
mad r6.y, r4.y, r10.y, r6.y
mad r9.w, r15.x, r7.y, r9.w
mad r6.y, r7.w, r9.w, r6.y
mad r6.y, r4.y, r10.w, r6.y
gather4_c_aoffimmi_indexable(-5,-1,0)(texture2d)(float,float,float,float) r14.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
mul r11.zw, r6.xxxx, r14.yyyz
mad r11.zw, r14.xxxw, r8.xxxx, r11.zzzw
mad r6.y, r7.w, r11.w, r6.y
mad r6.y, r4.y, r11.z, r6.y
mad r6.y, r7.w, r10.x, r6.y
mad r6.y, r4.y, r11.w, r6.y
gather4_c_aoffimmi_indexable(-3,-1,0)(texture2d)(float,float,float,float) r14.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
add r10.xw, -r8.zzzw, r8.wwwz
mad r10.xw, r4.xxxx, r10.xxxw, r8.zzzw
mul r12.zw, r10.xxxx, r14.yyyz
mad r12.zw, r14.xxxw, r8.yyyy, r12.zzzw
mad r6.y, r7.w, r12.w, r6.y
mad r6.y, r4.y, r12.z, r6.y
mad r9.z, r16.y, r10.x, r9.z
mad r6.y, r7.w, r9.z, r6.y
mad r6.y, r4.y, r12.w, r6.y
gather4_c_aoffimmi_indexable(-1,-1,0)(texture2d)(float,float,float,float) r14.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
add r9.z, r8.z, -r9.x
mad r9.z, r4.x, r9.z, r9.x
mul r13.yz, r9.zzzz, r14.wwxw
mad r13.yw, r14.zzzy, r9.xxxx, r13.yyyz
mad r6.y, r7.w, r13.y, r6.y
mad r6.y, r4.y, r13.w, r6.y
dp2 r9.w, r11.xyxx, r8.zzzz
mad r6.y, r7.w, r9.w, r6.y
dp2 r9.w, r14.wzww, r8.zzzz
mad r6.y, r4.y, r9.w, r6.y
gather4_c_aoffimmi_indexable(1,-1,0)(texture2d)(float,float,float,float) r15.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
add r9.w, -r8.z, r9.x
mad r9.w, r4.x, r9.w, r8.z
mul r11.xy, r9.wwww, r15.zyzz
mad r11.xw, r15.wwwx, r9.xxxx, r11.xxxy
mad r6.y, r7.w, r11.x, r6.y
mad r6.y, r4.y, r11.w, r6.y
dp2 r11.x, r12.xyxx, r8.zzzz
mad r6.y, r7.w, r11.x, r6.y
dp2 r11.x, r15.wzww, r8.zzzz
mad r6.y, r4.y, r11.x, r6.y
gather4_c_aoffimmi_indexable(3,-1,0)(texture2d)(float,float,float,float) r16.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
mul r11.xw, r9.yyyy, r16.yyyz
mad r11.xw, r16.xxxw, r10.wwww, r11.xxxw
mad r6.y, r7.w, r11.w, r6.y
mad r6.y, r4.y, r11.x, r6.y
mad r10.z, r13.x, r10.w, r10.z
mad r6.y, r7.w, r10.z, r6.y
mad r6.y, r4.y, r11.w, r6.y
gather4_c_aoffimmi_indexable(5,-1,0)(texture2d)(float,float,float,float) r16.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
mul r12.xy, r4.xxxx, r16.yzyy
mul r12.xy, r6.zzzz, r12.xyxx
mad r12.xy, r16.xwxx, r7.yyyy, r12.xyxx
mad r6.y, r7.w, r12.y, r6.y
mad r6.y, r4.y, r12.x, r6.y
mad r6.y, r7.w, r10.y, r6.y
mad r6.y, r4.y, r12.y, r6.y
gather4_c_aoffimmi_indexable(-5,1,0)(texture2d)(float,float,float,float) r16.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
mul r10.yz, r6.xxxx, r16.yyzy
mad r10.yz, r16.xxwx, r8.xxxx, r10.yyzy
mad r6.y, r7.w, r10.z, r6.y
mad r6.y, r4.y, r10.y, r6.y
mad r6.y, r7.w, r11.z, r6.y
mad r6.y, r4.y, r10.z, r6.y
gather4_c_aoffimmi_indexable(-3,1,0)(texture2d)(float,float,float,float) r16.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
mul r11.zw, r10.xxxx, r16.yyyz
mad r11.zw, r16.xxxw, r8.yyyy, r11.zzzw
mad r6.y, r7.w, r11.w, r6.y
mad r6.y, r4.y, r11.z, r6.y
mad r6.y, r7.w, r12.z, r6.y
mad r6.y, r4.y, r11.w, r6.y
gather4_c_aoffimmi_indexable(-1,1,0)(texture2d)(float,float,float,float) r16.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
mul r12.yz, r9.zzzz, r16.wwxw
mad r12.zw, r16.zzzy, r9.xxxx, r12.yyyz
mad r6.y, r7.w, r12.z, r6.y
mad r6.y, r4.y, r12.w, r6.y
add r9.z, -r6.w, r9.x
mad r9.z, r4.x, r9.z, r6.w
mad r10.z, r14.y, r9.z, r13.z
mad r6.y, r7.w, r10.z, r6.y
mad r9.z, r16.z, r9.z, r12.y
mad r6.y, r4.y, r9.z, r6.y
gather4_c_aoffimmi_indexable(1,1,0)(texture2d)(float,float,float,float) r13.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
mul r9.zw, r9.wwww, r13.zzzy
mad r12.yz, r13.wwxw, r9.xxxx, r9.zzwz
mad r6.y, r7.w, r12.y, r6.y
mad r6.y, r4.y, r12.z, r6.y
add r6.w, -r9.x, r6.w
mad r6.w, r4.x, r6.w, r9.x
mad r9.x, r15.x, r6.w, r11.y
mad r6.y, r7.w, r9.x, r6.y
mad r6.w, r13.w, r6.w, r9.z
mad r6.y, r4.y, r6.w, r6.y
gather4_c_aoffimmi_indexable(3,1,0)(texture2d)(float,float,float,float) r14.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
mul r9.xz, r9.yyyy, r14.yyzy
mad r9.xz, r14.xxwx, r10.wwww, r9.xxzx
mad r6.y, r7.w, r9.z, r6.y
mad r6.y, r4.y, r9.x, r6.y
mad r6.y, r7.w, r11.x, r6.y
mad r6.y, r4.y, r9.z, r6.y
gather4_c_aoffimmi_indexable(5,1,0)(texture2d)(float,float,float,float) r14.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
mul r9.zw, r4.xxxx, r14.yyyz
mul r9.zw, r6.zzzz, r9.zzzw
mad r9.zw, r14.xxxw, r7.yyyy, r9.zzzw
mad r6.y, r7.w, r9.w, r6.y
mad r6.y, r4.y, r9.z, r6.y
mad r6.y, r7.w, r12.x, r6.y
mad r6.y, r4.y, r9.w, r6.y
gather4_c_aoffimmi_indexable(-5,3,0)(texture2d)(float,float,float,float) r12.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
mul r11.xy, r6.xxxx, r12.yzyy
mad r11.xy, r12.xwxx, r8.xxxx, r11.xyxx
mad r6.y, r7.w, r11.y, r6.y
mad r6.y, r4.y, r11.x, r6.y
mad r6.y, r7.w, r10.y, r6.y
mad r6.y, r4.y, r11.y, r6.y
gather4_c_aoffimmi_indexable(-3,3,0)(texture2d)(float,float,float,float) r12.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
mul r10.yz, r8.yyyy, r12.wwxw
mad r11.yw, r12.zzzy, r8.wwww, r10.yyyz
mad r6.y, r7.w, r11.y, r6.y
mad r6.y, r4.y, r11.w, r6.y
mad r6.y, r7.w, r11.z, r6.y
mad r6.w, r12.z, r10.x, r10.y
mad r6.y, r4.y, r6.w, r6.y
gather4_c_aoffimmi_indexable(-1,3,0)(texture2d)(float,float,float,float) r14.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
dp2 r6.w, r14.wzww, r8.wwww
mad r6.y, r7.w, r6.w, r6.y
dp2 r6.w, r14.xyxx, r8.wwww
mad r6.y, r4.y, r6.w, r6.y
dp2 r6.w, r16.xyxx, r8.zzzz
mad r6.y, r7.w, r6.w, r6.y
dp2 r6.w, r14.wzww, r8.zzzz
mad r6.y, r4.y, r6.w, r6.y
gather4_c_aoffimmi_indexable(1,3,0)(texture2d)(float,float,float,float) r15.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
dp2 r6.w, r15.wzww, r8.wwww
mad r6.y, r7.w, r6.w, r6.y
dp2 r6.w, r15.xyxx, r8.wwww
mad r6.y, r4.y, r6.w, r6.y
dp2 r6.w, r13.xyxx, r8.zzzz
mad r6.y, r7.w, r6.w, r6.y
dp2 r6.w, r15.wzww, r8.zzzz
mad r6.y, r4.y, r6.w, r6.y
gather4_c_aoffimmi_indexable(3,3,0)(texture2d)(float,float,float,float) r13.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
mul r8.yz, r9.yyyy, r13.zzyz
mad r8.zw, r13.wwwx, r8.wwww, r8.yyyz
mad r6.y, r7.w, r8.z, r6.y
mad r6.y, r4.y, r8.w, r6.y
mad r6.y, r7.w, r9.x, r6.y
mad r6.w, r13.w, r10.w, r8.y
mad r6.y, r4.y, r6.w, r6.y
gather4_c_aoffimmi_indexable(5,3,0)(texture2d)(float,float,float,float) r10.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
mul r8.yz, r4.xxxx, r10.yyzy
mul r8.yz, r6.zzzz, r8.yyzy
mad r8.yz, r10.xxwx, r7.yyyy, r8.yyzy
mad r6.y, r7.w, r8.z, r6.y
mad r6.y, r4.y, r8.y, r6.y
mad r6.y, r7.w, r9.z, r6.y
mad r6.y, r4.y, r8.z, r6.y
gather4_c_aoffimmi_indexable(-5,5,0)(texture2d)(float,float,float,float) r9.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
mul r8.xz, r8.xxxx, r9.wwxw
mad r8.zw, r9.zzzy, r6.zzzz, r8.xxxz
mad r6.y, r7.w, r8.z, r6.y
mad r6.y, r4.y, r8.w, r6.y
mad r6.y, r7.w, r11.x, r6.y
mad r6.x, r9.z, r6.x, r8.x
mad r6.x, r4.y, r6.x, r6.y
gather4_c_aoffimmi_indexable(-3,5,0)(texture2d)(float,float,float,float) r9.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
dp2 r6.y, r9.wzww, r6.zzzz
mad r6.x, r7.w, r6.y, r6.x
dp2 r6.y, r9.xyxx, r6.zzzz
mad r6.x, r4.y, r6.y, r6.x
dp2 r6.y, r12.xyxx, r7.zzzz
mad r6.x, r7.w, r6.y, r6.x
dp2 r6.y, r9.wzww, r7.zzzz
mad r6.x, r4.y, r6.y, r6.x
gather4_c_aoffimmi_indexable(-1,5,0)(texture2d)(float,float,float,float) r9.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
dp2 r6.y, r9.wzww, r6.zzzz
mad r6.x, r7.w, r6.y, r6.x
dp2 r6.y, r9.xyxx, r6.zzzz
mad r6.x, r4.y, r6.y, r6.x
dp2 r6.y, r14.xyxx, r7.zzzz
mad r6.x, r7.w, r6.y, r6.x
dp2 r6.y, r9.wzww, r7.zzzz
mad r6.x, r4.y, r6.y, r6.x
gather4_c_aoffimmi_indexable(1,5,0)(texture2d)(float,float,float,float) r9.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
dp2 r6.y, r9.wzww, r6.zzzz
mad r6.x, r7.w, r6.y, r6.x
dp2 r6.y, r9.xyxx, r6.zzzz
mad r6.x, r4.y, r6.y, r6.x
dp2 r6.y, r15.xyxx, r7.zzzz
mad r6.x, r7.w, r6.y, r6.x
dp2 r6.y, r9.wzww, r7.zzzz
mad r6.x, r4.y, r6.y, r6.x
gather4_c_aoffimmi_indexable(3,5,0)(texture2d)(float,float,float,float) r9.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
dp2 r6.y, r9.wzww, r6.zzzz
mad r6.x, r7.w, r6.y, r6.x
dp2 r6.y, r9.xyxx, r6.zzzz
mad r6.x, r4.y, r6.y, r6.x
dp2 r6.y, r13.xyxx, r7.zzzz
mad r6.x, r7.w, r6.y, r6.x
dp2 r6.y, r9.wzww, r7.zzzz
mad r6.x, r4.y, r6.y, r6.x
gather4_c_aoffimmi_indexable(5,5,0)(texture2d)(float,float,float,float) r9.xyzw, r4.zwzz, t14.xyzw, s6.x, r2.w
mul r4.xz, r4.xxxx, r9.zzyz
mul r4.xz, r6.zzzz, r4.xxzx
mad r4.zw, r9.wwwx, r6.zzzz, r4.xxxz
mad r2.w, r7.w, r4.z, r6.x
mad r2.w, r4.y, r4.w, r2.w
mad r2.w, r7.w, r8.y, r2.w
mad r4.x, r9.w, r7.y, r4.x
mad r2.w, r4.y, r4.x, r2.w
div r1.z, r2.w, r7.x
else
ieq r1.y, r1.y, l(3)
if_nz r1.y
mad r1.y, r1.w, cb2[69].y, cb2[69].z
div r1.y, cb2[69].x, r1.y
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb2[66].x
mul r1.w, r1.w, l(0.500000)
add r4.xy, cb2[33].zwzz, l(-2.000000, -2.000000, 0.000000, 0.000000)
div r4.xy, r4.xyxx, cb2[33].zwzz
mul r6.xy, r1.wwww, r4.xyxx
mov r6.zw, -r6.xxxy
add r7.xyzw, r5.xyxy, r6.zyxy
sample_indexable(texture2d)(float,float,float,float) r2.w, r7.xyxx, t14.yzwx, s14
sample_indexable(texture2d)(float,float,float,float) r4.z, r7.zwzz, t14.yzxw, s14
add r6.xy, r5.xyxx, r6.xwxx
sample_indexable(texture2d)(float,float,float,float) r4.w, r6.xyxx, t14.yzwx, s14
mad r4.xy, -r1.wwww, r4.xyxx, r5.xyxx
sample_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t14.yzwx, s14
mad r4.xy, r5.xyxx, cb2[33].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
frc r4.xy, r4.xyxx
add r2.w, -r1.w, r2.w
mad r1.w, r2.w, r4.y, r1.w
add r2.w, -r4.w, r4.z
mad r2.w, r2.w, r4.y, r4.w
add r2.w, -r1.w, r2.w
mad r1.w, r2.w, r4.x, r1.w
div r2.w, r1.y, cb2[66].w
add r2.w, -r2.w, l(1.000000)
mad r2.w, -r2.w, r2.w, l(1.000000)
mad r2.w, r2.w, l(-14.000000), l(16.000000)
add r4.x, -r1.w, r1.y
mul_sat r4.x, r4.x, l(2.500000)
add r4.x, -r4.x, l(1.000000)
dp2 r3.z, r4.xxxx, r3.zzzz
add r1.y, -r1.y, r1.w
mul r1.y, r1.y, r2.w
mul r1.y, r1.y, l(1.442695)
exp r1.y, r1.y
add_sat r1.z, r3.z, r1.y
else
mov r1.z, l(1.000000)
endif
endif
endif
endif
mad r1.y, r1.z, v7.y, -v7.y
add r1.y, r1.y, l(1.000000)
mad r0.z, cb2[69].w, r0.z, l(-1.000000)
sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r5.zwzz, t15.xyzw, s15, r0.z
add r5.xyz, -r4.xyzx, r4.xxxx
mad r4.xyz, cb2[66].zzzz, r5.xyzx, r4.xyzx
mul r4.xyz, r4.xyzx, r4.xyzx
mul r1.yzw, r1.yyyy, r4.xxyz
mul r1.xyz, r1.xxxx, r1.yzwy
mad r0.xyz, r0.xywx, r2.xyzx, r3.xywx
mul r0.xyz, r1.xyzx, r0.xyzx
mul o0.xyz, r0.xyzx, cb2[40].zzzz
mov o0.w, l(1.000000)
ret
// Approximately 855 instruction slots used
 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
