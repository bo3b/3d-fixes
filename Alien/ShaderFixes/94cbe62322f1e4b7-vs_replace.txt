
cbuffer cbDefaultXSC : register(b0)
{
  float4x4 ViewProj : packoffset(c0);
  float4x4 ViewMatrix : packoffset(c4);
  float4x4 SecondaryProj : packoffset(c8);
  float4x4 SecondaryViewProj : packoffset(c12);
  float4x4 SecondaryInvViewProj : packoffset(c16);
  float4 ConstantColour : packoffset(c20);
  float4 Time : packoffset(c21);
  float4 CameraPosition : packoffset(c22);
  float4 InvProjectionParams : packoffset(c23);
  float4 SecondaryInvProjectionParams : packoffset(c24);
  float4 ShaderDebugParams : packoffset(c25);
  float4 ToneMappingDebugParams : packoffset(c26);
  float4 HDR_EncodeScale2 : packoffset(c27);
  float4 EmissiveSurfaceMultiplier : packoffset(c28);
  float4 AlphaLight_OffsetScale : packoffset(c29);
  float4 TessellationScaleFactor : packoffset(c30);
  float4 FogNearColour : packoffset(c31);
  float4 FogFarColour : packoffset(c32);
  float4 FogParams : packoffset(c33);
  float4 AdvanceEnvironmentShaderDebugParams : packoffset(c34);
  float4 SMAA_RTMetrics : packoffset(c35);
}

cbuffer cbDefaultVSC : register(b1)
{
  float4x4 ProjMatrix : packoffset(c0);
  float4x4 TextureTransform : packoffset(c4);
  float4x4 InvViewProj : packoffset(c8);
  float4x4 PrevViewProj : packoffset(c12);
  float4x4 PrevSecViewProj : packoffset(c16);
  float4 TextureScaleBias : packoffset(c20);
  float4 RenderTargetSizeVS : packoffset(c21);
  float4 RenderTargetResolutionVS : packoffset(c22);
  float4 MorphTargetParams : packoffset(c23);
  float4 OnePixelStepForS0VS : packoffset(c24);
  float4 ScreenRes[2] : packoffset(c25);
  float4 ClearSurfaceColor : packoffset(c27);
  float4 ClearSurfaceDepth : packoffset(c28);
  float4 VertexDepthClamp : packoffset(c29);
  float4 FlareScreenAspect : packoffset(c30);
  float4 DecalParams : packoffset(c31);
  float4 UserClipPlane0 : packoffset(c32);
  float4 UserClipPlane1 : packoffset(c33);
  float4 UserClipPlane2 : packoffset(c34);
  float4 UserClipPlane3 : packoffset(c35);
  float4 DecalScaleParams : packoffset(c36);
  float4 MipLevel : packoffset(c37);
}

cbuffer cbModelVSC : register(b4)
{
  float4 VertexScale : packoffset(c0);
}

cbuffer cbUbershaderXSC : register(b5)
{
  float4 rp_parameter_vs[32] : packoffset(c0);
  float4 rp_parameter_ps[32] : packoffset(c32);
}

cbuffer cbInstanceXSC : register(b10)
{
  float4x4 WorldMatrix : packoffset(c0);
  float4 LightmapTransform : packoffset(c4);
  float4 RInstConstants[6] : packoffset(c5);
  float4 RadiosityProbeTexcoordAndScale : packoffset(c11);
}

Texture2D<float4> StereoParams : register(t125);

void main(
  float3 v0 : POSITION0,
  float3 v1 : NORMAL0,
  float2 v2 : TEXCOORD0,
  float4 v3 : COLOR0,
  out float4 o0 : TEXCOORD0,
  out float4 o1 : TEXCOORD1,
  out float4 o2 : TEXCOORD2,
  out float4 o3 : TEXCOORD3,
  out float4 o4 : TEXCOORD4,
  out float4 o5 : TEXCOORD5,
  out float4 o9 : TEXCOORD9,
  out float4 o10 : TEXCOORD10,
  out float4 o11 : TEXCOORD11,
  out float4 o12 : TEXCOORD12, 
  out float4 o6 : COLOR0,
  out float4 o7 : SV_Position0)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask;
  
o9.xyzw = InvViewProj._m00_m10_m20_m30;
o10.xyzw = InvViewProj._m01_m11_m21_m31;
o11.xyzw = InvViewProj._m02_m12_m22_m32;
o12.xyzw = InvViewProj._m03_m13_m23_m33;
  
  
  o0.x = RInstConstants[2].x;
  o0.yz = float2(1.600000e+001,1.600000e+001) * v2.xy;
  r0.w = 1.000000000e+000;
  r1.xyz = VertexScale.xxx * v0.xyz;
  r1.w = 1.000000000e+000;
  r0.x = dot(r1.xyzw, WorldMatrix._m00_m10_m20_m30);
  r0.y = dot(r1.xyzw, WorldMatrix._m01_m11_m21_m31);
  r0.z = dot(r1.xyzw, WorldMatrix._m02_m12_m22_m32);
  r1.x = dot(r0.xyzw, ViewProj._m02_m12_m22_m32);
  r1.y = dot(r0.xyzw, ViewProj._m03_m13_m23_m33);
  r2.z = min(r1.y, r1.x);
  r2.x = dot(r0.xyzw, ViewProj._m00_m10_m20_m30);
  r2.y = dot(r0.xyzw, ViewProj._m01_m11_m21_m31);
  r0.w = dot(r0.xyzw, ViewMatrix._m02_m12_m22_m32);
  r3.xyzw = r2.zxyz / r1.yyyy;
  o7.xyz = r2.xyz;
  r1.x = r3.x * InvProjectionParams.y + InvProjectionParams.z;
  o0.w = InvProjectionParams.x / r1.x;
  r2.x = WorldMatrix._m10;
  r2.y = WorldMatrix._m11;
  r2.z = WorldMatrix._m12;
  r1.x = dot(r2.xyz, r2.xyz);
  r1.x = rsqrt(r1.x);
  r1.xzw = r2.xyz * r1.xxx;
  r2.xyz = CameraPosition.xyz + -r0.xyz;
  o4.xyz = r0.xyz;
  r0.xyz = r1.xzw * rp_parameter_vs[0].yyy + r2.xyz;
  r0.x = dot(r0.xyz, r1.xzw);
  o1.w = abs(r0.x);
  r0.x = dot(r2.xyz, r2.xyz);
  r0.x = rsqrt(r0.x);
  r0.xyz = r2.xyz * r0.xxx;
  r2.x = dot(v1.xyz, WorldMatrix._m00_m10_m20);
  r2.y = dot(v1.xyz, WorldMatrix._m01_m11_m21);
  r2.z = dot(v1.xyz, WorldMatrix._m02_m12_m22);
  r0.x = dot(r0.xyz, r2.xyz);
  o2.xyz = r2.xyz;
  r0.y = RInstConstants[0].z * rp_parameter_vs[1].x;
  r0.z = -rp_parameter_vs[1].x * RInstConstants[0].z + 1.000000000e+000;
  o1.y = r0.y * abs(r0.x) + r0.z;
  o1.z = RInstConstants[2].y;
  r0.x = rp_parameter_vs[0].w * RInstConstants[0].y + 9.999999747e-006;
  o1.x = r0.w / r0.x;
  o2.w = 0.000000000e+000;
  r0.x = r3.z / ProjMatrix._m11;
  r0.xyz = ViewMatrix._m01_m11_m21 * r0.xxx;
  r0.w = r3.y / ProjMatrix._m00;
  r1.x = r3.w / r3.w;
  r0.xyz = ViewMatrix._m00_m10_m20 * r0.www + r0.xyz;
  r0.xyz = ViewMatrix._m02_m12_m22 * r1.xxx + r0.xyz;
  o3.xyz = r0.xyz * r1.yyy;
  o3.w = r1.y;
  o7.w = r1.y;
  o4.w = RInstConstants[0].w;
  o5.x = RInstConstants[1].x;
  o5.yzw = float3(0.000000e+000,0.000000e+000,0.000000e+000);
  o6.xyz = RInstConstants[1].yzw * v3.xyz;
  o6.w = v3.w;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer cbDefaultXSC
// {
//
//   float4x4 ViewProj;                 // Offset:    0 Size:    64
//   float4x4 ViewMatrix;               // Offset:   64 Size:    64
//   float4x4 SecondaryProj;            // Offset:  128 Size:    64 [unused]
//   float4x4 SecondaryViewProj;        // Offset:  192 Size:    64 [unused]
//   float4x4 SecondaryInvViewProj;     // Offset:  256 Size:    64 [unused]
//   float4 ConstantColour;             // Offset:  320 Size:    16 [unused]
//   float4 Time;                       // Offset:  336 Size:    16 [unused]
//   float4 CameraPosition;             // Offset:  352 Size:    16
//   float4 InvProjectionParams;        // Offset:  368 Size:    16
//   float4 SecondaryInvProjectionParams;// Offset:  384 Size:    16 [unused]
//   float4 ShaderDebugParams;          // Offset:  400 Size:    16 [unused]
//   float4 ToneMappingDebugParams;     // Offset:  416 Size:    16 [unused]
//   float4 HDR_EncodeScale2;           // Offset:  432 Size:    16 [unused]
//   float4 EmissiveSurfaceMultiplier;  // Offset:  448 Size:    16 [unused]
//   float4 AlphaLight_OffsetScale;     // Offset:  464 Size:    16 [unused]
//   float4 TessellationScaleFactor;    // Offset:  480 Size:    16 [unused]
//   float4 FogNearColour;              // Offset:  496 Size:    16 [unused]
//   float4 FogFarColour;               // Offset:  512 Size:    16 [unused]
//   float4 FogParams;                  // Offset:  528 Size:    16 [unused]
//   float4 AdvanceEnvironmentShaderDebugParams;// Offset:  544 Size:    16 [unused]
//   float4 SMAA_RTMetrics;             // Offset:  560 Size:    16 [unused]
//
// }
//
// cbuffer cbDefaultVSC
// {
//
//   float4x4 ProjMatrix;               // Offset:    0 Size:    64
//   float4x4 TextureTransform;         // Offset:   64 Size:    64 [unused]
//   float4x4 InvViewProj;              // Offset:  128 Size:    64 [unused]
//   float4x4 PrevViewProj;             // Offset:  192 Size:    64 [unused]
//   float4x4 PrevSecViewProj;          // Offset:  256 Size:    64 [unused]
//   float4 TextureScaleBias;           // Offset:  320 Size:    16 [unused]
//   float4 RenderTargetSizeVS;         // Offset:  336 Size:    16 [unused]
//   float4 RenderTargetResolutionVS;   // Offset:  352 Size:    16 [unused]
//   float4 MorphTargetParams;          // Offset:  368 Size:    16 [unused]
//   float4 OnePixelStepForS0VS;        // Offset:  384 Size:    16 [unused]
//   float4 ScreenRes[2];               // Offset:  400 Size:    32 [unused]
//   float4 ClearSurfaceColor;          // Offset:  432 Size:    16 [unused]
//   float4 ClearSurfaceDepth;          // Offset:  448 Size:    16 [unused]
//   float4 VertexDepthClamp;           // Offset:  464 Size:    16 [unused]
//   float4 FlareScreenAspect;          // Offset:  480 Size:    16 [unused]
//   float4 DecalParams;                // Offset:  496 Size:    16 [unused]
//   float4 UserClipPlane0;             // Offset:  512 Size:    16 [unused]
//   float4 UserClipPlane1;             // Offset:  528 Size:    16 [unused]
//   float4 UserClipPlane2;             // Offset:  544 Size:    16 [unused]
//   float4 UserClipPlane3;             // Offset:  560 Size:    16 [unused]
//   float4 DecalScaleParams;           // Offset:  576 Size:    16 [unused]
//   float4 MipLevel;                   // Offset:  592 Size:    16 [unused]
//
// }
//
// cbuffer cbModelVSC
// {
//
//   float4 VertexScale;                // Offset:    0 Size:    16
//
// }
//
// cbuffer cbUbershaderXSC
// {
//
//   float4 rp_parameter_vs[32];        // Offset:    0 Size:   512
//   float4 rp_parameter_ps[32];        // Offset:  512 Size:   512 [unused]
//
// }
//
// cbuffer cbInstanceXSC
// {
//
//   float4x4 WorldMatrix;              // Offset:    0 Size:    64
//   float4 LightmapTransform;          // Offset:   64 Size:    16 [unused]
//   float4 RInstConstants[6];          // Offset:   80 Size:    96
//   float4 RadiosityProbeTexcoordAndScale;// Offset:  176 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// cbDefaultXSC                      cbuffer      NA          NA    0        1
// cbDefaultVSC                      cbuffer      NA          NA    1        1
// cbModelVSC                        cbuffer      NA          NA    4        1
// cbUbershaderXSC                   cbuffer      NA          NA    5        1
// cbInstanceXSC                     cbuffer      NA          NA   10        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// COLOR                    0   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// COLOR                    0   xyzw        6     NONE   float   xyzw
// SV_Position              0   xyzw        7      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[24], immediateIndexed
dcl_constantbuffer cb1[2], immediateIndexed
dcl_constantbuffer cb4[1], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb10[8], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xy
dcl_input v3.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output_siv o7.xyzw, position
dcl_temps 4
mov o0.x, cb10[7].x
mul o0.yz, v2.xxyx, l(0.000000, 16.000000, 16.000000, 0.000000)
mov r0.w, l(1.000000)
mul r1.xyz, v0.xyzx, cb4[0].xxxx
mov r1.w, l(1.000000)
dp4 r0.x, r1.xyzw, cb10[0].xyzw
dp4 r0.y, r1.xyzw, cb10[1].xyzw
dp4 r0.z, r1.xyzw, cb10[2].xyzw
dp4 r1.x, r0.xyzw, cb0[2].xyzw
dp4 r1.y, r0.xyzw, cb0[3].xyzw
min r2.z, r1.y, r1.x
dp4 r2.x, r0.xyzw, cb0[0].xyzw
dp4 r2.y, r0.xyzw, cb0[1].xyzw
dp4 r0.w, r0.xyzw, cb0[6].xyzw
div r3.xyzw, r2.zxyz, r1.yyyy
mov o7.xyz, r2.xyzx
mad r1.x, r3.x, cb0[23].y, cb0[23].z
div o0.w, cb0[23].x, r1.x
mov r2.x, cb10[0].y
mov r2.y, cb10[1].y
mov r2.z, cb10[2].y
dp3 r1.x, r2.xyzx, r2.xyzx
rsq r1.x, r1.x
mul r1.xzw, r1.xxxx, r2.xxyz
add r2.xyz, -r0.xyzx, cb0[22].xyzx
mov o4.xyz, r0.xyzx
mad r0.xyz, r1.xzwx, cb5[0].yyyy, r2.xyzx
dp3 r0.x, r0.xyzx, r1.xzwx
mov o1.w, |r0.x|
dp3 r0.x, r2.xyzx, r2.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r2.xyzx
dp3 r2.x, v1.xyzx, cb10[0].xyzx
dp3 r2.y, v1.xyzx, cb10[1].xyzx
dp3 r2.z, v1.xyzx, cb10[2].xyzx
dp3 r0.x, r0.xyzx, r2.xyzx
mov o2.xyz, r2.xyzx
mul r0.y, cb5[1].x, cb10[5].z
mad r0.z, -cb5[1].x, cb10[5].z, l(1.000000)
mad o1.y, r0.y, |r0.x|, r0.z
mov o1.z, cb10[7].y
mad r0.x, cb5[0].w, cb10[5].y, l(0.000010)
div o1.x, r0.w, r0.x
mov o2.w, l(0)
div r0.x, r3.z, cb1[1].y
mul r0.xyz, r0.xxxx, cb0[5].xyzx
div r0.w, r3.y, cb1[0].x
div r1.x, r3.w, r3.w
mad r0.xyz, cb0[4].xyzx, r0.wwww, r0.xyzx
mad r0.xyz, cb0[6].xyzx, r1.xxxx, r0.xyzx
mul o3.xyz, r1.yyyy, r0.xyzx
mov o3.w, r1.y
mov o7.w, r1.y
mov o4.w, cb10[5].w
mov o5.x, cb10[6].x
mov o5.yzw, l(0,0,0,0)
mul o6.xyz, v3.xyzx, cb10[6].yzwy
mov o6.w, v3.w
ret 
// Approximately 59 instruction slots used
 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
